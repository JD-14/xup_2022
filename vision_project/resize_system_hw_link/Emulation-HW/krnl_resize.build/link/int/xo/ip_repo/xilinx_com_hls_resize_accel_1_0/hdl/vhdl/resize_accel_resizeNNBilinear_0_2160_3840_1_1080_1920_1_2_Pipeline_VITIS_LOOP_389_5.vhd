-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resize_accel_resizeNNBilinear_0_2160_3840_1_1080_1920_1_2_Pipeline_VITIS_LOOP_389_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_mat_420_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_mat_420_empty_n : IN STD_LOGIC;
    in_mat_420_read : OUT STD_LOGIC;
    out_mat_421_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_mat_421_full_n : IN STD_LOGIC;
    out_mat_421_write : OUT STD_LOGIC;
    read_pixel : IN STD_LOGIC_VECTOR (7 downto 0);
    indexy_V : IN STD_LOGIC_VECTOR (16 downto 0);
    nextYScale_V : IN STD_LOGIC_VECTOR (16 downto 0);
    ret_V_17 : IN STD_LOGIC_VECTOR (16 downto 0);
    loop_col_count : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp273 : IN STD_LOGIC_VECTOR (0 downto 0);
    line_buffer_V_0_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_0_0_ce0 : OUT STD_LOGIC;
    line_buffer_V_0_0_we0 : OUT STD_LOGIC;
    line_buffer_V_0_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_V_0_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_V_0_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_0_0_ce1 : OUT STD_LOGIC;
    line_buffer_V_0_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_V_1_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_1_0_ce0 : OUT STD_LOGIC;
    line_buffer_V_1_0_we0 : OUT STD_LOGIC;
    line_buffer_V_1_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_V_1_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_V_1_0_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    line_buffer_V_1_0_ce1 : OUT STD_LOGIC;
    line_buffer_V_1_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    tmp_V : IN STD_LOGIC_VECTOR (31 downto 0);
    first_row_index_5 : IN STD_LOGIC_VECTOR (31 downto 0);
    trunc_ln3 : IN STD_LOGIC_VECTOR (47 downto 0);
    indexy_pre_V : IN STD_LOGIC_VECTOR (21 downto 0);
    add_i_i_i_i_i199_i : IN STD_LOGIC_VECTOR (16 downto 0);
    ret_V_3_cast : IN STD_LOGIC_VECTOR (16 downto 0);
    p_Result_s : IN STD_LOGIC;
    indexy_pre_V_cast : IN STD_LOGIC_VECTOR (23 downto 0);
    shl_i_i_i_i_i : IN STD_LOGIC_VECTOR (53 downto 0);
    indexx_pre_V_1 : IN STD_LOGIC_VECTOR (41 downto 0);
    cmp89 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
    icmp_ln1061_1 : IN STD_LOGIC_VECTOR (0 downto 0);
    op2_assign_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    op2_assign : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp277 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (31 downto 0);
    read_pixel_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    read_pixel_1_out_ap_vld : OUT STD_LOGIC;
    indexy_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    indexy_V_1_out_ap_vld : OUT STD_LOGIC;
    nextYScale_V_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    nextYScale_V_1_out_ap_vld : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_din2 : OUT STD_LOGIC_VECTOR (47 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_dout0 : IN STD_LOGIC_VECTOR (41 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_ce : OUT STD_LOGIC );
end;


architecture behav of resize_accel_resizeNNBilinear_0_2160_3840_1_1080_1920_1_2_Pipeline_VITIS_LOOP_389_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal icmp_ln389_reg_1222 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_reg_1231 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_reg_1231_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op97_read_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal and_ln487_reg_1241 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op237_write_state16 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln389_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal in_mat_420_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal out_mat_421_blk_n : STD_LOGIC;
    signal reg_570 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln389_reg_1222_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_row_index_5_read_reg_1203 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1049_reg_1235 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_1235_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_2_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_576 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_582 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_1235_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_V_2_0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal cmp89_read_read_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp273_read_read_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_reg_1216 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_1_reg_1216_pp0_iter1_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal j_1_reg_1216_pp0_iter2_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal j_1_reg_1216_pp0_iter3_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal j_1_reg_1216_pp0_iter4_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal j_1_reg_1216_pp0_iter5_reg : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln389_reg_1222_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln737_fu_667_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1226 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1226_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1226_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1226_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1226_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1226_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1226_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln737_reg_1226_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln406_fu_677_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_reg_1231_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_reg_1231_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln406_reg_1231_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_1235_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_1235_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_1235_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_1235_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_1235_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_reg_1235_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln487_reg_1241_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_reg_1245_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_fu_711_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln486_reg_1249_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln395_fu_735_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal indexx_pre_V_fu_764_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal indexx_pre_V_reg_1258 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln_reg_1263 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln902_fu_782_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln902_reg_1270 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln712_fu_786_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln712_reg_1275 : STD_LOGIC_VECTOR (23 downto 0);
    signal idx_nxt_fu_866_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal idx_nxt_reg_1280 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_1_0_addr_gep_fu_402_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_0_addr_gep_fu_417_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_0_0_addr_gep_fu_424_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1315 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1315_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1315_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_V_reg_1315_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_1_0_addr_1_gep_fu_475_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_0_addr_1_gep_fu_483_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_0_0_addr_1_gep_fu_490_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wy_V_fu_913_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wy_V_reg_1351 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_8_fu_930_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_reg_1366 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_reg_1366_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_reg_1366_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_reg_1366_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_reg_1366_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_9_fu_980_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_9_reg_1371 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_9_reg_1371_pp0_iter10_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_10_fu_992_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_10_reg_1376 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_13_fu_1095_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_13_reg_1421 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_V_2_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_0_ce0 : STD_LOGIC;
    signal line_buffer_V_2_0_we0 : STD_LOGIC;
    signal line_buffer_V_2_0_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_V_2_0_ce1 : STD_LOGIC;
    signal grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ce : STD_LOGIC;
    signal grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ext_blocking_n : STD_LOGIC;
    signal grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_str_blocking_n : STD_LOGIC;
    signal grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_int_blocking_n : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call6 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call6 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call6 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call6 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call6 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call6 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call6 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call6 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call6 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call6 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call6 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call6 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp84 : BOOLEAN;
    signal ap_phi_mux_flag_write_phi_fu_503_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_flag_write_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_flag_write_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_flag_write_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_flag_write_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_flag_write_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_flag_write_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_flag_write_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_p_Val2_3_reg_514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_p_Val2_s_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_arrayidx18117515_load_065_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_arrayidx17315516_load_061_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln430_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln389_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln431_fu_892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal nextYScale_V_1_fu_164 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal tmp_fu_168 : STD_LOGIC_VECTOR (16 downto 0);
    signal ret_V_11_fu_659_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_fu_172 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_sig_allocacmp_j_1 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln389_fu_639_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal read_pixel_1_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_read_read_fu_244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln389_1_fu_629_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln902_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_11_fu_659_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_fu_651_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln408_fu_671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1049_fu_683_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1049_1_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln395_fu_732_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1548_fu_740_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_2_fu_744_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal sext_ln1548_fu_740_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal icmp_ln1547_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal indexx_pre_V_3_fu_757_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_2_fu_744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal indexx_pre_V_3_fu_757_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal icmp_ln902_1_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_4_fu_813_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Result_1_fu_801_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_1_fu_818_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal idx_1_fu_825_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln737_1_fu_832_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal rhs_1_fu_836_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal idx_fu_849_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal not_cmp_i_i173_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_853_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln428_fu_862_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_6_fu_844_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal rhs_fu_901_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_fu_908_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln225_1_fu_948_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln225_fu_944_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_9_fu_937_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln225_3_fu_962_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln225_2_fu_958_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_fu_952_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_8_fu_966_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln225_4_fu_972_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln225_5_fu_976_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_6_fu_986_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal Wxy_V_fu_1011_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1115_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal Wxy_V_fu_1011_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1122_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1129_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1138_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_V_fu_1033_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1245_3_fu_1040_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1245_fu_1043_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_8_fu_1047_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln902_1_fu_1071_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln882_1_fu_1053_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln902_2_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_9_fu_1081_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_6_fu_1063_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln901_3_fu_1087_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1115_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1115_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1122_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1129_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1138_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1115_ce : STD_LOGIC;
    signal grp_fu_1122_ce : STD_LOGIC;
    signal grp_fu_1129_ce : STD_LOGIC;
    signal grp_fu_1138_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_ext_blocking_sub_n : STD_LOGIC;
    signal ap_wait_0 : STD_LOGIC;
    signal ap_sub_ext_blocking_0 : STD_LOGIC;
    signal ap_str_blocking_sub_n : STD_LOGIC;
    signal ap_sub_str_blocking_0 : STD_LOGIC;
    signal ap_int_blocking_sub_n : STD_LOGIC;
    signal ap_sub_int_blocking_0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1115_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1115_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1122_p00 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1129_p00 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1138_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_91 : BOOLEAN;
    signal ap_condition_303 : BOOLEAN;
    signal ap_condition_587 : BOOLEAN;
    signal ap_condition_595 : BOOLEAN;
    signal ap_condition_1480 : BOOLEAN;
    signal ap_condition_579 : BOOLEAN;
    signal ap_condition_901 : BOOLEAN;
    signal ap_condition_596 : BOOLEAN;
    signal ap_condition_1492 : BOOLEAN;
    signal ap_condition_1495 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component resize_accel_scaleCompute_17_42_20_48_16_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        currindex : IN STD_LOGIC_VECTOR (31 downto 0);
        inscale : IN STD_LOGIC_VECTOR (47 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (41 downto 0);
        ap_ce : IN STD_LOGIC;
        ap_ext_blocking_n : OUT STD_LOGIC;
        ap_str_blocking_n : OUT STD_LOGIC;
        ap_int_blocking_n : OUT STD_LOGIC );
    end component;


    component resize_accel_mul_mul_12ns_12ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component resize_accel_mul_mul_12ns_9s_21_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component resize_accel_mac_muladd_12ns_9s_21s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component resize_accel_mac_muladd_12ns_10s_22s_23_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component resize_accel_resizeNNBilinear_0_2160_3840_1_1080_1920_1_2_Pipeline_VITIS_LOOP_389_5_line_bbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component resize_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    line_buffer_V_2_0_U : component resize_accel_resizeNNBilinear_0_2160_3840_1_1080_1920_1_2_Pipeline_VITIS_LOOP_389_5_line_bbkb
    generic map (
        DataWidth => 8,
        AddressRange => 3840,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_V_2_0_address0,
        ce0 => line_buffer_V_2_0_ce0,
        we0 => line_buffer_V_2_0_we0,
        d0 => read_pixel_1_fu_176,
        q0 => line_buffer_V_2_0_q0,
        address1 => line_buffer_V_2_0_address1,
        ce1 => line_buffer_V_2_0_ce1,
        q1 => line_buffer_V_2_0_q1);

    mul_mul_12ns_12ns_24_4_1_U78 : component resize_accel_mul_mul_12ns_12ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1115_p0,
        din1 => grp_fu_1115_p1,
        ce => grp_fu_1115_ce,
        dout => grp_fu_1115_p2);

    mul_mul_12ns_9s_21_4_1_U79 : component resize_accel_mul_mul_12ns_9s_21_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1122_p0,
        din1 => ret_6_fu_986_p2,
        ce => grp_fu_1122_ce,
        dout => grp_fu_1122_p2);

    mac_muladd_12ns_9s_21s_22_4_1_U80 : component resize_accel_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1129_p0,
        din1 => ret_10_reg_1376,
        din2 => grp_fu_1122_p2,
        ce => grp_fu_1129_ce,
        dout => grp_fu_1129_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U81 : component resize_accel_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1138_p0,
        din1 => ret_9_reg_1371_pp0_iter10_reg,
        din2 => grp_fu_1129_p3,
        ce => grp_fu_1138_ce,
        dout => grp_fu_1138_p3);

    flow_control_loop_pipe_sequential_init_U : component resize_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter14_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_flag_write_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((cmp89_read_read_fu_220_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((cmp89_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln406_fu_677_p2)))) then 
                ap_phi_reg_pp0_iter1_flag_write_reg_498 <= ap_const_lv1_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ap_phi_reg_pp0_iter1_flag_write_reg_498 <= ap_phi_reg_pp0_iter0_flag_write_reg_498;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter6_flag_write_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_91)) then 
                    ap_phi_reg_pp0_iter6_flag_write_reg_498 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter6_flag_write_reg_498 <= ap_phi_reg_pp0_iter5_flag_write_reg_498;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_arrayidx17315516_load_061_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1))) then 
                    ap_phi_reg_pp0_iter9_arrayidx17315516_load_061_reg_547 <= reg_570;
                elsif ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter9_arrayidx17315516_load_061_reg_547 <= reg_576;
                elsif (((icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0))) then 
                    ap_phi_reg_pp0_iter9_arrayidx17315516_load_061_reg_547 <= reg_582;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter8_arrayidx17315516_load_061_reg_547;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_arrayidx18117515_load_065_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1))) then 
                    ap_phi_reg_pp0_iter9_arrayidx18117515_load_065_reg_536 <= line_buffer_V_1_0_q1;
                elsif ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter9_arrayidx18117515_load_065_reg_536 <= line_buffer_V_2_0_q1;
                elsif (((icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0))) then 
                    ap_phi_reg_pp0_iter9_arrayidx18117515_load_065_reg_536 <= line_buffer_V_0_0_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter8_arrayidx18117515_load_065_reg_536;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_p_Val2_3_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1))) then 
                    ap_phi_reg_pp0_iter9_p_Val2_3_reg_514 <= line_buffer_V_2_0_q1;
                elsif ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter9_p_Val2_3_reg_514 <= line_buffer_V_0_0_q1;
                elsif (((icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0))) then 
                    ap_phi_reg_pp0_iter9_p_Val2_3_reg_514 <= line_buffer_V_1_0_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter8_p_Val2_3_reg_514;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_p_Val2_s_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1))) then 
                    ap_phi_reg_pp0_iter9_p_Val2_s_reg_525 <= reg_576;
                elsif ((ap_const_boolean_1 = ap_condition_303)) then 
                    ap_phi_reg_pp0_iter9_p_Val2_s_reg_525 <= reg_582;
                elsif (((icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0))) then 
                    ap_phi_reg_pp0_iter9_p_Val2_s_reg_525 <= reg_570;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter8_p_Val2_s_reg_525;
                end if;
            end if; 
        end if;
    end process;

    j_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1))) then 
                    j_fu_172 <= add_ln389_fu_639_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_172 <= ap_const_lv31_0;
                end if;
            end if; 
        end if;
    end process;

    nextYScale_V_1_fu_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1))) then 
                    nextYScale_V_1_fu_164 <= ret_V_17;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    nextYScale_V_1_fu_164 <= nextYScale_V;
                end if;
            end if; 
        end if;
    end process;

    read_pixel_1_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    read_pixel_1_fu_176 <= read_pixel;
                elsif ((ap_const_boolean_1 = ap_condition_1495)) then 
                    read_pixel_1_fu_176 <= in_mat_420_dout;
                end if;
            end if; 
        end if;
    end process;

    tmp_fu_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1))) then 
                    tmp_fu_168 <= ret_V_11_fu_659_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_fu_168 <= indexy_V;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_1 = and_ln486_reg_1249_pp0_iter5_reg) and (ap_const_lv1_0 = and_ln487_reg_1241_pp0_iter5_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln487_reg_1241_pp0_iter5_reg) and (icmp_ln489_reg_1245_pp0_iter5_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1))))) then
                Wx_V_reg_1315 <= ret_V_6_fu_844_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Wx_V_reg_1315_pp0_iter7_reg <= Wx_V_reg_1315;
                Wx_V_reg_1315_pp0_iter8_reg <= Wx_V_reg_1315_pp0_iter7_reg;
                Wx_V_reg_1315_pp0_iter9_reg <= Wx_V_reg_1315_pp0_iter8_reg;
                and_ln406_reg_1231_pp0_iter2_reg <= and_ln406_reg_1231_pp0_iter1_reg;
                and_ln406_reg_1231_pp0_iter3_reg <= and_ln406_reg_1231_pp0_iter2_reg;
                and_ln406_reg_1231_pp0_iter4_reg <= and_ln406_reg_1231_pp0_iter3_reg;
                and_ln486_reg_1249_pp0_iter10_reg <= and_ln486_reg_1249_pp0_iter9_reg;
                and_ln486_reg_1249_pp0_iter11_reg <= and_ln486_reg_1249_pp0_iter10_reg;
                and_ln486_reg_1249_pp0_iter12_reg <= and_ln486_reg_1249_pp0_iter11_reg;
                and_ln486_reg_1249_pp0_iter13_reg <= and_ln486_reg_1249_pp0_iter12_reg;
                and_ln486_reg_1249_pp0_iter14_reg <= and_ln486_reg_1249_pp0_iter13_reg;
                and_ln486_reg_1249_pp0_iter2_reg <= and_ln486_reg_1249_pp0_iter1_reg;
                and_ln486_reg_1249_pp0_iter3_reg <= and_ln486_reg_1249_pp0_iter2_reg;
                and_ln486_reg_1249_pp0_iter4_reg <= and_ln486_reg_1249_pp0_iter3_reg;
                and_ln486_reg_1249_pp0_iter5_reg <= and_ln486_reg_1249_pp0_iter4_reg;
                and_ln486_reg_1249_pp0_iter6_reg <= and_ln486_reg_1249_pp0_iter5_reg;
                and_ln486_reg_1249_pp0_iter7_reg <= and_ln486_reg_1249_pp0_iter6_reg;
                and_ln486_reg_1249_pp0_iter8_reg <= and_ln486_reg_1249_pp0_iter7_reg;
                and_ln486_reg_1249_pp0_iter9_reg <= and_ln486_reg_1249_pp0_iter8_reg;
                and_ln487_reg_1241_pp0_iter10_reg <= and_ln487_reg_1241_pp0_iter9_reg;
                and_ln487_reg_1241_pp0_iter11_reg <= and_ln487_reg_1241_pp0_iter10_reg;
                and_ln487_reg_1241_pp0_iter12_reg <= and_ln487_reg_1241_pp0_iter11_reg;
                and_ln487_reg_1241_pp0_iter13_reg <= and_ln487_reg_1241_pp0_iter12_reg;
                and_ln487_reg_1241_pp0_iter14_reg <= and_ln487_reg_1241_pp0_iter13_reg;
                and_ln487_reg_1241_pp0_iter2_reg <= and_ln487_reg_1241_pp0_iter1_reg;
                and_ln487_reg_1241_pp0_iter3_reg <= and_ln487_reg_1241_pp0_iter2_reg;
                and_ln487_reg_1241_pp0_iter4_reg <= and_ln487_reg_1241_pp0_iter3_reg;
                and_ln487_reg_1241_pp0_iter5_reg <= and_ln487_reg_1241_pp0_iter4_reg;
                and_ln487_reg_1241_pp0_iter6_reg <= and_ln487_reg_1241_pp0_iter5_reg;
                and_ln487_reg_1241_pp0_iter7_reg <= and_ln487_reg_1241_pp0_iter6_reg;
                and_ln487_reg_1241_pp0_iter8_reg <= and_ln487_reg_1241_pp0_iter7_reg;
                and_ln487_reg_1241_pp0_iter9_reg <= and_ln487_reg_1241_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                icmp_ln1049_reg_1235_pp0_iter2_reg <= icmp_ln1049_reg_1235_pp0_iter1_reg;
                icmp_ln1049_reg_1235_pp0_iter3_reg <= icmp_ln1049_reg_1235_pp0_iter2_reg;
                icmp_ln1049_reg_1235_pp0_iter4_reg <= icmp_ln1049_reg_1235_pp0_iter3_reg;
                icmp_ln1049_reg_1235_pp0_iter5_reg <= icmp_ln1049_reg_1235_pp0_iter4_reg;
                icmp_ln1049_reg_1235_pp0_iter6_reg <= icmp_ln1049_reg_1235_pp0_iter5_reg;
                icmp_ln1049_reg_1235_pp0_iter7_reg <= icmp_ln1049_reg_1235_pp0_iter6_reg;
                icmp_ln1049_reg_1235_pp0_iter8_reg <= icmp_ln1049_reg_1235_pp0_iter7_reg;
                icmp_ln389_reg_1222_pp0_iter10_reg <= icmp_ln389_reg_1222_pp0_iter9_reg;
                icmp_ln389_reg_1222_pp0_iter11_reg <= icmp_ln389_reg_1222_pp0_iter10_reg;
                icmp_ln389_reg_1222_pp0_iter12_reg <= icmp_ln389_reg_1222_pp0_iter11_reg;
                icmp_ln389_reg_1222_pp0_iter13_reg <= icmp_ln389_reg_1222_pp0_iter12_reg;
                icmp_ln389_reg_1222_pp0_iter2_reg <= icmp_ln389_reg_1222_pp0_iter1_reg;
                icmp_ln389_reg_1222_pp0_iter3_reg <= icmp_ln389_reg_1222_pp0_iter2_reg;
                icmp_ln389_reg_1222_pp0_iter4_reg <= icmp_ln389_reg_1222_pp0_iter3_reg;
                icmp_ln389_reg_1222_pp0_iter5_reg <= icmp_ln389_reg_1222_pp0_iter4_reg;
                icmp_ln389_reg_1222_pp0_iter6_reg <= icmp_ln389_reg_1222_pp0_iter5_reg;
                icmp_ln389_reg_1222_pp0_iter7_reg <= icmp_ln389_reg_1222_pp0_iter6_reg;
                icmp_ln389_reg_1222_pp0_iter8_reg <= icmp_ln389_reg_1222_pp0_iter7_reg;
                icmp_ln389_reg_1222_pp0_iter9_reg <= icmp_ln389_reg_1222_pp0_iter8_reg;
                icmp_ln489_reg_1245_pp0_iter10_reg <= icmp_ln489_reg_1245_pp0_iter9_reg;
                icmp_ln489_reg_1245_pp0_iter11_reg <= icmp_ln489_reg_1245_pp0_iter10_reg;
                icmp_ln489_reg_1245_pp0_iter12_reg <= icmp_ln489_reg_1245_pp0_iter11_reg;
                icmp_ln489_reg_1245_pp0_iter13_reg <= icmp_ln489_reg_1245_pp0_iter12_reg;
                icmp_ln489_reg_1245_pp0_iter14_reg <= icmp_ln489_reg_1245_pp0_iter13_reg;
                icmp_ln489_reg_1245_pp0_iter2_reg <= icmp_ln489_reg_1245_pp0_iter1_reg;
                icmp_ln489_reg_1245_pp0_iter3_reg <= icmp_ln489_reg_1245_pp0_iter2_reg;
                icmp_ln489_reg_1245_pp0_iter4_reg <= icmp_ln489_reg_1245_pp0_iter3_reg;
                icmp_ln489_reg_1245_pp0_iter5_reg <= icmp_ln489_reg_1245_pp0_iter4_reg;
                icmp_ln489_reg_1245_pp0_iter6_reg <= icmp_ln489_reg_1245_pp0_iter5_reg;
                icmp_ln489_reg_1245_pp0_iter7_reg <= icmp_ln489_reg_1245_pp0_iter6_reg;
                icmp_ln489_reg_1245_pp0_iter8_reg <= icmp_ln489_reg_1245_pp0_iter7_reg;
                icmp_ln489_reg_1245_pp0_iter9_reg <= icmp_ln489_reg_1245_pp0_iter8_reg;
                j_1_reg_1216_pp0_iter2_reg <= j_1_reg_1216_pp0_iter1_reg;
                j_1_reg_1216_pp0_iter3_reg <= j_1_reg_1216_pp0_iter2_reg;
                j_1_reg_1216_pp0_iter4_reg <= j_1_reg_1216_pp0_iter3_reg;
                j_1_reg_1216_pp0_iter5_reg <= j_1_reg_1216_pp0_iter4_reg;
                p_Result_8_reg_1366_pp0_iter10_reg <= p_Result_8_reg_1366;
                p_Result_8_reg_1366_pp0_iter11_reg <= p_Result_8_reg_1366_pp0_iter10_reg;
                p_Result_8_reg_1366_pp0_iter12_reg <= p_Result_8_reg_1366_pp0_iter11_reg;
                p_Result_8_reg_1366_pp0_iter13_reg <= p_Result_8_reg_1366_pp0_iter12_reg;
                ret_9_reg_1371_pp0_iter10_reg <= ret_9_reg_1371;
                trunc_ln737_reg_1226_pp0_iter2_reg <= trunc_ln737_reg_1226_pp0_iter1_reg;
                trunc_ln737_reg_1226_pp0_iter3_reg <= trunc_ln737_reg_1226_pp0_iter2_reg;
                trunc_ln737_reg_1226_pp0_iter4_reg <= trunc_ln737_reg_1226_pp0_iter3_reg;
                trunc_ln737_reg_1226_pp0_iter5_reg <= trunc_ln737_reg_1226_pp0_iter4_reg;
                trunc_ln737_reg_1226_pp0_iter6_reg <= trunc_ln737_reg_1226_pp0_iter5_reg;
                trunc_ln737_reg_1226_pp0_iter7_reg <= trunc_ln737_reg_1226_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_1 = and_ln486_reg_1249_pp0_iter7_reg) and (ap_const_lv1_0 = and_ln487_reg_1241_pp0_iter7_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln487_reg_1241_pp0_iter7_reg) and (icmp_ln489_reg_1245_pp0_iter7_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1))))) then
                Wy_V_reg_1351 <= ret_V_fu_908_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp89_read_read_fu_220_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln406_reg_1231 <= and_ln406_fu_677_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln406_reg_1231_pp0_iter1_reg <= and_ln406_reg_1231;
                and_ln486_reg_1249_pp0_iter1_reg <= and_ln486_reg_1249;
                and_ln487_reg_1241_pp0_iter1_reg <= and_ln487_reg_1241;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln1049_reg_1235_pp0_iter1_reg <= icmp_ln1049_reg_1235;
                icmp_ln389_reg_1222 <= icmp_ln389_fu_633_p2;
                icmp_ln389_reg_1222_pp0_iter1_reg <= icmp_ln389_reg_1222;
                icmp_ln489_reg_1245_pp0_iter1_reg <= icmp_ln489_reg_1245;
                j_1_reg_1216 <= ap_sig_allocacmp_j_1;
                j_1_reg_1216_pp0_iter1_reg <= j_1_reg_1216;
                trunc_ln737_reg_1226_pp0_iter1_reg <= trunc_ln737_reg_1226;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp273_read_read_fu_286_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_0 = and_ln487_fu_693_p2))) then
                and_ln486_reg_1249 <= and_ln486_fu_711_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp273_read_read_fu_286_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln487_reg_1241 <= and_ln487_fu_693_p2;
                icmp_ln1049_reg_1235 <= icmp_ln1049_fu_687_p2;
                icmp_ln489_reg_1245 <= icmp_ln489_fu_699_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter0_arrayidx17315516_load_061_reg_547;
                ap_phi_reg_pp0_iter1_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter0_arrayidx18117515_load_065_reg_536;
                ap_phi_reg_pp0_iter1_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter0_p_Val2_3_reg_514;
                ap_phi_reg_pp0_iter1_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter0_p_Val2_s_reg_525;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter1_arrayidx17315516_load_061_reg_547;
                ap_phi_reg_pp0_iter2_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter1_arrayidx18117515_load_065_reg_536;
                ap_phi_reg_pp0_iter2_flag_write_reg_498 <= ap_phi_reg_pp0_iter1_flag_write_reg_498;
                ap_phi_reg_pp0_iter2_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter1_p_Val2_3_reg_514;
                ap_phi_reg_pp0_iter2_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter1_p_Val2_s_reg_525;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter2_arrayidx17315516_load_061_reg_547;
                ap_phi_reg_pp0_iter3_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter2_arrayidx18117515_load_065_reg_536;
                ap_phi_reg_pp0_iter3_flag_write_reg_498 <= ap_phi_reg_pp0_iter2_flag_write_reg_498;
                ap_phi_reg_pp0_iter3_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter2_p_Val2_3_reg_514;
                ap_phi_reg_pp0_iter3_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter2_p_Val2_s_reg_525;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter3_arrayidx17315516_load_061_reg_547;
                ap_phi_reg_pp0_iter4_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter3_arrayidx18117515_load_065_reg_536;
                ap_phi_reg_pp0_iter4_flag_write_reg_498 <= ap_phi_reg_pp0_iter3_flag_write_reg_498;
                ap_phi_reg_pp0_iter4_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter3_p_Val2_3_reg_514;
                ap_phi_reg_pp0_iter4_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter3_p_Val2_s_reg_525;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter4_arrayidx17315516_load_061_reg_547;
                ap_phi_reg_pp0_iter5_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter4_arrayidx18117515_load_065_reg_536;
                ap_phi_reg_pp0_iter5_flag_write_reg_498 <= ap_phi_reg_pp0_iter4_flag_write_reg_498;
                ap_phi_reg_pp0_iter5_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter4_p_Val2_3_reg_514;
                ap_phi_reg_pp0_iter5_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter4_p_Val2_s_reg_525;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter5_arrayidx17315516_load_061_reg_547;
                ap_phi_reg_pp0_iter6_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter5_arrayidx18117515_load_065_reg_536;
                ap_phi_reg_pp0_iter6_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter5_p_Val2_3_reg_514;
                ap_phi_reg_pp0_iter6_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter5_p_Val2_s_reg_525;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter6_arrayidx17315516_load_061_reg_547;
                ap_phi_reg_pp0_iter7_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter6_arrayidx18117515_load_065_reg_536;
                ap_phi_reg_pp0_iter7_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter6_p_Val2_3_reg_514;
                ap_phi_reg_pp0_iter7_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter6_p_Val2_s_reg_525;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_arrayidx17315516_load_061_reg_547 <= ap_phi_reg_pp0_iter7_arrayidx17315516_load_061_reg_547;
                ap_phi_reg_pp0_iter8_arrayidx18117515_load_065_reg_536 <= ap_phi_reg_pp0_iter7_arrayidx18117515_load_065_reg_536;
                ap_phi_reg_pp0_iter8_p_Val2_3_reg_514 <= ap_phi_reg_pp0_iter7_p_Val2_3_reg_514;
                ap_phi_reg_pp0_iter8_p_Val2_s_reg_525 <= ap_phi_reg_pp0_iter7_p_Val2_s_reg_525;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                idx_nxt_reg_1280 <= idx_nxt_fu_866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln389_reg_1222_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                indexx_pre_V_reg_1258 <= indexx_pre_V_fu_764_p3;
                trunc_ln712_reg_1275 <= trunc_ln712_fu_786_p1;
                trunc_ln902_reg_1270 <= trunc_ln902_fu_782_p1;
                trunc_ln_reg_1263 <= indexx_pre_V_fu_764_p3(38 downto 22);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_1 = and_ln486_reg_1249_pp0_iter8_reg) and (ap_const_lv1_0 = and_ln487_reg_1241_pp0_iter8_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln487_reg_1241_pp0_iter8_reg) and (icmp_ln489_reg_1245_pp0_iter8_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1))))) then
                p_Result_8_reg_1366 <= p_Result_8_fu_930_p3;
                ret_10_reg_1376 <= ret_10_fu_992_p2;
                ret_9_reg_1371 <= ret_9_fu_980_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_570 <= line_buffer_V_1_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_576 <= line_buffer_V_2_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_582 <= line_buffer_V_0_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((ap_const_lv1_1 = and_ln486_reg_1249_pp0_iter13_reg) and (ap_const_lv1_0 = and_ln487_reg_1241_pp0_iter13_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln487_reg_1241_pp0_iter13_reg) and (icmp_ln489_reg_1245_pp0_iter13_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1))))) then
                ret_V_13_reg_1421 <= ret_V_13_fu_1095_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln389_fu_633_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln737_reg_1226 <= trunc_ln737_fu_667_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    P4_V_fu_1033_p3 <= (p_Result_8_reg_1366_pp0_iter13_reg & ap_const_lv10_0);
    Wxy_V_fu_1011_p1 <= grp_fu_1115_p2;
    Wxy_V_fu_1011_p4 <= Wxy_V_fu_1011_p1(21 downto 10);
    Wy_V_fu_913_p4 <= ret_V_fu_908_p2(23 downto 12);
    add_ln389_fu_639_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv31_1));
    and_ln406_fu_677_p2 <= (icmp_ln408_fu_671_p2 and icmp_ln1061_1);
    and_ln486_fu_711_p2 <= (icmp_ln489_fu_699_p2 and icmp_ln1049_1_fu_705_p2);
    and_ln487_fu_693_p2 <= (icmp_ln1049_fu_687_p2 and cmp277);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, in_mat_420_empty_n, ap_predicate_op97_read_state6, out_mat_421_full_n, ap_predicate_op237_write_state16)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op97_read_state6 = ap_const_boolean_1) and (in_mat_420_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_predicate_op237_write_state16 = ap_const_boolean_1) and (out_mat_421_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, in_mat_420_empty_n, ap_predicate_op97_read_state6, out_mat_421_full_n, ap_predicate_op237_write_state16)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op97_read_state6 = ap_const_boolean_1) and (in_mat_420_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_predicate_op237_write_state16 = ap_const_boolean_1) and (out_mat_421_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp84_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, in_mat_420_empty_n, ap_predicate_op97_read_state6, out_mat_421_full_n, ap_predicate_op237_write_state16)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp84 <= (((ap_predicate_op97_read_state6 = ap_const_boolean_1) and (in_mat_420_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_predicate_op237_write_state16 = ap_const_boolean_1) and (out_mat_421_full_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter15, in_mat_420_empty_n, ap_predicate_op97_read_state6, out_mat_421_full_n, ap_predicate_op237_write_state16)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op97_read_state6 = ap_const_boolean_1) and (in_mat_420_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_predicate_op237_write_state16 = ap_const_boolean_1) and (out_mat_421_full_n = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage0_iter15_assign_proc : process(out_mat_421_full_n, ap_predicate_op237_write_state16)
    begin
                ap_block_state16_pp0_stage0_iter15 <= ((ap_predicate_op237_write_state16 = ap_const_boolean_1) and (out_mat_421_full_n = ap_const_logic_0));
    end process;


    ap_block_state16_pp0_stage0_iter15_ignore_call6_assign_proc : process(out_mat_421_full_n, ap_predicate_op237_write_state16)
    begin
                ap_block_state16_pp0_stage0_iter15_ignore_call6 <= ((ap_predicate_op237_write_state16 = ap_const_boolean_1) and (out_mat_421_full_n = ap_const_logic_0));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter5_assign_proc : process(in_mat_420_empty_n, ap_predicate_op97_read_state6)
    begin
                ap_block_state6_pp0_stage0_iter5 <= ((ap_predicate_op97_read_state6 = ap_const_boolean_1) and (in_mat_420_empty_n = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage0_iter5_ignore_call6_assign_proc : process(in_mat_420_empty_n, ap_predicate_op97_read_state6)
    begin
                ap_block_state6_pp0_stage0_iter5_ignore_call6 <= ((ap_predicate_op97_read_state6 = ap_const_boolean_1) and (in_mat_420_empty_n = ap_const_logic_0));
    end process;

        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1480_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0, icmp_ln389_reg_1222_pp0_iter6_reg)
    begin
                ap_condition_1480 <= ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_1492_assign_proc : process(first_row_index_5_read_reg_1203, icmp_ln1049_reg_1235_pp0_iter6_reg)
    begin
                ap_condition_1492 <= (not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0));
    end process;


    ap_condition_1495_assign_proc : process(ap_enable_reg_pp0_iter5, icmp_ln389_reg_1222_pp0_iter4_reg, and_ln406_reg_1231_pp0_iter4_reg, cmp89)
    begin
                ap_condition_1495 <= ((cmp89 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln406_reg_1231_pp0_iter4_reg) and (icmp_ln389_reg_1222_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1));
    end process;


    ap_condition_303_assign_proc : process(first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter7_reg)
    begin
                ap_condition_303 <= (not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (icmp_ln389_reg_1222_pp0_iter7_reg = ap_const_lv1_1));
    end process;


    ap_condition_579_assign_proc : process(first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg, icmp_ln1049_reg_1235_pp0_iter5_reg)
    begin
                ap_condition_579 <= ((icmp_ln1049_reg_1235_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1));
    end process;


    ap_condition_587_assign_proc : process(first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg, icmp_ln1049_reg_1235_pp0_iter5_reg)
    begin
                ap_condition_587 <= ((icmp_ln1049_reg_1235_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0));
    end process;


    ap_condition_595_assign_proc : process(first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg)
    begin
                ap_condition_595 <= (not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1));
    end process;


    ap_condition_596_assign_proc : process(first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg, icmp_ln1049_reg_1235_pp0_iter5_reg)
    begin
                ap_condition_596 <= (not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (icmp_ln1049_reg_1235_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1));
    end process;


    ap_condition_901_assign_proc : process(first_row_index_5_read_reg_1203, ap_phi_mux_flag_write_phi_fu_503_p6)
    begin
                ap_condition_901 <= (not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1));
    end process;


    ap_condition_91_assign_proc : process(icmp_ln389_reg_1222_pp0_iter4_reg, and_ln406_reg_1231_pp0_iter4_reg, cmp89)
    begin
                ap_condition_91 <= ((cmp89 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln406_reg_1231_pp0_iter4_reg) and (icmp_ln389_reg_1222_pp0_iter4_reg = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln389_fu_633_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln389_fu_633_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter14_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;
    ap_ext_blocking_n <= (ap_ext_blocking_sub_n and ap_const_logic_1);

    ap_ext_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_ext_blocking_0)
    begin
        if (((ap_wait_0 and ap_sub_ext_blocking_0) = ap_const_logic_1)) then 
            ap_ext_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_ext_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (out_mat_421_blk_n and in_mat_420_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_sub_n and ap_int_blocking_cur_n);

    ap_int_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_int_blocking_0)
    begin
        if (((ap_wait_0 and ap_sub_int_blocking_0) = ap_const_logic_1)) then 
            ap_int_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_int_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_mux_flag_write_phi_fu_503_p6 <= ap_phi_reg_pp0_iter6_flag_write_reg_498;
    ap_phi_reg_pp0_iter0_arrayidx17315516_load_061_reg_547 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_arrayidx18117515_load_065_reg_536 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_flag_write_reg_498 <= "X";
    ap_phi_reg_pp0_iter0_p_Val2_3_reg_514 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_p_Val2_s_reg_525 <= "XXXXXXXX";

    ap_predicate_op237_write_state16_assign_proc : process(and_ln487_reg_1241_pp0_iter14_reg, icmp_ln489_reg_1245_pp0_iter14_reg, and_ln486_reg_1249_pp0_iter14_reg, cmp273)
    begin
                ap_predicate_op237_write_state16 <= (((ap_const_lv1_1 = and_ln486_reg_1249_pp0_iter14_reg) and (ap_const_lv1_0 = and_ln487_reg_1241_pp0_iter14_reg) and (cmp273 = ap_const_lv1_1)) or ((ap_const_lv1_1 = and_ln487_reg_1241_pp0_iter14_reg) and (icmp_ln489_reg_1245_pp0_iter14_reg = ap_const_lv1_1) and (cmp273 = ap_const_lv1_1)));
    end process;


    ap_predicate_op97_read_state6_assign_proc : process(icmp_ln389_reg_1222_pp0_iter4_reg, and_ln406_reg_1231_pp0_iter4_reg, cmp89)
    begin
                ap_predicate_op97_read_state6 <= ((cmp89 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln406_reg_1231_pp0_iter4_reg) and (icmp_ln389_reg_1222_pp0_iter4_reg = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_172)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_j_1 <= ap_const_lv31_0;
        else 
            ap_sig_allocacmp_j_1 <= j_fu_172;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_str_blocking_sub_n and ap_const_logic_1);

    ap_str_blocking_sub_n_assign_proc : process(ap_wait_0, ap_sub_str_blocking_0)
    begin
        if (((ap_wait_0 and ap_sub_str_blocking_0) = ap_const_logic_1)) then 
            ap_str_blocking_sub_n <= ap_const_logic_0;
        else 
            ap_str_blocking_sub_n <= ap_const_logic_1;
        end if; 
    end process;


    ap_sub_ext_blocking_0_assign_proc : process(grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ext_blocking_n)
    begin
        if ((grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ext_blocking_n = ap_const_logic_0)) then 
            ap_sub_ext_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_ext_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_int_blocking_0_assign_proc : process(grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_int_blocking_n)
    begin
        if ((grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_int_blocking_n = ap_const_logic_0)) then 
            ap_sub_int_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_int_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sub_str_blocking_0_assign_proc : process(grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_str_blocking_n)
    begin
        if ((grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_str_blocking_n = ap_const_logic_0)) then 
            ap_sub_str_blocking_0 <= ap_const_logic_1;
        else 
            ap_sub_str_blocking_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_wait_0_assign_proc : process(ap_CS_fsm)
    begin
        if ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm)) then 
            ap_wait_0 <= ap_const_logic_1;
        else 
            ap_wait_0 <= ap_const_logic_0;
        end if; 
    end process;

    cmp273_read_read_fu_286_p2 <= cmp273;
    cmp89_read_read_fu_220_p2 <= cmp89;
    empty_fu_853_p1 <= idx_1_fu_825_p3(12 - 1 downto 0);
    first_row_index_5_read_reg_1203 <= first_row_index_5;

    grp_fu_1115_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1115_ce <= ap_const_logic_1;
        else 
            grp_fu_1115_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1115_p0 <= grp_fu_1115_p00(12 - 1 downto 0);
    grp_fu_1115_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_V_reg_1315_pp0_iter7_reg),24));
    grp_fu_1115_p1 <= grp_fu_1115_p10(12 - 1 downto 0);
    grp_fu_1115_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_V_fu_913_p4),24));

    grp_fu_1122_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1122_ce <= ap_const_logic_1;
        else 
            grp_fu_1122_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1122_p0 <= grp_fu_1122_p00(12 - 1 downto 0);
    grp_fu_1122_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_V_reg_1351),21));

    grp_fu_1129_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1129_ce <= ap_const_logic_1;
        else 
            grp_fu_1129_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1129_p0 <= grp_fu_1129_p00(12 - 1 downto 0);
    grp_fu_1129_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_V_reg_1315_pp0_iter9_reg),21));

    grp_fu_1138_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_1138_ce <= ap_const_logic_1;
        else 
            grp_fu_1138_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1138_p0 <= grp_fu_1138_p00(12 - 1 downto 0);
    grp_fu_1138_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wxy_V_fu_1011_p4),22));
    grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_ce <= grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ce;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_din1 <= zext_ln395_fu_735_p1;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_din2 <= trunc_ln3;

    grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp84))) then 
            grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ce <= ap_const_logic_1;
        else 
            grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_ext_blocking_n <= ap_const_logic_0;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_int_blocking_n <= ap_const_logic_0;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_558_ap_str_blocking_n <= ap_const_logic_0;
    icmp_ln1049_1_fu_705_p2 <= "1" when (zext_ln1049_fu_683_p1 = op2_assign_2) else "0";
    icmp_ln1049_fu_687_p2 <= "1" when (zext_ln1049_fu_683_p1 = op2_assign) else "0";
    icmp_ln1547_fu_752_p2 <= "1" when (signed(sext_ln1548_fu_740_p1) > signed(shl_i_i_i_i_i)) else "0";
    icmp_ln389_fu_633_p2 <= "1" when (signed(zext_ln389_1_fu_629_p1) < signed(loop_col_count)) else "0";
    icmp_ln408_fu_671_p2 <= "1" when (signed(zext_ln389_1_fu_629_p1) < signed(p_read1)) else "0";
    icmp_ln489_fu_699_p2 <= "1" when (signed(zext_ln389_1_fu_629_p1) < signed(p_read3)) else "0";
    icmp_ln902_1_fu_808_p2 <= "1" when (trunc_ln902_reg_1270 = ap_const_lv22_0) else "0";
    icmp_ln902_2_fu_1075_p2 <= "1" when (trunc_ln902_1_fu_1071_p1 = ap_const_lv10_0) else "0";
    icmp_ln902_fu_645_p2 <= "0" when (indexy_pre_V = ap_const_lv22_0) else "1";
    idx_1_fu_825_p3 <= 
        select_ln901_1_fu_818_p3 when (p_Result_1_fu_801_p3(0) = '1') else 
        trunc_ln_reg_1263;
    idx_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_1_fu_825_p3),32));
    idx_nxt_fu_866_p2 <= std_logic_vector(unsigned(empty_fu_853_p1) + unsigned(zext_ln428_fu_862_p1));

    in_mat_420_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, in_mat_420_empty_n, ap_predicate_op97_read_state6, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op97_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            in_mat_420_blk_n <= in_mat_420_empty_n;
        else 
            in_mat_420_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_mat_420_read_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op97_read_state6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op97_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            in_mat_420_read <= ap_const_logic_1;
        else 
            in_mat_420_read <= ap_const_logic_0;
        end if; 
    end process;

    indexx_pre_V_3_fu_757_p2 <= grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_dout0;
    indexx_pre_V_3_fu_757_p3 <= 
        indexx_pre_V_1 when (icmp_ln1547_fu_752_p2(0) = '1') else 
        indexx_pre_V_3_fu_757_p2;
    indexx_pre_V_fu_764_p3 <= 
        ap_const_lv42_0 when (tmp_2_fu_744_p3(0) = '1') else 
        indexx_pre_V_3_fu_757_p3;
    indexy_V_1_out <= tmp_fu_168;

    indexy_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln389_reg_1222_pp0_iter13_reg)
    begin
        if (((icmp_ln389_reg_1222_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            indexy_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            indexy_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_0_0_addr_1_gep_fu_490_p3 <= zext_ln431_fu_892_p1(12 - 1 downto 0);
    line_buffer_V_0_0_addr_gep_fu_424_p3 <= zext_ln430_fu_872_p1(12 - 1 downto 0);

    line_buffer_V_0_0_address0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, first_row_index_5_read_reg_1203, line_buffer_V_0_0_addr_gep_fu_424_p3, ap_phi_mux_flag_write_phi_fu_503_p6, zext_ln430_fu_872_p1, zext_ln389_fu_795_p1, ap_condition_587, ap_condition_595)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_const_boolean_1 = ap_condition_595)) then 
                line_buffer_V_0_0_address0 <= line_buffer_V_0_0_addr_gep_fu_424_p3;
            elsif ((ap_const_boolean_1 = ap_condition_587)) then 
                line_buffer_V_0_0_address0 <= zext_ln430_fu_872_p1(12 - 1 downto 0);
            elsif (((ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1))) then 
                line_buffer_V_0_0_address0 <= zext_ln389_fu_795_p1(12 - 1 downto 0);
            else 
                line_buffer_V_0_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_0_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_0_0_address1_assign_proc : process(first_row_index_5_read_reg_1203, icmp_ln1049_reg_1235_pp0_iter6_reg, line_buffer_V_0_0_addr_1_gep_fu_490_p3, zext_ln431_fu_892_p1, ap_condition_1480)
    begin
        if ((ap_const_boolean_1 = ap_condition_1480)) then
            if ((not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)))) then 
                line_buffer_V_0_0_address1 <= line_buffer_V_0_0_addr_1_gep_fu_490_p3;
            elsif (((icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0))) then 
                line_buffer_V_0_0_address1 <= zext_ln431_fu_892_p1(12 - 1 downto 0);
            else 
                line_buffer_V_0_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_0_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg, icmp_ln1049_reg_1235_pp0_iter5_reg, ap_phi_mux_flag_write_phi_fu_503_p6)
    begin
        if ((((ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln1049_reg_1235_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_0_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, icmp_ln389_reg_1222_pp0_iter6_reg, first_row_index_5_read_reg_1203, icmp_ln1049_reg_1235_pp0_iter6_reg)
    begin
        if (((not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_0_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_0_0_d0 <= read_pixel_1_fu_176;

    line_buffer_V_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1203, ap_phi_mux_flag_write_phi_fu_503_p6)
    begin
        if (((ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_0_addr_1_gep_fu_475_p3 <= zext_ln431_fu_892_p1(12 - 1 downto 0);
    line_buffer_V_1_0_addr_gep_fu_402_p3 <= zext_ln430_fu_872_p1(12 - 1 downto 0);

    line_buffer_V_1_0_address0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg, line_buffer_V_1_0_addr_gep_fu_402_p3, zext_ln430_fu_872_p1, zext_ln389_fu_795_p1, ap_condition_579, ap_condition_901)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_const_boolean_1 = ap_condition_901)) then 
                line_buffer_V_1_0_address0 <= zext_ln389_fu_795_p1(12 - 1 downto 0);
            elsif (((icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0))) then 
                line_buffer_V_1_0_address0 <= line_buffer_V_1_0_addr_gep_fu_402_p3;
            elsif ((ap_const_boolean_1 = ap_condition_579)) then 
                line_buffer_V_1_0_address0 <= zext_ln430_fu_872_p1(12 - 1 downto 0);
            else 
                line_buffer_V_1_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_0_address1_assign_proc : process(first_row_index_5_read_reg_1203, icmp_ln1049_reg_1235_pp0_iter6_reg, line_buffer_V_1_0_addr_1_gep_fu_475_p3, zext_ln431_fu_892_p1, ap_condition_1480)
    begin
        if ((ap_const_boolean_1 = ap_condition_1480)) then
            if ((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) then 
                line_buffer_V_1_0_address1 <= line_buffer_V_1_0_addr_1_gep_fu_475_p3;
            elsif (((icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1))) then 
                line_buffer_V_1_0_address1 <= zext_ln431_fu_892_p1(12 - 1 downto 0);
            else 
                line_buffer_V_1_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_1_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg, icmp_ln1049_reg_1235_pp0_iter5_reg, ap_phi_mux_flag_write_phi_fu_503_p6)
    begin
        if ((((icmp_ln1049_reg_1235_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_1_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_1_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, icmp_ln389_reg_1222_pp0_iter6_reg, first_row_index_5_read_reg_1203, icmp_ln1049_reg_1235_pp0_iter6_reg)
    begin
        if ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_1_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_1_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_1_0_d0 <= read_pixel_1_fu_176;

    line_buffer_V_1_0_we0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1203, ap_phi_mux_flag_write_phi_fu_503_p6)
    begin
        if ((not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_1_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_V_2_0_addr_1_gep_fu_483_p3 <= zext_ln431_fu_892_p1(12 - 1 downto 0);
    line_buffer_V_2_0_addr_gep_fu_417_p3 <= zext_ln430_fu_872_p1(12 - 1 downto 0);

    line_buffer_V_2_0_address0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0, first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg, line_buffer_V_2_0_addr_gep_fu_417_p3, ap_phi_mux_flag_write_phi_fu_503_p6, zext_ln430_fu_872_p1, zext_ln389_fu_795_p1, ap_condition_596)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then
            if ((ap_const_boolean_1 = ap_condition_596)) then 
                line_buffer_V_2_0_address0 <= line_buffer_V_2_0_addr_gep_fu_417_p3;
            elsif (((ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0))) then 
                line_buffer_V_2_0_address0 <= zext_ln389_fu_795_p1(12 - 1 downto 0);
            elsif (((icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1))) then 
                line_buffer_V_2_0_address0 <= zext_ln430_fu_872_p1(12 - 1 downto 0);
            else 
                line_buffer_V_2_0_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_0_address1_assign_proc : process(first_row_index_5_read_reg_1203, line_buffer_V_2_0_addr_1_gep_fu_483_p3, zext_ln431_fu_892_p1, ap_condition_1480, ap_condition_1492)
    begin
        if ((ap_const_boolean_1 = ap_condition_1480)) then
            if ((ap_const_boolean_1 = ap_condition_1492)) then 
                line_buffer_V_2_0_address1 <= line_buffer_V_2_0_addr_1_gep_fu_483_p3;
            elsif ((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) then 
                line_buffer_V_2_0_address1 <= zext_ln431_fu_892_p1(12 - 1 downto 0);
            else 
                line_buffer_V_2_0_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            line_buffer_V_2_0_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_V_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1203, icmp_ln389_reg_1222_pp0_iter5_reg, icmp_ln1049_reg_1235_pp0_iter5_reg, ap_phi_mux_flag_write_phi_fu_503_p6)
    begin
        if ((((ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or (not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (icmp_ln1049_reg_1235_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln389_reg_1222_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_2_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_0_ce1_assign_proc : process(ap_enable_reg_pp0_iter7, ap_block_pp0_stage0_11001, icmp_ln389_reg_1222_pp0_iter6_reg, first_row_index_5_read_reg_1203, icmp_ln1049_reg_1235_pp0_iter6_reg)
    begin
        if (((not((first_row_index_5_read_reg_1203 = ap_const_lv32_0)) and not((first_row_index_5_read_reg_1203 = ap_const_lv32_1)) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1049_reg_1235_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_1) and (icmp_ln389_reg_1222_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            line_buffer_V_2_0_ce1 <= ap_const_logic_1;
        else 
            line_buffer_V_2_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_V_2_0_we0_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001, first_row_index_5_read_reg_1203, ap_phi_mux_flag_write_phi_fu_503_p6)
    begin
        if (((ap_phi_mux_flag_write_phi_fu_503_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (first_row_index_5_read_reg_1203 = ap_const_lv32_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            line_buffer_V_2_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_V_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    nextYScale_V_1_out <= nextYScale_V_1_fu_164;

    nextYScale_V_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln389_reg_1222_pp0_iter13_reg)
    begin
        if (((icmp_ln389_reg_1222_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            nextYScale_V_1_out_ap_vld <= ap_const_logic_1;
        else 
            nextYScale_V_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    not_cmp_i_i173_fu_857_p2 <= "0" when (idx_fu_849_p1 = tmp_V) else "1";

    out_mat_421_blk_n_assign_proc : process(ap_enable_reg_pp0_iter15, out_mat_421_full_n, ap_predicate_op237_write_state16, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op237_write_state16 = ap_const_boolean_1))) then 
            out_mat_421_blk_n <= out_mat_421_full_n;
        else 
            out_mat_421_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_mat_421_din <= ret_V_13_reg_1421;

    out_mat_421_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_predicate_op237_write_state16, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op237_write_state16 = ap_const_boolean_1))) then 
            out_mat_421_write <= ap_const_logic_1;
        else 
            out_mat_421_write <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_1_fu_801_p3 <= indexx_pre_V_reg_1258(41 downto 41);
    p_Result_6_fu_1063_p3 <= ret_V_8_fu_1047_p2(23 downto 23);
    p_Result_8_fu_930_p3 <= 
        ap_phi_reg_pp0_iter9_p_Val2_s_reg_525 when (icmp_ln1049_reg_1235_pp0_iter8_reg(0) = '1') else 
        ap_phi_reg_pp0_iter9_arrayidx17315516_load_061_reg_547;
    p_Result_9_fu_937_p3 <= 
        ap_phi_reg_pp0_iter9_p_Val2_3_reg_514 when (icmp_ln1049_reg_1235_pp0_iter8_reg(0) = '1') else 
        ap_phi_reg_pp0_iter9_arrayidx18117515_load_065_reg_536;
    p_Result_read_read_fu_244_p2 <= (0=>p_Result_s, others=>'-');
    read_pixel_1_out <= read_pixel_1_fu_176;

    read_pixel_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln389_reg_1222_pp0_iter13_reg)
    begin
        if (((icmp_ln389_reg_1222_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            read_pixel_1_out_ap_vld <= ap_const_logic_1;
        else 
            read_pixel_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_10_fu_992_p2 <= std_logic_vector(unsigned(zext_ln225_3_fu_962_p1) - unsigned(zext_ln225_fu_944_p1));
    ret_6_fu_986_p2 <= std_logic_vector(unsigned(zext_ln225_2_fu_958_p1) - unsigned(zext_ln225_fu_944_p1));
    ret_8_fu_966_p2 <= std_logic_vector(unsigned(zext_ln225_3_fu_962_p1) + unsigned(zext_ln225_2_fu_958_p1));
    ret_9_fu_980_p2 <= std_logic_vector(unsigned(zext_ln225_4_fu_972_p1) - unsigned(zext_ln225_5_fu_976_p1));
    ret_V_11_fu_659_p0 <= (0=>p_Result_s, others=>'-');
    ret_V_11_fu_659_p3 <= 
        select_ln901_fu_651_p3 when (ret_V_11_fu_659_p0(0) = '1') else 
        ret_V_3_cast;
    ret_V_13_fu_1095_p3 <= 
        select_ln901_3_fu_1087_p3 when (p_Result_6_fu_1063_p3(0) = '1') else 
        trunc_ln882_1_fu_1053_p4;
    ret_V_4_fu_813_p2 <= std_logic_vector(unsigned(trunc_ln_reg_1263) + unsigned(ap_const_lv17_1));
    ret_V_6_fu_844_p2 <= std_logic_vector(unsigned(trunc_ln712_reg_1275) - unsigned(rhs_1_fu_836_p3));
    ret_V_8_fu_1047_p2 <= std_logic_vector(signed(sext_ln1245_3_fu_1040_p1) + signed(zext_ln1245_fu_1043_p1));
    ret_V_9_fu_1081_p2 <= std_logic_vector(unsigned(trunc_ln882_1_fu_1053_p4) + unsigned(ap_const_lv8_1));
    ret_V_fu_908_p2 <= std_logic_vector(unsigned(indexy_pre_V_cast) - unsigned(rhs_fu_901_p3));
    ret_fu_952_p2 <= std_logic_vector(unsigned(zext_ln225_1_fu_948_p1) + unsigned(zext_ln225_fu_944_p1));
    rhs_1_fu_836_p3 <= (trunc_ln737_1_fu_832_p1 & ap_const_lv22_0);
    rhs_fu_901_p3 <= (trunc_ln737_reg_1226_pp0_iter7_reg & ap_const_lv22_0);
    select_ln901_1_fu_818_p3 <= 
        trunc_ln_reg_1263 when (icmp_ln902_1_fu_808_p2(0) = '1') else 
        ret_V_4_fu_813_p2;
    select_ln901_3_fu_1087_p3 <= 
        trunc_ln882_1_fu_1053_p4 when (icmp_ln902_2_fu_1075_p2(0) = '1') else 
        ret_V_9_fu_1081_p2;
    select_ln901_fu_651_p3 <= 
        add_i_i_i_i_i199_i when (icmp_ln902_fu_645_p2(0) = '1') else 
        ret_V_3_cast;
        sext_ln1245_3_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1138_p3),24));

    sext_ln1548_fu_740_p0 <= grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_dout0;
        sext_ln1548_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1548_fu_740_p0),54));

    tmp_2_fu_744_p1 <= grp_scaleCompute_17_42_20_48_16_1_s_fu_195_p_dout0;
    tmp_2_fu_744_p3 <= tmp_2_fu_744_p1(41 downto 41);
    trunc_ln395_fu_732_p1 <= j_1_reg_1216(20 - 1 downto 0);
    trunc_ln712_fu_786_p1 <= indexx_pre_V_fu_764_p3(24 - 1 downto 0);
    trunc_ln737_1_fu_832_p1 <= idx_1_fu_825_p3(2 - 1 downto 0);
    trunc_ln737_fu_667_p1 <= ret_V_11_fu_659_p3(2 - 1 downto 0);
    trunc_ln882_1_fu_1053_p4 <= ret_V_8_fu_1047_p2(17 downto 10);
    trunc_ln902_1_fu_1071_p1 <= ret_V_8_fu_1047_p2(10 - 1 downto 0);
    trunc_ln902_fu_782_p1 <= indexx_pre_V_fu_764_p3(22 - 1 downto 0);
    zext_ln1049_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_11_fu_659_p3),32));
    zext_ln1245_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_V_fu_1033_p3),24));
    zext_ln225_1_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter9_p_Val2_3_reg_514),9));
    zext_ln225_2_fu_958_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter9_p_Val2_s_reg_525),9));
    zext_ln225_3_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_9_fu_937_p3),9));
    zext_ln225_4_fu_972_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_fu_952_p2),10));
    zext_ln225_5_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_8_fu_966_p2),10));
    zext_ln225_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_8_fu_930_p3),9));
    zext_ln389_1_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_1),32));
    zext_ln389_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_1216_pp0_iter5_reg),64));
    zext_ln395_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln395_fu_732_p1),32));
    zext_ln428_fu_862_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_cmp_i_i173_fu_857_p2),12));
    zext_ln430_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_1_fu_825_p3),64));
    zext_ln431_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_nxt_reg_1280),64));
end behav;
