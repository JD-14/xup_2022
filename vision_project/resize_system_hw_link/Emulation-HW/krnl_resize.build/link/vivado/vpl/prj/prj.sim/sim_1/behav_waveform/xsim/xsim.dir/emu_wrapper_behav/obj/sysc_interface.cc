#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_35(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(6640552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(6640888);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(6640944);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(6641280);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata3.bind(*p_1_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata3);
        xsim_sc_channel<0, bool > *p_1_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready3.bind(*p_1_trace_tready3);
        p_1_trace_tready3->set_sv_netview_offsetfromdp(6641616);
        xsim_sc_channel<0, bool > *p_1_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast3.bind(*p_1_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid3.bind(*p_1_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest3.bind(*p_1_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest3);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid3.bind(*p_1_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata4.bind(*p_1_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata4);
        xsim_sc_channel<0, bool > *p_1_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready4.bind(*p_1_trace_tready4);
        p_1_trace_tready4->set_sv_netview_offsetfromdp(6641952);
        xsim_sc_channel<0, bool > *p_1_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast4.bind(*p_1_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid4.bind(*p_1_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest4.bind(*p_1_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest4);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid4.bind(*p_1_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(6642344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(6642568);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(6642624);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(6642736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(6642904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(6642960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(6643016);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(6643072);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(6643296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(6643520);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(6643576);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(6643688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(6643856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(6643912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(6643968);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(6644024);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(6644248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(6644696);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(6644752);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(6644920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(6644976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(6645032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(6645200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(6645480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(6645536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(6645592);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(6645648);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(6646200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(6646424);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(6646480);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(6646592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(6646816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(6646872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(6646928);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(6646984);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(6648104);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(6648160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(6648216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(6648272);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(6648328);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(6648768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(6648992);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(6649048);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(6649160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(6649328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(6649384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(6649440);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(6649496);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WREADY);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_3_mon_WDATA = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WDATA);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_3_mon_WSTRB = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RREADY);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_3_mon_RDATA = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6651288);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6651344);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(6651400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6651456);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6651568);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6651624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(6651680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6651736);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6651792);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6651848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_dpa_mon2_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon2");
        sc_inst_4->xsim_set_dbg_index(535);
        xsim_sc_channel<0, bool > *p_4_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_clk.bind(*p_4_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_clk);
        xsim_sc_channel<0, bool > *p_4_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_resetn.bind(*p_4_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_resetn);
        xsim_sc_channel<0, bool > *p_4_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_clk.bind(*p_4_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_trace_clk);
        xsim_sc_channel<0, bool > *p_4_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_4->trace_rst.bind(*p_4_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(6653352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(6653576);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(6653632);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(6653744);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(6653912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(6653968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(6654024);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(6654080);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_4_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWVALID.bind(*p_4_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_4_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_AWREADY.bind(*p_4_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_AWADDR.bind(*p_4_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_AWID.bind(*p_4_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_AWLEN.bind(*p_4_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_AWSIZE.bind(*p_4_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_AWBURST.bind(*p_4_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_4_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WVALID.bind(*p_4_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WVALID);
        xsim_sc_channel<0, bool > *p_4_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WREADY.bind(*p_4_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WREADY);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_4_mon_WDATA = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_4->mon_WDATA.bind(*p_4_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WDATA);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_4_mon_WSTRB = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_4->mon_WSTRB.bind(*p_4_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_4_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_WLAST.bind(*p_4_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_WLAST);
        xsim_sc_channel<0, bool > *p_4_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARVALID.bind(*p_4_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_4_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_ARREADY.bind(*p_4_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->mon_ARADDR.bind(*p_4_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_ARID.bind(*p_4_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->mon_ARLEN.bind(*p_4_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->mon_ARSIZE.bind(*p_4_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_ARBURST.bind(*p_4_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_4_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RVALID.bind(*p_4_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RVALID);
        xsim_sc_channel<0, bool > *p_4_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RREADY.bind(*p_4_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RREADY);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_4_mon_RDATA = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_4->mon_RDATA.bind(*p_4_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RDATA);
        xsim_sc_channel<0, bool > *p_4_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_RLAST.bind(*p_4_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_RID.bind(*p_4_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_RRESP.bind(*p_4_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_RRESP);
        xsim_sc_channel<0, bool > *p_4_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BVALID.bind(*p_4_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BVALID);
        xsim_sc_channel<0, bool > *p_4_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_4->mon_BREADY.bind(*p_4_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->mon_BRESP.bind(*p_4_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->mon_BID.bind(*p_4_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_4_mon_BID);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tready.bind(*p_4_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_rd_tdata.bind(*p_4_m_axis_rd_tdata);
        p_4_m_axis_rd_tdata->set_sv_netview_offsetfromdp(6655872);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tlast.bind(*p_4_m_axis_rd_tlast);
        p_4_m_axis_rd_tlast->set_sv_netview_offsetfromdp(6655928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tid.bind(*p_4_m_axis_rd_tid);
        p_4_m_axis_rd_tid->set_sv_netview_offsetfromdp(6655984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_rd_tdest.bind(*p_4_m_axis_rd_tdest);
        p_4_m_axis_rd_tdest->set_sv_netview_offsetfromdp(6656040);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tready.bind(*p_4_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->m_axis_wr_tdata.bind(*p_4_m_axis_wr_tdata);
        p_4_m_axis_wr_tdata->set_sv_netview_offsetfromdp(6656152);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tlast.bind(*p_4_m_axis_wr_tlast);
        p_4_m_axis_wr_tlast->set_sv_netview_offsetfromdp(6656208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tid.bind(*p_4_m_axis_wr_tid);
        p_4_m_axis_wr_tid->set_sv_netview_offsetfromdp(6656264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axis_wr_tdest.bind(*p_4_m_axis_wr_tdest);
        p_4_m_axis_wr_tdest->set_sv_netview_offsetfromdp(6656320);
        xsim_sc_channel<0, bool > *p_4_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_wr_tvalid.bind(*p_4_m_axis_wr_tvalid);
        p_4_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(6656376);
        xsim_sc_channel<0, bool > *p_4_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axis_rd_tvalid.bind(*p_4_m_axis_rd_tvalid);
        p_4_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(6656432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr_mon.bind(*p_4_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot_mon.bind(*p_4_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid_mon.bind(*p_4_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready_mon.bind(*p_4_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata_mon.bind(*p_4_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb_mon.bind(*p_4_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid_mon.bind(*p_4_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready_mon.bind(*p_4_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp_mon.bind(*p_4_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid_mon.bind(*p_4_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready_mon.bind(*p_4_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr_mon.bind(*p_4_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot_mon.bind(*p_4_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid_mon.bind(*p_4_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready_mon.bind(*p_4_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata_mon.bind(*p_4_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp_mon.bind(*p_4_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid_mon.bind(*p_4_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready_mon.bind(*p_4_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready_mon);
        sc_inst_5 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_5->xsim_set_dbg_index(29);
        xsim_sc_channel<0, bool > *p_5_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->aclk.bind(*p_5_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_aclk);
        xsim_sc_channel<0, bool > *p_5_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_5->aclk1.bind(*p_5_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_5_aclk1);
        xsim_sc_channel<0, bool > *p_5_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->aresetn.bind(*p_5_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awid.bind(*p_5_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_awaddr.bind(*p_5_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_awlen.bind(*p_5_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awsize.bind(*p_5_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_awburst.bind(*p_5_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_awlock.bind(*p_5_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awcache.bind(*p_5_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_awprot.bind(*p_5_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_awqos.bind(*p_5_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awuser.bind(*p_5_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awvalid.bind(*p_5_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_awready.bind(*p_5_S00_AXI_awready);
        p_5_S00_AXI_awready->set_sv_netview_offsetfromdp(6831048);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_wdata.bind(*p_5_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_wstrb.bind(*p_5_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wlast.bind(*p_5_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wuser.bind(*p_5_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wvalid.bind(*p_5_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_wready.bind(*p_5_S00_AXI_wready);
        p_5_S00_AXI_wready->set_sv_netview_offsetfromdp(6831384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bid.bind(*p_5_S00_AXI_bid);
        p_5_S00_AXI_bid->set_sv_netview_offsetfromdp(6831440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_bresp.bind(*p_5_S00_AXI_bresp);
        p_5_S00_AXI_bresp->set_sv_netview_offsetfromdp(6831496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_buser.bind(*p_5_S00_AXI_buser);
        p_5_S00_AXI_buser->set_sv_netview_offsetfromdp(6831552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bvalid.bind(*p_5_S00_AXI_bvalid);
        p_5_S00_AXI_bvalid->set_sv_netview_offsetfromdp(6831608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_bready.bind(*p_5_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arid.bind(*p_5_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S00_AXI_araddr.bind(*p_5_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S00_AXI_arlen.bind(*p_5_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arsize.bind(*p_5_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_arburst.bind(*p_5_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S00_AXI_arlock.bind(*p_5_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arcache.bind(*p_5_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S00_AXI_arprot.bind(*p_5_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S00_AXI_arqos.bind(*p_5_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_aruser.bind(*p_5_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arvalid.bind(*p_5_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_arready.bind(*p_5_S00_AXI_arready);
        p_5_S00_AXI_arready->set_sv_netview_offsetfromdp(6832336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rid.bind(*p_5_S00_AXI_rid);
        p_5_S00_AXI_rid->set_sv_netview_offsetfromdp(6832392);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S00_AXI_rdata.bind(*p_5_S00_AXI_rdata);
        p_5_S00_AXI_rdata->set_sv_netview_offsetfromdp(6832448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S00_AXI_rresp.bind(*p_5_S00_AXI_rresp);
        p_5_S00_AXI_rresp->set_sv_netview_offsetfromdp(6832504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rlast.bind(*p_5_S00_AXI_rlast);
        p_5_S00_AXI_rlast->set_sv_netview_offsetfromdp(6832560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_ruser.bind(*p_5_S00_AXI_ruser);
        p_5_S00_AXI_ruser->set_sv_netview_offsetfromdp(6832616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rvalid.bind(*p_5_S00_AXI_rvalid);
        p_5_S00_AXI_rvalid->set_sv_netview_offsetfromdp(6832672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S00_AXI_rready.bind(*p_5_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awid.bind(*p_5_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S01_AXI_awaddr.bind(*p_5_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S01_AXI_awlen.bind(*p_5_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_awsize.bind(*p_5_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_awburst.bind(*p_5_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S01_AXI_awlock.bind(*p_5_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_awcache.bind(*p_5_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_awprot.bind(*p_5_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_awqos.bind(*p_5_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awuser.bind(*p_5_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awvalid.bind(*p_5_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_awready.bind(*p_5_S01_AXI_awready);
        p_5_S01_AXI_awready->set_sv_netview_offsetfromdp(6833400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S01_AXI_wdata.bind(*p_5_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_wstrb.bind(*p_5_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wlast.bind(*p_5_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wuser.bind(*p_5_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wvalid.bind(*p_5_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_wready.bind(*p_5_S01_AXI_wready);
        p_5_S01_AXI_wready->set_sv_netview_offsetfromdp(6833736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bid.bind(*p_5_S01_AXI_bid);
        p_5_S01_AXI_bid->set_sv_netview_offsetfromdp(6833792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_bresp.bind(*p_5_S01_AXI_bresp);
        p_5_S01_AXI_bresp->set_sv_netview_offsetfromdp(6833848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_buser.bind(*p_5_S01_AXI_buser);
        p_5_S01_AXI_buser->set_sv_netview_offsetfromdp(6833904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bvalid.bind(*p_5_S01_AXI_bvalid);
        p_5_S01_AXI_bvalid->set_sv_netview_offsetfromdp(6833960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_bready.bind(*p_5_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arid.bind(*p_5_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S01_AXI_araddr.bind(*p_5_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S01_AXI_arlen.bind(*p_5_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_arsize.bind(*p_5_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_arburst.bind(*p_5_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S01_AXI_arlock.bind(*p_5_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_arcache.bind(*p_5_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S01_AXI_arprot.bind(*p_5_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S01_AXI_arqos.bind(*p_5_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_aruser.bind(*p_5_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arvalid.bind(*p_5_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_arready.bind(*p_5_S01_AXI_arready);
        p_5_S01_AXI_arready->set_sv_netview_offsetfromdp(6834688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rid.bind(*p_5_S01_AXI_rid);
        p_5_S01_AXI_rid->set_sv_netview_offsetfromdp(6834744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S01_AXI_rdata.bind(*p_5_S01_AXI_rdata);
        p_5_S01_AXI_rdata->set_sv_netview_offsetfromdp(6834800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S01_AXI_rresp.bind(*p_5_S01_AXI_rresp);
        p_5_S01_AXI_rresp->set_sv_netview_offsetfromdp(6834856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rlast.bind(*p_5_S01_AXI_rlast);
        p_5_S01_AXI_rlast->set_sv_netview_offsetfromdp(6834912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_ruser.bind(*p_5_S01_AXI_ruser);
        p_5_S01_AXI_ruser->set_sv_netview_offsetfromdp(6834968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rvalid.bind(*p_5_S01_AXI_rvalid);
        p_5_S01_AXI_rvalid->set_sv_netview_offsetfromdp(6835024);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S01_AXI_rready.bind(*p_5_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awid.bind(*p_5_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S02_AXI_awaddr.bind(*p_5_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S02_AXI_awlen.bind(*p_5_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_awsize.bind(*p_5_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_awburst.bind(*p_5_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S02_AXI_awlock.bind(*p_5_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_awcache.bind(*p_5_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_awprot.bind(*p_5_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_awqos.bind(*p_5_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awuser.bind(*p_5_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awvalid.bind(*p_5_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_awready.bind(*p_5_S02_AXI_awready);
        p_5_S02_AXI_awready->set_sv_netview_offsetfromdp(6835752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S02_AXI_wdata.bind(*p_5_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_wstrb.bind(*p_5_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wlast.bind(*p_5_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wuser.bind(*p_5_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wvalid.bind(*p_5_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_wready.bind(*p_5_S02_AXI_wready);
        p_5_S02_AXI_wready->set_sv_netview_offsetfromdp(6836088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bid.bind(*p_5_S02_AXI_bid);
        p_5_S02_AXI_bid->set_sv_netview_offsetfromdp(6836144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_bresp.bind(*p_5_S02_AXI_bresp);
        p_5_S02_AXI_bresp->set_sv_netview_offsetfromdp(6836200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_buser.bind(*p_5_S02_AXI_buser);
        p_5_S02_AXI_buser->set_sv_netview_offsetfromdp(6836256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bvalid.bind(*p_5_S02_AXI_bvalid);
        p_5_S02_AXI_bvalid->set_sv_netview_offsetfromdp(6836312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_bready.bind(*p_5_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arid.bind(*p_5_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S02_AXI_araddr.bind(*p_5_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S02_AXI_arlen.bind(*p_5_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_arsize.bind(*p_5_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_arburst.bind(*p_5_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S02_AXI_arlock.bind(*p_5_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_arcache.bind(*p_5_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S02_AXI_arprot.bind(*p_5_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S02_AXI_arqos.bind(*p_5_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_aruser.bind(*p_5_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arvalid.bind(*p_5_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_arready.bind(*p_5_S02_AXI_arready);
        p_5_S02_AXI_arready->set_sv_netview_offsetfromdp(6837040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rid.bind(*p_5_S02_AXI_rid);
        p_5_S02_AXI_rid->set_sv_netview_offsetfromdp(6837096);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S02_AXI_rdata.bind(*p_5_S02_AXI_rdata);
        p_5_S02_AXI_rdata->set_sv_netview_offsetfromdp(6837152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S02_AXI_rresp.bind(*p_5_S02_AXI_rresp);
        p_5_S02_AXI_rresp->set_sv_netview_offsetfromdp(6837208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rlast.bind(*p_5_S02_AXI_rlast);
        p_5_S02_AXI_rlast->set_sv_netview_offsetfromdp(6837264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_ruser.bind(*p_5_S02_AXI_ruser);
        p_5_S02_AXI_ruser->set_sv_netview_offsetfromdp(6837320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rvalid.bind(*p_5_S02_AXI_rvalid);
        p_5_S02_AXI_rvalid->set_sv_netview_offsetfromdp(6837376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S02_AXI_rready.bind(*p_5_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awid.bind(*p_5_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S03_AXI_awaddr.bind(*p_5_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S03_AXI_awlen.bind(*p_5_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_awsize.bind(*p_5_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_awburst.bind(*p_5_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_5_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S03_AXI_awlock.bind(*p_5_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_awcache.bind(*p_5_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_awprot.bind(*p_5_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_awqos.bind(*p_5_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awuser.bind(*p_5_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awvalid.bind(*p_5_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_awready.bind(*p_5_S03_AXI_awready);
        p_5_S03_AXI_awready->set_sv_netview_offsetfromdp(6838104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S03_AXI_wdata.bind(*p_5_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_wstrb.bind(*p_5_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wlast.bind(*p_5_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wuser.bind(*p_5_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wvalid.bind(*p_5_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_wready.bind(*p_5_S03_AXI_wready);
        p_5_S03_AXI_wready->set_sv_netview_offsetfromdp(6838440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bid.bind(*p_5_S03_AXI_bid);
        p_5_S03_AXI_bid->set_sv_netview_offsetfromdp(6838496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_bresp.bind(*p_5_S03_AXI_bresp);
        p_5_S03_AXI_bresp->set_sv_netview_offsetfromdp(6838552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_buser.bind(*p_5_S03_AXI_buser);
        p_5_S03_AXI_buser->set_sv_netview_offsetfromdp(6838608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bvalid.bind(*p_5_S03_AXI_bvalid);
        p_5_S03_AXI_bvalid->set_sv_netview_offsetfromdp(6838664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_bready.bind(*p_5_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arid.bind(*p_5_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S03_AXI_araddr.bind(*p_5_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S03_AXI_arlen.bind(*p_5_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_arsize.bind(*p_5_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_arburst.bind(*p_5_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_5_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S03_AXI_arlock.bind(*p_5_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_arcache.bind(*p_5_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S03_AXI_arprot.bind(*p_5_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S03_AXI_arqos.bind(*p_5_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_aruser.bind(*p_5_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arvalid.bind(*p_5_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_arready.bind(*p_5_S03_AXI_arready);
        p_5_S03_AXI_arready->set_sv_netview_offsetfromdp(6839392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rid.bind(*p_5_S03_AXI_rid);
        p_5_S03_AXI_rid->set_sv_netview_offsetfromdp(6839448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->S03_AXI_rdata.bind(*p_5_S03_AXI_rdata);
        p_5_S03_AXI_rdata->set_sv_netview_offsetfromdp(6839504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S03_AXI_rresp.bind(*p_5_S03_AXI_rresp);
        p_5_S03_AXI_rresp->set_sv_netview_offsetfromdp(6839560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rlast.bind(*p_5_S03_AXI_rlast);
        p_5_S03_AXI_rlast->set_sv_netview_offsetfromdp(6839616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_ruser.bind(*p_5_S03_AXI_ruser);
        p_5_S03_AXI_ruser->set_sv_netview_offsetfromdp(6839672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rvalid.bind(*p_5_S03_AXI_rvalid);
        p_5_S03_AXI_rvalid->set_sv_netview_offsetfromdp(6839728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S03_AXI_rready.bind(*p_5_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S04_AXI_awaddr.bind(*p_5_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S04_AXI_awlen.bind(*p_5_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_awsize.bind(*p_5_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_5_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S04_AXI_awlock.bind(*p_5_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awcache.bind(*p_5_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_awprot.bind(*p_5_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awregion.bind(*p_5_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_awqos.bind(*p_5_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_awvalid.bind(*p_5_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_awready.bind(*p_5_S04_AXI_awready);
        p_5_S04_AXI_awready->set_sv_netview_offsetfromdp(6840344);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_5_S04_AXI_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_5->S04_AXI_wdata.bind(*p_5_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_wdata);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_5_S04_AXI_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_5->S04_AXI_wstrb.bind(*p_5_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wlast.bind(*p_5_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wvalid.bind(*p_5_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_wready.bind(*p_5_S04_AXI_wready);
        p_5_S04_AXI_wready->set_sv_netview_offsetfromdp(6840624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S04_AXI_bresp.bind(*p_5_S04_AXI_bresp);
        p_5_S04_AXI_bresp->set_sv_netview_offsetfromdp(6840680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_bvalid.bind(*p_5_S04_AXI_bvalid);
        p_5_S04_AXI_bvalid->set_sv_netview_offsetfromdp(6840736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_bready.bind(*p_5_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S04_AXI_araddr.bind(*p_5_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S04_AXI_arlen.bind(*p_5_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_arsize.bind(*p_5_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_5_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S04_AXI_arlock.bind(*p_5_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arcache.bind(*p_5_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S04_AXI_arprot.bind(*p_5_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arregion.bind(*p_5_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S04_AXI_arqos.bind(*p_5_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_arvalid.bind(*p_5_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_arready.bind(*p_5_S04_AXI_arready);
        p_5_S04_AXI_arready->set_sv_netview_offsetfromdp(6841352);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_5_S04_AXI_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_5->S04_AXI_rdata.bind(*p_5_S04_AXI_rdata);
        p_5_S04_AXI_rdata->set_sv_netview_offsetfromdp(6841408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S04_AXI_rresp.bind(*p_5_S04_AXI_rresp);
        p_5_S04_AXI_rresp->set_sv_netview_offsetfromdp(6841464);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rlast.bind(*p_5_S04_AXI_rlast);
        p_5_S04_AXI_rlast->set_sv_netview_offsetfromdp(6841520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rvalid.bind(*p_5_S04_AXI_rvalid);
        p_5_S04_AXI_rvalid->set_sv_netview_offsetfromdp(6841576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S04_AXI_rready.bind(*p_5_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S04_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S05_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S05_AXI_awaddr.bind(*p_5_S05_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S05_AXI_awlen.bind(*p_5_S05_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_awsize.bind(*p_5_S05_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awsize);
        xsim_sc_channel<0, bool > *p_5_S05_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S05_AXI_awlock.bind(*p_5_S05_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awcache.bind(*p_5_S05_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_awprot.bind(*p_5_S05_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awregion.bind(*p_5_S05_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_awqos.bind(*p_5_S05_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_awvalid.bind(*p_5_S05_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_awready.bind(*p_5_S05_AXI_awready);
        p_5_S05_AXI_awready->set_sv_netview_offsetfromdp(6842192);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_5_S05_AXI_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_5->S05_AXI_wdata.bind(*p_5_S05_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_wdata);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_5_S05_AXI_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_5->S05_AXI_wstrb.bind(*p_5_S05_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wlast.bind(*p_5_S05_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wvalid.bind(*p_5_S05_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_wready.bind(*p_5_S05_AXI_wready);
        p_5_S05_AXI_wready->set_sv_netview_offsetfromdp(6842472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S05_AXI_bresp.bind(*p_5_S05_AXI_bresp);
        p_5_S05_AXI_bresp->set_sv_netview_offsetfromdp(6842528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_bvalid.bind(*p_5_S05_AXI_bvalid);
        p_5_S05_AXI_bvalid->set_sv_netview_offsetfromdp(6842584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_bready.bind(*p_5_S05_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_S05_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->S05_AXI_araddr.bind(*p_5_S05_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_S05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->S05_AXI_arlen.bind(*p_5_S05_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_arsize.bind(*p_5_S05_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arsize);
        xsim_sc_channel<0, bool > *p_5_S05_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->S05_AXI_arlock.bind(*p_5_S05_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arcache.bind(*p_5_S05_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_S05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->S05_AXI_arprot.bind(*p_5_S05_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arregion.bind(*p_5_S05_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_S05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->S05_AXI_arqos.bind(*p_5_S05_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_arvalid.bind(*p_5_S05_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_arready.bind(*p_5_S05_AXI_arready);
        p_5_S05_AXI_arready->set_sv_netview_offsetfromdp(6843200);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_5_S05_AXI_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_5->S05_AXI_rdata.bind(*p_5_S05_AXI_rdata);
        p_5_S05_AXI_rdata->set_sv_netview_offsetfromdp(6843256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_S05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->S05_AXI_rresp.bind(*p_5_S05_AXI_rresp);
        p_5_S05_AXI_rresp->set_sv_netview_offsetfromdp(6843312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rlast.bind(*p_5_S05_AXI_rlast);
        p_5_S05_AXI_rlast->set_sv_netview_offsetfromdp(6843368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rvalid.bind(*p_5_S05_AXI_rvalid);
        p_5_S05_AXI_rvalid->set_sv_netview_offsetfromdp(6843424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_S05_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->S05_AXI_rready.bind(*p_5_S05_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_S05_AXI_rready);
        xsim_sc_channel<0, bool > *p_5_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_5->ddr4_mem_calib_complete.bind(*p_5_ddr4_mem_calib_complete);
        p_5_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(6843536);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_awid.bind(*p_5_M00_AXI_awid);
        p_5_M00_AXI_awid->set_sv_netview_offsetfromdp(6843592);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M00_AXI_awaddr.bind(*p_5_M00_AXI_awaddr);
        p_5_M00_AXI_awaddr->set_sv_netview_offsetfromdp(6843648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M00_AXI_awlen.bind(*p_5_M00_AXI_awlen);
        p_5_M00_AXI_awlen->set_sv_netview_offsetfromdp(6843704);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_awsize.bind(*p_5_M00_AXI_awsize);
        p_5_M00_AXI_awsize->set_sv_netview_offsetfromdp(6843760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_awburst.bind(*p_5_M00_AXI_awburst);
        p_5_M00_AXI_awburst->set_sv_netview_offsetfromdp(6843816);
        xsim_sc_channel<0, bool > *p_5_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M00_AXI_awlock.bind(*p_5_M00_AXI_awlock);
        p_5_M00_AXI_awlock->set_sv_netview_offsetfromdp(6843872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_awcache.bind(*p_5_M00_AXI_awcache);
        p_5_M00_AXI_awcache->set_sv_netview_offsetfromdp(6843928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_awprot.bind(*p_5_M00_AXI_awprot);
        p_5_M00_AXI_awprot->set_sv_netview_offsetfromdp(6843984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_awqos.bind(*p_5_M00_AXI_awqos);
        p_5_M00_AXI_awqos->set_sv_netview_offsetfromdp(6844040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M00_AXI_awuser.bind(*p_5_M00_AXI_awuser);
        p_5_M00_AXI_awuser->set_sv_netview_offsetfromdp(6844096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_awvalid.bind(*p_5_M00_AXI_awvalid);
        p_5_M00_AXI_awvalid->set_sv_netview_offsetfromdp(6844152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_awready.bind(*p_5_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M00_AXI_wdata.bind(*p_5_M00_AXI_wdata);
        p_5_M00_AXI_wdata->set_sv_netview_offsetfromdp(6844264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M00_AXI_wstrb.bind(*p_5_M00_AXI_wstrb);
        p_5_M00_AXI_wstrb->set_sv_netview_offsetfromdp(6844320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wlast.bind(*p_5_M00_AXI_wlast);
        p_5_M00_AXI_wlast->set_sv_netview_offsetfromdp(6844376);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wuser.bind(*p_5_M00_AXI_wuser);
        p_5_M00_AXI_wuser->set_sv_netview_offsetfromdp(6844432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wvalid.bind(*p_5_M00_AXI_wvalid);
        p_5_M00_AXI_wvalid->set_sv_netview_offsetfromdp(6844488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_wready.bind(*p_5_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_bid.bind(*p_5_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_bresp.bind(*p_5_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_buser.bind(*p_5_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_bvalid.bind(*p_5_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_bready.bind(*p_5_M00_AXI_bready);
        p_5_M00_AXI_bready->set_sv_netview_offsetfromdp(6844824);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_arid.bind(*p_5_M00_AXI_arid);
        p_5_M00_AXI_arid->set_sv_netview_offsetfromdp(6844880);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M00_AXI_araddr.bind(*p_5_M00_AXI_araddr);
        p_5_M00_AXI_araddr->set_sv_netview_offsetfromdp(6844936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M00_AXI_arlen.bind(*p_5_M00_AXI_arlen);
        p_5_M00_AXI_arlen->set_sv_netview_offsetfromdp(6844992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_arsize.bind(*p_5_M00_AXI_arsize);
        p_5_M00_AXI_arsize->set_sv_netview_offsetfromdp(6845048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_arburst.bind(*p_5_M00_AXI_arburst);
        p_5_M00_AXI_arburst->set_sv_netview_offsetfromdp(6845104);
        xsim_sc_channel<0, bool > *p_5_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M00_AXI_arlock.bind(*p_5_M00_AXI_arlock);
        p_5_M00_AXI_arlock->set_sv_netview_offsetfromdp(6845160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_arcache.bind(*p_5_M00_AXI_arcache);
        p_5_M00_AXI_arcache->set_sv_netview_offsetfromdp(6845216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M00_AXI_arprot.bind(*p_5_M00_AXI_arprot);
        p_5_M00_AXI_arprot->set_sv_netview_offsetfromdp(6845272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M00_AXI_arqos.bind(*p_5_M00_AXI_arqos);
        p_5_M00_AXI_arqos->set_sv_netview_offsetfromdp(6845328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M00_AXI_aruser.bind(*p_5_M00_AXI_aruser);
        p_5_M00_AXI_aruser->set_sv_netview_offsetfromdp(6845384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_arvalid.bind(*p_5_M00_AXI_arvalid);
        p_5_M00_AXI_arvalid->set_sv_netview_offsetfromdp(6845440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_arready.bind(*p_5_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M00_AXI_rid.bind(*p_5_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M00_AXI_rdata.bind(*p_5_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M00_AXI_rresp.bind(*p_5_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rlast.bind(*p_5_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_ruser.bind(*p_5_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rvalid.bind(*p_5_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M00_AXI_rready.bind(*p_5_M00_AXI_rready);
        p_5_M00_AXI_rready->set_sv_netview_offsetfromdp(6845888);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_5_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_5->M01_AXI_awaddr.bind(*p_5_M01_AXI_awaddr);
        p_5_M01_AXI_awaddr->set_sv_netview_offsetfromdp(6845944);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M01_AXI_awlen.bind(*p_5_M01_AXI_awlen);
        p_5_M01_AXI_awlen->set_sv_netview_offsetfromdp(6846000);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_awsize.bind(*p_5_M01_AXI_awsize);
        p_5_M01_AXI_awsize->set_sv_netview_offsetfromdp(6846056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_awburst.bind(*p_5_M01_AXI_awburst);
        p_5_M01_AXI_awburst->set_sv_netview_offsetfromdp(6846112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_awprot.bind(*p_5_M01_AXI_awprot);
        p_5_M01_AXI_awprot->set_sv_netview_offsetfromdp(6846168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_awvalid.bind(*p_5_M01_AXI_awvalid);
        p_5_M01_AXI_awvalid->set_sv_netview_offsetfromdp(6846224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_awready.bind(*p_5_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M01_AXI_wdata.bind(*p_5_M01_AXI_wdata);
        p_5_M01_AXI_wdata->set_sv_netview_offsetfromdp(6846336);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M01_AXI_wstrb.bind(*p_5_M01_AXI_wstrb);
        p_5_M01_AXI_wstrb->set_sv_netview_offsetfromdp(6846392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wlast.bind(*p_5_M01_AXI_wlast);
        p_5_M01_AXI_wlast->set_sv_netview_offsetfromdp(6846448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wvalid.bind(*p_5_M01_AXI_wvalid);
        p_5_M01_AXI_wvalid->set_sv_netview_offsetfromdp(6846504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_wready.bind(*p_5_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_bresp.bind(*p_5_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_bvalid.bind(*p_5_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_bready.bind(*p_5_M01_AXI_bready);
        p_5_M01_AXI_bready->set_sv_netview_offsetfromdp(6846728);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_5_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_5->M01_AXI_araddr.bind(*p_5_M01_AXI_araddr);
        p_5_M01_AXI_araddr->set_sv_netview_offsetfromdp(6846784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M01_AXI_arlen.bind(*p_5_M01_AXI_arlen);
        p_5_M01_AXI_arlen->set_sv_netview_offsetfromdp(6846840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_arsize.bind(*p_5_M01_AXI_arsize);
        p_5_M01_AXI_arsize->set_sv_netview_offsetfromdp(6846896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_arburst.bind(*p_5_M01_AXI_arburst);
        p_5_M01_AXI_arburst->set_sv_netview_offsetfromdp(6846952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M01_AXI_arprot.bind(*p_5_M01_AXI_arprot);
        p_5_M01_AXI_arprot->set_sv_netview_offsetfromdp(6847008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_arvalid.bind(*p_5_M01_AXI_arvalid);
        p_5_M01_AXI_arvalid->set_sv_netview_offsetfromdp(6847064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_arready.bind(*p_5_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M01_AXI_rdata.bind(*p_5_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M01_AXI_rresp.bind(*p_5_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rlast.bind(*p_5_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rvalid.bind(*p_5_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M01_AXI_rready.bind(*p_5_M01_AXI_rready);
        p_5_M01_AXI_rready->set_sv_netview_offsetfromdp(6847400);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_awid.bind(*p_5_M02_AXI_awid);
        p_5_M02_AXI_awid->set_sv_netview_offsetfromdp(6847456);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M02_AXI_awaddr.bind(*p_5_M02_AXI_awaddr);
        p_5_M02_AXI_awaddr->set_sv_netview_offsetfromdp(6847512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M02_AXI_awlen.bind(*p_5_M02_AXI_awlen);
        p_5_M02_AXI_awlen->set_sv_netview_offsetfromdp(6847568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_awsize.bind(*p_5_M02_AXI_awsize);
        p_5_M02_AXI_awsize->set_sv_netview_offsetfromdp(6847624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_awburst.bind(*p_5_M02_AXI_awburst);
        p_5_M02_AXI_awburst->set_sv_netview_offsetfromdp(6847680);
        xsim_sc_channel<0, bool > *p_5_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M02_AXI_awlock.bind(*p_5_M02_AXI_awlock);
        p_5_M02_AXI_awlock->set_sv_netview_offsetfromdp(6847736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_awcache.bind(*p_5_M02_AXI_awcache);
        p_5_M02_AXI_awcache->set_sv_netview_offsetfromdp(6847792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_awprot.bind(*p_5_M02_AXI_awprot);
        p_5_M02_AXI_awprot->set_sv_netview_offsetfromdp(6847848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_awqos.bind(*p_5_M02_AXI_awqos);
        p_5_M02_AXI_awqos->set_sv_netview_offsetfromdp(6847904);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M02_AXI_awuser.bind(*p_5_M02_AXI_awuser);
        p_5_M02_AXI_awuser->set_sv_netview_offsetfromdp(6847960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_awvalid.bind(*p_5_M02_AXI_awvalid);
        p_5_M02_AXI_awvalid->set_sv_netview_offsetfromdp(6848016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_awready.bind(*p_5_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M02_AXI_wdata.bind(*p_5_M02_AXI_wdata);
        p_5_M02_AXI_wdata->set_sv_netview_offsetfromdp(6848128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M02_AXI_wstrb.bind(*p_5_M02_AXI_wstrb);
        p_5_M02_AXI_wstrb->set_sv_netview_offsetfromdp(6848184);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wlast.bind(*p_5_M02_AXI_wlast);
        p_5_M02_AXI_wlast->set_sv_netview_offsetfromdp(6848240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wuser.bind(*p_5_M02_AXI_wuser);
        p_5_M02_AXI_wuser->set_sv_netview_offsetfromdp(6848296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wvalid.bind(*p_5_M02_AXI_wvalid);
        p_5_M02_AXI_wvalid->set_sv_netview_offsetfromdp(6848352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_wready.bind(*p_5_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_bid.bind(*p_5_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_bresp.bind(*p_5_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_buser.bind(*p_5_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_bvalid.bind(*p_5_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_bready.bind(*p_5_M02_AXI_bready);
        p_5_M02_AXI_bready->set_sv_netview_offsetfromdp(6848688);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_arid.bind(*p_5_M02_AXI_arid);
        p_5_M02_AXI_arid->set_sv_netview_offsetfromdp(6848744);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M02_AXI_araddr.bind(*p_5_M02_AXI_araddr);
        p_5_M02_AXI_araddr->set_sv_netview_offsetfromdp(6848800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M02_AXI_arlen.bind(*p_5_M02_AXI_arlen);
        p_5_M02_AXI_arlen->set_sv_netview_offsetfromdp(6848856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_arsize.bind(*p_5_M02_AXI_arsize);
        p_5_M02_AXI_arsize->set_sv_netview_offsetfromdp(6848912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_arburst.bind(*p_5_M02_AXI_arburst);
        p_5_M02_AXI_arburst->set_sv_netview_offsetfromdp(6848968);
        xsim_sc_channel<0, bool > *p_5_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M02_AXI_arlock.bind(*p_5_M02_AXI_arlock);
        p_5_M02_AXI_arlock->set_sv_netview_offsetfromdp(6849024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_arcache.bind(*p_5_M02_AXI_arcache);
        p_5_M02_AXI_arcache->set_sv_netview_offsetfromdp(6849080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M02_AXI_arprot.bind(*p_5_M02_AXI_arprot);
        p_5_M02_AXI_arprot->set_sv_netview_offsetfromdp(6849136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M02_AXI_arqos.bind(*p_5_M02_AXI_arqos);
        p_5_M02_AXI_arqos->set_sv_netview_offsetfromdp(6849192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M02_AXI_aruser.bind(*p_5_M02_AXI_aruser);
        p_5_M02_AXI_aruser->set_sv_netview_offsetfromdp(6849248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_arvalid.bind(*p_5_M02_AXI_arvalid);
        p_5_M02_AXI_arvalid->set_sv_netview_offsetfromdp(6849304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_arready.bind(*p_5_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M02_AXI_rid.bind(*p_5_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M02_AXI_rdata.bind(*p_5_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M02_AXI_rresp.bind(*p_5_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rlast.bind(*p_5_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_ruser.bind(*p_5_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rvalid.bind(*p_5_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M02_AXI_rready.bind(*p_5_M02_AXI_rready);
        p_5_M02_AXI_rready->set_sv_netview_offsetfromdp(6849752);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_awid.bind(*p_5_M03_AXI_awid);
        p_5_M03_AXI_awid->set_sv_netview_offsetfromdp(6849808);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M03_AXI_awaddr.bind(*p_5_M03_AXI_awaddr);
        p_5_M03_AXI_awaddr->set_sv_netview_offsetfromdp(6849864);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M03_AXI_awlen.bind(*p_5_M03_AXI_awlen);
        p_5_M03_AXI_awlen->set_sv_netview_offsetfromdp(6849920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_awsize.bind(*p_5_M03_AXI_awsize);
        p_5_M03_AXI_awsize->set_sv_netview_offsetfromdp(6849976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_awburst.bind(*p_5_M03_AXI_awburst);
        p_5_M03_AXI_awburst->set_sv_netview_offsetfromdp(6850032);
        xsim_sc_channel<0, bool > *p_5_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M03_AXI_awlock.bind(*p_5_M03_AXI_awlock);
        p_5_M03_AXI_awlock->set_sv_netview_offsetfromdp(6850088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_awcache.bind(*p_5_M03_AXI_awcache);
        p_5_M03_AXI_awcache->set_sv_netview_offsetfromdp(6850144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_awprot.bind(*p_5_M03_AXI_awprot);
        p_5_M03_AXI_awprot->set_sv_netview_offsetfromdp(6850200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_awqos.bind(*p_5_M03_AXI_awqos);
        p_5_M03_AXI_awqos->set_sv_netview_offsetfromdp(6850256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M03_AXI_awuser.bind(*p_5_M03_AXI_awuser);
        p_5_M03_AXI_awuser->set_sv_netview_offsetfromdp(6850312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_awvalid.bind(*p_5_M03_AXI_awvalid);
        p_5_M03_AXI_awvalid->set_sv_netview_offsetfromdp(6850368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_awready.bind(*p_5_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M03_AXI_wdata.bind(*p_5_M03_AXI_wdata);
        p_5_M03_AXI_wdata->set_sv_netview_offsetfromdp(6850480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_5_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_5->M03_AXI_wstrb.bind(*p_5_M03_AXI_wstrb);
        p_5_M03_AXI_wstrb->set_sv_netview_offsetfromdp(6850536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wlast.bind(*p_5_M03_AXI_wlast);
        p_5_M03_AXI_wlast->set_sv_netview_offsetfromdp(6850592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wuser.bind(*p_5_M03_AXI_wuser);
        p_5_M03_AXI_wuser->set_sv_netview_offsetfromdp(6850648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wvalid.bind(*p_5_M03_AXI_wvalid);
        p_5_M03_AXI_wvalid->set_sv_netview_offsetfromdp(6850704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_wready.bind(*p_5_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_bid.bind(*p_5_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_bresp.bind(*p_5_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_buser.bind(*p_5_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_bvalid.bind(*p_5_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_bready.bind(*p_5_M03_AXI_bready);
        p_5_M03_AXI_bready->set_sv_netview_offsetfromdp(6851040);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_arid.bind(*p_5_M03_AXI_arid);
        p_5_M03_AXI_arid->set_sv_netview_offsetfromdp(6851096);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_5_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_5->M03_AXI_araddr.bind(*p_5_M03_AXI_araddr);
        p_5_M03_AXI_araddr->set_sv_netview_offsetfromdp(6851152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->M03_AXI_arlen.bind(*p_5_M03_AXI_arlen);
        p_5_M03_AXI_arlen->set_sv_netview_offsetfromdp(6851208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_arsize.bind(*p_5_M03_AXI_arsize);
        p_5_M03_AXI_arsize->set_sv_netview_offsetfromdp(6851264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_arburst.bind(*p_5_M03_AXI_arburst);
        p_5_M03_AXI_arburst->set_sv_netview_offsetfromdp(6851320);
        xsim_sc_channel<0, bool > *p_5_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_5->M03_AXI_arlock.bind(*p_5_M03_AXI_arlock);
        p_5_M03_AXI_arlock->set_sv_netview_offsetfromdp(6851376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_arcache.bind(*p_5_M03_AXI_arcache);
        p_5_M03_AXI_arcache->set_sv_netview_offsetfromdp(6851432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->M03_AXI_arprot.bind(*p_5_M03_AXI_arprot);
        p_5_M03_AXI_arprot->set_sv_netview_offsetfromdp(6851488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->M03_AXI_arqos.bind(*p_5_M03_AXI_arqos);
        p_5_M03_AXI_arqos->set_sv_netview_offsetfromdp(6851544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->M03_AXI_aruser.bind(*p_5_M03_AXI_aruser);
        p_5_M03_AXI_aruser->set_sv_netview_offsetfromdp(6851600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_arvalid.bind(*p_5_M03_AXI_arvalid);
        p_5_M03_AXI_arvalid->set_sv_netview_offsetfromdp(6851656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_arready.bind(*p_5_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_5_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_5->M03_AXI_rid.bind(*p_5_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_5_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_5->M03_AXI_rdata.bind(*p_5_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->M03_AXI_rresp.bind(*p_5_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rlast.bind(*p_5_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_ruser.bind(*p_5_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rvalid.bind(*p_5_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_5_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_5->M03_AXI_rready.bind(*p_5_M03_AXI_rready);
        p_5_M03_AXI_rready->set_sv_netview_offsetfromdp(6852104);
        sc_inst_6 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_6->xsim_set_dbg_index(30);
        sc_inst_7 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_7->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_7_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ui_clk.bind(*p_7_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_awid.bind(*p_7_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_awaddr.bind(*p_7_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_awlen.bind(*p_7_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awsize.bind(*p_7_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_awburst.bind(*p_7_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awlock.bind(*p_7_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awcache.bind(*p_7_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awprot.bind(*p_7_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awregion.bind(*p_7_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awqos.bind(*p_7_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_awuser.bind(*p_7_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awvalid.bind(*p_7_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awready.bind(*p_7_c0_ddr_saxi_awready);
        p_7_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7808632);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_wdata.bind(*p_7_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->c0_ddr_saxi_wstrb.bind(*p_7_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wlast.bind(*p_7_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_wuser.bind(*p_7_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wvalid.bind(*p_7_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wready.bind(*p_7_c0_ddr_saxi_wready);
        p_7_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7808968);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_bid.bind(*p_7_c0_ddr_saxi_bid);
        p_7_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7809024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_bresp.bind(*p_7_c0_ddr_saxi_bresp);
        p_7_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7809080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_buser.bind(*p_7_c0_ddr_saxi_buser);
        p_7_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7809136);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bvalid.bind(*p_7_c0_ddr_saxi_bvalid);
        p_7_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7809192);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bready.bind(*p_7_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_arid.bind(*p_7_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_araddr.bind(*p_7_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_arlen.bind(*p_7_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arsize.bind(*p_7_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_arburst.bind(*p_7_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arlock.bind(*p_7_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arcache.bind(*p_7_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arprot.bind(*p_7_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arregion.bind(*p_7_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arqos.bind(*p_7_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_aruser.bind(*p_7_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arvalid.bind(*p_7_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arready.bind(*p_7_c0_ddr_saxi_arready);
        p_7_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7809976);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_rid.bind(*p_7_c0_ddr_saxi_rid);
        p_7_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7810032);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_rdata.bind(*p_7_c0_ddr_saxi_rdata);
        p_7_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7810088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_rresp.bind(*p_7_c0_ddr_saxi_rresp);
        p_7_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7810144);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rlast.bind(*p_7_c0_ddr_saxi_rlast);
        p_7_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7810200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_ruser.bind(*p_7_c0_ddr_saxi_ruser);
        p_7_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7810256);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rvalid.bind(*p_7_c0_ddr_saxi_rvalid);
        p_7_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7810312);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rready.bind(*p_7_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aclk.bind(*p_7_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aresetn.bind(*p_7_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_awid.bind(*p_7_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awaddr.bind(*p_7_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_awlen.bind(*p_7_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awsize.bind(*p_7_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_awburst.bind(*p_7_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awlock.bind(*p_7_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awcache.bind(*p_7_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awprot.bind(*p_7_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awregion.bind(*p_7_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awqos.bind(*p_7_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awuser.bind(*p_7_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awvalid.bind(*p_7_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awready.bind(*p_7_s_xdma_axi_awready);
        p_7_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7811208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_wdata.bind(*p_7_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_wstrb.bind(*p_7_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wlast.bind(*p_7_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_wuser.bind(*p_7_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wvalid.bind(*p_7_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wready.bind(*p_7_s_xdma_axi_wready);
        p_7_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7811544);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_bid.bind(*p_7_s_xdma_axi_bid);
        p_7_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7811600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_bresp.bind(*p_7_s_xdma_axi_bresp);
        p_7_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7811656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_buser.bind(*p_7_s_xdma_axi_buser);
        p_7_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7811712);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bvalid.bind(*p_7_s_xdma_axi_bvalid);
        p_7_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7811768);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bready.bind(*p_7_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_arid.bind(*p_7_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_araddr.bind(*p_7_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_arlen.bind(*p_7_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arsize.bind(*p_7_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_arburst.bind(*p_7_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arlock.bind(*p_7_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arcache.bind(*p_7_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arprot.bind(*p_7_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arregion.bind(*p_7_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arqos.bind(*p_7_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_aruser.bind(*p_7_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arvalid.bind(*p_7_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arready.bind(*p_7_s_xdma_axi_arready);
        p_7_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7812552);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_rid.bind(*p_7_s_xdma_axi_rid);
        p_7_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7812608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_rdata.bind(*p_7_s_xdma_axi_rdata);
        p_7_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7812664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_rresp.bind(*p_7_s_xdma_axi_rresp);
        p_7_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7812720);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rlast.bind(*p_7_s_xdma_axi_rlast);
        p_7_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7812776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_ruser.bind(*p_7_s_xdma_axi_ruser);
        p_7_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7812832);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rvalid.bind(*p_7_s_xdma_axi_rvalid);
        p_7_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7812888);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rready.bind(*p_7_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aclk.bind(*p_7_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aresetn.bind(*p_7_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aresetn);
        sc_inst_8 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_8->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7813888);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7814224);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7814280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7814336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7814392);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7814448);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7815232);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7815288);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7815344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7815400);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7815456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7815512);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7815568);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7816464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7816800);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7816856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7816912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7816968);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7817024);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7817808);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7817864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7817920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7817976);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7818032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7818088);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7818144);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_9->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_9_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ui_clk.bind(*p_9_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_awid.bind(*p_9_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_awaddr.bind(*p_9_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_awlen.bind(*p_9_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awsize.bind(*p_9_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_awburst.bind(*p_9_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awlock.bind(*p_9_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awcache.bind(*p_9_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_awprot.bind(*p_9_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awregion.bind(*p_9_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_awqos.bind(*p_9_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_awuser.bind(*p_9_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awvalid.bind(*p_9_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_awready.bind(*p_9_c0_ddr_saxi_awready);
        p_9_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(7819144);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_wdata.bind(*p_9_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->c0_ddr_saxi_wstrb.bind(*p_9_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wlast.bind(*p_9_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_wuser.bind(*p_9_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wvalid.bind(*p_9_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_wready.bind(*p_9_c0_ddr_saxi_wready);
        p_9_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(7819480);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_bid.bind(*p_9_c0_ddr_saxi_bid);
        p_9_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(7819536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_bresp.bind(*p_9_c0_ddr_saxi_bresp);
        p_9_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(7819592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_buser.bind(*p_9_c0_ddr_saxi_buser);
        p_9_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(7819648);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bvalid.bind(*p_9_c0_ddr_saxi_bvalid);
        p_9_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(7819704);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_bready.bind(*p_9_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_arid.bind(*p_9_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_9_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_9->c0_ddr_saxi_araddr.bind(*p_9_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->c0_ddr_saxi_arlen.bind(*p_9_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arsize.bind(*p_9_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_arburst.bind(*p_9_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arlock.bind(*p_9_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arcache.bind(*p_9_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->c0_ddr_saxi_arprot.bind(*p_9_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arregion.bind(*p_9_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->c0_ddr_saxi_arqos.bind(*p_9_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->c0_ddr_saxi_aruser.bind(*p_9_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arvalid.bind(*p_9_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_arready.bind(*p_9_c0_ddr_saxi_arready);
        p_9_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(7820488);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->c0_ddr_saxi_rid.bind(*p_9_c0_ddr_saxi_rid);
        p_9_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(7820544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_9_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_9->c0_ddr_saxi_rdata.bind(*p_9_c0_ddr_saxi_rdata);
        p_9_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(7820600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->c0_ddr_saxi_rresp.bind(*p_9_c0_ddr_saxi_rresp);
        p_9_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(7820656);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rlast.bind(*p_9_c0_ddr_saxi_rlast);
        p_9_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(7820712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->c0_ddr_saxi_ruser.bind(*p_9_c0_ddr_saxi_ruser);
        p_9_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(7820768);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rvalid.bind(*p_9_c0_ddr_saxi_rvalid);
        p_9_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(7820824);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_rready.bind(*p_9_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aclk.bind(*p_9_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_9_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->c0_ddr_saxi_aresetn.bind(*p_9_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_awid.bind(*p_9_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awaddr.bind(*p_9_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_awlen.bind(*p_9_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awsize.bind(*p_9_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_awburst.bind(*p_9_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awlock.bind(*p_9_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awcache.bind(*p_9_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_awprot.bind(*p_9_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awregion.bind(*p_9_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_awqos.bind(*p_9_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_awuser.bind(*p_9_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awvalid.bind(*p_9_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_awready.bind(*p_9_s_xdma_axi_awready);
        p_9_s_xdma_axi_awready->set_sv_netview_offsetfromdp(7821720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_wdata.bind(*p_9_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_wstrb.bind(*p_9_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wlast.bind(*p_9_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_wuser.bind(*p_9_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wvalid.bind(*p_9_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_wready.bind(*p_9_s_xdma_axi_wready);
        p_9_s_xdma_axi_wready->set_sv_netview_offsetfromdp(7822056);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_bid.bind(*p_9_s_xdma_axi_bid);
        p_9_s_xdma_axi_bid->set_sv_netview_offsetfromdp(7822112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_bresp.bind(*p_9_s_xdma_axi_bresp);
        p_9_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(7822168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_buser.bind(*p_9_s_xdma_axi_buser);
        p_9_s_xdma_axi_buser->set_sv_netview_offsetfromdp(7822224);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bvalid.bind(*p_9_s_xdma_axi_bvalid);
        p_9_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(7822280);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_bready.bind(*p_9_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_arid.bind(*p_9_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_araddr.bind(*p_9_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_xdma_axi_arlen.bind(*p_9_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arsize.bind(*p_9_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_arburst.bind(*p_9_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arlock.bind(*p_9_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arcache.bind(*p_9_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_xdma_axi_arprot.bind(*p_9_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arregion.bind(*p_9_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_xdma_axi_arqos.bind(*p_9_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_aruser.bind(*p_9_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arvalid.bind(*p_9_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_arready.bind(*p_9_s_xdma_axi_arready);
        p_9_s_xdma_axi_arready->set_sv_netview_offsetfromdp(7823064);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_9_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_9->s_xdma_axi_rid.bind(*p_9_s_xdma_axi_rid);
        p_9_s_xdma_axi_rid->set_sv_netview_offsetfromdp(7823120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_xdma_axi_rdata.bind(*p_9_s_xdma_axi_rdata);
        p_9_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(7823176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_xdma_axi_rresp.bind(*p_9_s_xdma_axi_rresp);
        p_9_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(7823232);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rlast.bind(*p_9_s_xdma_axi_rlast);
        p_9_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(7823288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s_xdma_axi_ruser.bind(*p_9_s_xdma_axi_ruser);
        p_9_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(7823344);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rvalid.bind(*p_9_s_xdma_axi_rvalid);
        p_9_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(7823400);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_rready.bind(*p_9_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aclk.bind(*p_9_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_xdma_axi_aresetn.bind(*p_9_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_xdma_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_10->xsim_set_dbg_index(667);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awid.bind(*p_10_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_awaddr.bind(*p_10_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_awlen.bind(*p_10_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awsize.bind(*p_10_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_awburst.bind(*p_10_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awlock.bind(*p_10_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awcache.bind(*p_10_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awprot.bind(*p_10_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awregion.bind(*p_10_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awqos.bind(*p_10_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awuser.bind(*p_10_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awvalid.bind(*p_10_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awready.bind(*p_10_s00_axi_awready);
        p_10_s00_axi_awready->set_sv_netview_offsetfromdp(7883952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_wdata.bind(*p_10_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_wstrb.bind(*p_10_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wlast.bind(*p_10_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_wuser.bind(*p_10_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wvalid.bind(*p_10_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wready.bind(*p_10_s00_axi_wready);
        p_10_s00_axi_wready->set_sv_netview_offsetfromdp(7884288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_bid.bind(*p_10_s00_axi_bid);
        p_10_s00_axi_bid->set_sv_netview_offsetfromdp(7884344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_bresp.bind(*p_10_s00_axi_bresp);
        p_10_s00_axi_bresp->set_sv_netview_offsetfromdp(7884400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_buser.bind(*p_10_s00_axi_buser);
        p_10_s00_axi_buser->set_sv_netview_offsetfromdp(7884456);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bvalid.bind(*p_10_s00_axi_bvalid);
        p_10_s00_axi_bvalid->set_sv_netview_offsetfromdp(7884512);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bready.bind(*p_10_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_arid.bind(*p_10_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_araddr.bind(*p_10_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_arlen.bind(*p_10_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arsize.bind(*p_10_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_arburst.bind(*p_10_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arlock.bind(*p_10_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arcache.bind(*p_10_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arprot.bind(*p_10_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arregion.bind(*p_10_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arqos.bind(*p_10_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_aruser.bind(*p_10_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arvalid.bind(*p_10_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arready.bind(*p_10_s00_axi_arready);
        p_10_s00_axi_arready->set_sv_netview_offsetfromdp(7885296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_rid.bind(*p_10_s00_axi_rid);
        p_10_s00_axi_rid->set_sv_netview_offsetfromdp(7885352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_rdata.bind(*p_10_s00_axi_rdata);
        p_10_s00_axi_rdata->set_sv_netview_offsetfromdp(7885408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_rresp.bind(*p_10_s00_axi_rresp);
        p_10_s00_axi_rresp->set_sv_netview_offsetfromdp(7885464);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rlast.bind(*p_10_s00_axi_rlast);
        p_10_s00_axi_rlast->set_sv_netview_offsetfromdp(7885520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_ruser.bind(*p_10_s00_axi_ruser);
        p_10_s00_axi_ruser->set_sv_netview_offsetfromdp(7885576);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rvalid.bind(*p_10_s00_axi_rvalid);
        p_10_s00_axi_rvalid->set_sv_netview_offsetfromdp(7885632);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rready.bind(*p_10_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aclk.bind(*p_10_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aresetn.bind(*p_10_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awid.bind(*p_10_m00_axi_awid);
        p_10_m00_axi_awid->set_sv_netview_offsetfromdp(7885856);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_awaddr.bind(*p_10_m00_axi_awaddr);
        p_10_m00_axi_awaddr->set_sv_netview_offsetfromdp(7885912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_awlen.bind(*p_10_m00_axi_awlen);
        p_10_m00_axi_awlen->set_sv_netview_offsetfromdp(7885968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awsize.bind(*p_10_m00_axi_awsize);
        p_10_m00_axi_awsize->set_sv_netview_offsetfromdp(7886024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_awburst.bind(*p_10_m00_axi_awburst);
        p_10_m00_axi_awburst->set_sv_netview_offsetfromdp(7886080);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awlock.bind(*p_10_m00_axi_awlock);
        p_10_m00_axi_awlock->set_sv_netview_offsetfromdp(7886136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awcache.bind(*p_10_m00_axi_awcache);
        p_10_m00_axi_awcache->set_sv_netview_offsetfromdp(7886192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awprot.bind(*p_10_m00_axi_awprot);
        p_10_m00_axi_awprot->set_sv_netview_offsetfromdp(7886248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awqos.bind(*p_10_m00_axi_awqos);
        p_10_m00_axi_awqos->set_sv_netview_offsetfromdp(7886304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awuser.bind(*p_10_m00_axi_awuser);
        p_10_m00_axi_awuser->set_sv_netview_offsetfromdp(7886360);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awvalid.bind(*p_10_m00_axi_awvalid);
        p_10_m00_axi_awvalid->set_sv_netview_offsetfromdp(7886416);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awready.bind(*p_10_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_wdata.bind(*p_10_m00_axi_wdata);
        p_10_m00_axi_wdata->set_sv_netview_offsetfromdp(7886528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_wstrb.bind(*p_10_m00_axi_wstrb);
        p_10_m00_axi_wstrb->set_sv_netview_offsetfromdp(7886584);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wlast.bind(*p_10_m00_axi_wlast);
        p_10_m00_axi_wlast->set_sv_netview_offsetfromdp(7886640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_wuser.bind(*p_10_m00_axi_wuser);
        p_10_m00_axi_wuser->set_sv_netview_offsetfromdp(7886696);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wvalid.bind(*p_10_m00_axi_wvalid);
        p_10_m00_axi_wvalid->set_sv_netview_offsetfromdp(7886752);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wready.bind(*p_10_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_bid.bind(*p_10_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_bresp.bind(*p_10_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_buser.bind(*p_10_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bvalid.bind(*p_10_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bready.bind(*p_10_m00_axi_bready);
        p_10_m00_axi_bready->set_sv_netview_offsetfromdp(7887088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_arid.bind(*p_10_m00_axi_arid);
        p_10_m00_axi_arid->set_sv_netview_offsetfromdp(7887144);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_araddr.bind(*p_10_m00_axi_araddr);
        p_10_m00_axi_araddr->set_sv_netview_offsetfromdp(7887200);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_arlen.bind(*p_10_m00_axi_arlen);
        p_10_m00_axi_arlen->set_sv_netview_offsetfromdp(7887256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arsize.bind(*p_10_m00_axi_arsize);
        p_10_m00_axi_arsize->set_sv_netview_offsetfromdp(7887312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_arburst.bind(*p_10_m00_axi_arburst);
        p_10_m00_axi_arburst->set_sv_netview_offsetfromdp(7887368);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arlock.bind(*p_10_m00_axi_arlock);
        p_10_m00_axi_arlock->set_sv_netview_offsetfromdp(7887424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arcache.bind(*p_10_m00_axi_arcache);
        p_10_m00_axi_arcache->set_sv_netview_offsetfromdp(7887480);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arprot.bind(*p_10_m00_axi_arprot);
        p_10_m00_axi_arprot->set_sv_netview_offsetfromdp(7887536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arqos.bind(*p_10_m00_axi_arqos);
        p_10_m00_axi_arqos->set_sv_netview_offsetfromdp(7887592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_aruser.bind(*p_10_m00_axi_aruser);
        p_10_m00_axi_aruser->set_sv_netview_offsetfromdp(7887648);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arvalid.bind(*p_10_m00_axi_arvalid);
        p_10_m00_axi_arvalid->set_sv_netview_offsetfromdp(7887704);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arready.bind(*p_10_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_rid.bind(*p_10_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_rdata.bind(*p_10_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_rresp.bind(*p_10_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rlast.bind(*p_10_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_ruser.bind(*p_10_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rvalid.bind(*p_10_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rready.bind(*p_10_m00_axi_rready);
        p_10_m00_axi_rready->set_sv_netview_offsetfromdp(7888152);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aclk.bind(*p_10_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aresetn.bind(*p_10_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_11->xsim_set_dbg_index(781);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(8522424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(8522760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(8522816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(8522872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(8522928);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(8522984);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(8523768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(8523824);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(8523880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(8523936);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(8523992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(8524048);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(8524104);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(8524328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(8524384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(8524440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(8524496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(8524552);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(8524608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(8524664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(8524720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(8524776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(8524832);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(8524888);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(8525000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(8525056);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(8525112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(8525168);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(8525224);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(8525560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(8525616);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(8525672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(8525728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(8525784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(8525840);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(8525896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(8525952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(8526008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(8526064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(8526120);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(8526176);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(8526624);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_12->xsim_set_dbg_index(782);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(8527512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(8527848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(8527904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(8527960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(8528016);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(8528072);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(8528856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(8528912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(8528968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(8529024);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(8529080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(8529136);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(8529192);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(8529416);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(8529472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(8529528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(8529584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(8529640);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(8529696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(8529752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(8529808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(8529864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(8529920);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(8529976);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(8530088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(8530144);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(8530200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(8530256);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(8530312);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(8530648);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(8530704);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(8530760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(8530816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(8530872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(8530928);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(8530984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(8531040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(8531096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(8531152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(8531208);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(8531264);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(8531712);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_13->xsim_set_dbg_index(1020);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awuser.bind(*p_13_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(9018704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_wuser.bind(*p_13_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(9019040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(9019096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(9019152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_buser.bind(*p_13_s00_axi_buser);
        p_13_s00_axi_buser->set_sv_netview_offsetfromdp(9019208);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(9019264);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_13_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_aruser.bind(*p_13_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(9020048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(9020104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(9020160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(9020216);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(9020272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_ruser.bind(*p_13_s00_axi_ruser);
        p_13_s00_axi_ruser->set_sv_netview_offsetfromdp(9020328);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(9020384);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(9020608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(9020664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(9020720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(9020776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(9020832);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(9020888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(9020944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(9021000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(9021056);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(9021112);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(9021168);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(9021280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(9021336);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(9021392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(9021448);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(9021504);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(9021840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(9021896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(9021952);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(9022008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(9022064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(9022120);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(9022176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(9022232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(9022288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(9022344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(9022400);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(9022456);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(9022904);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aresetn);
        sc_inst_14 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_14->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_awid.bind(*p_14_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s00_axi_awaddr.bind(*p_14_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_awlen.bind(*p_14_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awsize.bind(*p_14_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_awburst.bind(*p_14_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awlock.bind(*p_14_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awcache.bind(*p_14_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_awprot.bind(*p_14_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awregion.bind(*p_14_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_awqos.bind(*p_14_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awvalid.bind(*p_14_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_awready.bind(*p_14_s00_axi_awready);
        p_14_s00_axi_awready->set_sv_netview_offsetfromdp(9748136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_wdata.bind(*p_14_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_wstrb.bind(*p_14_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wlast.bind(*p_14_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wvalid.bind(*p_14_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_wready.bind(*p_14_s00_axi_wready);
        p_14_s00_axi_wready->set_sv_netview_offsetfromdp(9748416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_bid.bind(*p_14_s00_axi_bid);
        p_14_s00_axi_bid->set_sv_netview_offsetfromdp(9748472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_bresp.bind(*p_14_s00_axi_bresp);
        p_14_s00_axi_bresp->set_sv_netview_offsetfromdp(9748528);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bvalid.bind(*p_14_s00_axi_bvalid);
        p_14_s00_axi_bvalid->set_sv_netview_offsetfromdp(9748584);
        xsim_sc_channel<0, bool > *p_14_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_bready.bind(*p_14_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_arid.bind(*p_14_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s00_axi_araddr.bind(*p_14_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s00_axi_arlen.bind(*p_14_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arsize.bind(*p_14_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_arburst.bind(*p_14_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arlock.bind(*p_14_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arcache.bind(*p_14_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s00_axi_arprot.bind(*p_14_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arregion.bind(*p_14_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s00_axi_arqos.bind(*p_14_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arvalid.bind(*p_14_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_arready.bind(*p_14_s00_axi_arready);
        p_14_s00_axi_arready->set_sv_netview_offsetfromdp(9749312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s00_axi_rid.bind(*p_14_s00_axi_rid);
        p_14_s00_axi_rid->set_sv_netview_offsetfromdp(9749368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s00_axi_rdata.bind(*p_14_s00_axi_rdata);
        p_14_s00_axi_rdata->set_sv_netview_offsetfromdp(9749424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s00_axi_rresp.bind(*p_14_s00_axi_rresp);
        p_14_s00_axi_rresp->set_sv_netview_offsetfromdp(9749480);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rlast.bind(*p_14_s00_axi_rlast);
        p_14_s00_axi_rlast->set_sv_netview_offsetfromdp(9749536);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rvalid.bind(*p_14_s00_axi_rvalid);
        p_14_s00_axi_rvalid->set_sv_netview_offsetfromdp(9749592);
        xsim_sc_channel<0, bool > *p_14_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_rready.bind(*p_14_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aclk.bind(*p_14_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s00_axi_aresetn.bind(*p_14_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awid.bind(*p_14_m00_axi_awid);
        p_14_m00_axi_awid->set_sv_netview_offsetfromdp(9749816);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_awaddr.bind(*p_14_m00_axi_awaddr);
        p_14_m00_axi_awaddr->set_sv_netview_offsetfromdp(9749872);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_awlen.bind(*p_14_m00_axi_awlen);
        p_14_m00_axi_awlen->set_sv_netview_offsetfromdp(9749928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awsize.bind(*p_14_m00_axi_awsize);
        p_14_m00_axi_awsize->set_sv_netview_offsetfromdp(9749984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_awburst.bind(*p_14_m00_axi_awburst);
        p_14_m00_axi_awburst->set_sv_netview_offsetfromdp(9750040);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awlock.bind(*p_14_m00_axi_awlock);
        p_14_m00_axi_awlock->set_sv_netview_offsetfromdp(9750096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awcache.bind(*p_14_m00_axi_awcache);
        p_14_m00_axi_awcache->set_sv_netview_offsetfromdp(9750152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_awprot.bind(*p_14_m00_axi_awprot);
        p_14_m00_axi_awprot->set_sv_netview_offsetfromdp(9750208);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_awqos.bind(*p_14_m00_axi_awqos);
        p_14_m00_axi_awqos->set_sv_netview_offsetfromdp(9750264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_awuser.bind(*p_14_m00_axi_awuser);
        p_14_m00_axi_awuser->set_sv_netview_offsetfromdp(9750320);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awvalid.bind(*p_14_m00_axi_awvalid);
        p_14_m00_axi_awvalid->set_sv_netview_offsetfromdp(9750376);
        xsim_sc_channel<0, bool > *p_14_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_awready.bind(*p_14_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_wdata.bind(*p_14_m00_axi_wdata);
        p_14_m00_axi_wdata->set_sv_netview_offsetfromdp(9750488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_wstrb.bind(*p_14_m00_axi_wstrb);
        p_14_m00_axi_wstrb->set_sv_netview_offsetfromdp(9750544);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wlast.bind(*p_14_m00_axi_wlast);
        p_14_m00_axi_wlast->set_sv_netview_offsetfromdp(9750600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_wuser.bind(*p_14_m00_axi_wuser);
        p_14_m00_axi_wuser->set_sv_netview_offsetfromdp(9750656);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wvalid.bind(*p_14_m00_axi_wvalid);
        p_14_m00_axi_wvalid->set_sv_netview_offsetfromdp(9750712);
        xsim_sc_channel<0, bool > *p_14_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_wready.bind(*p_14_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_bid.bind(*p_14_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_bresp.bind(*p_14_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_buser.bind(*p_14_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bvalid.bind(*p_14_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_bready.bind(*p_14_m00_axi_bready);
        p_14_m00_axi_bready->set_sv_netview_offsetfromdp(9751048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_arid.bind(*p_14_m00_axi_arid);
        p_14_m00_axi_arid->set_sv_netview_offsetfromdp(9751104);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m00_axi_araddr.bind(*p_14_m00_axi_araddr);
        p_14_m00_axi_araddr->set_sv_netview_offsetfromdp(9751160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m00_axi_arlen.bind(*p_14_m00_axi_arlen);
        p_14_m00_axi_arlen->set_sv_netview_offsetfromdp(9751216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arsize.bind(*p_14_m00_axi_arsize);
        p_14_m00_axi_arsize->set_sv_netview_offsetfromdp(9751272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_arburst.bind(*p_14_m00_axi_arburst);
        p_14_m00_axi_arburst->set_sv_netview_offsetfromdp(9751328);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arlock.bind(*p_14_m00_axi_arlock);
        p_14_m00_axi_arlock->set_sv_netview_offsetfromdp(9751384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arcache.bind(*p_14_m00_axi_arcache);
        p_14_m00_axi_arcache->set_sv_netview_offsetfromdp(9751440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m00_axi_arprot.bind(*p_14_m00_axi_arprot);
        p_14_m00_axi_arprot->set_sv_netview_offsetfromdp(9751496);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m00_axi_arqos.bind(*p_14_m00_axi_arqos);
        p_14_m00_axi_arqos->set_sv_netview_offsetfromdp(9751552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_aruser.bind(*p_14_m00_axi_aruser);
        p_14_m00_axi_aruser->set_sv_netview_offsetfromdp(9751608);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arvalid.bind(*p_14_m00_axi_arvalid);
        p_14_m00_axi_arvalid->set_sv_netview_offsetfromdp(9751664);
        xsim_sc_channel<0, bool > *p_14_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_arready.bind(*p_14_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_rid.bind(*p_14_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m00_axi_rdata.bind(*p_14_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m00_axi_rresp.bind(*p_14_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rlast.bind(*p_14_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m00_axi_ruser.bind(*p_14_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rvalid.bind(*p_14_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_rready.bind(*p_14_m00_axi_rready);
        p_14_m00_axi_rready->set_sv_netview_offsetfromdp(9752112);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aclk.bind(*p_14_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m00_axi_aresetn.bind(*p_14_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_awid.bind(*p_14_m02_axi_awid);
        p_14_m02_axi_awid->set_sv_netview_offsetfromdp(9752280);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m02_axi_awaddr.bind(*p_14_m02_axi_awaddr);
        p_14_m02_axi_awaddr->set_sv_netview_offsetfromdp(9752336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m02_axi_awlen.bind(*p_14_m02_axi_awlen);
        p_14_m02_axi_awlen->set_sv_netview_offsetfromdp(9752392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_awsize.bind(*p_14_m02_axi_awsize);
        p_14_m02_axi_awsize->set_sv_netview_offsetfromdp(9752448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_awburst.bind(*p_14_m02_axi_awburst);
        p_14_m02_axi_awburst->set_sv_netview_offsetfromdp(9752504);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awlock.bind(*p_14_m02_axi_awlock);
        p_14_m02_axi_awlock->set_sv_netview_offsetfromdp(9752560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_awcache.bind(*p_14_m02_axi_awcache);
        p_14_m02_axi_awcache->set_sv_netview_offsetfromdp(9752616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_awprot.bind(*p_14_m02_axi_awprot);
        p_14_m02_axi_awprot->set_sv_netview_offsetfromdp(9752672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_awqos.bind(*p_14_m02_axi_awqos);
        p_14_m02_axi_awqos->set_sv_netview_offsetfromdp(9752728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_awuser.bind(*p_14_m02_axi_awuser);
        p_14_m02_axi_awuser->set_sv_netview_offsetfromdp(9752784);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awvalid.bind(*p_14_m02_axi_awvalid);
        p_14_m02_axi_awvalid->set_sv_netview_offsetfromdp(9752840);
        xsim_sc_channel<0, bool > *p_14_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_awready.bind(*p_14_m02_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m02_axi_wdata.bind(*p_14_m02_axi_wdata);
        p_14_m02_axi_wdata->set_sv_netview_offsetfromdp(9752952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_wstrb.bind(*p_14_m02_axi_wstrb);
        p_14_m02_axi_wstrb->set_sv_netview_offsetfromdp(9753008);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wlast.bind(*p_14_m02_axi_wlast);
        p_14_m02_axi_wlast->set_sv_netview_offsetfromdp(9753064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_wuser.bind(*p_14_m02_axi_wuser);
        p_14_m02_axi_wuser->set_sv_netview_offsetfromdp(9753120);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wvalid.bind(*p_14_m02_axi_wvalid);
        p_14_m02_axi_wvalid->set_sv_netview_offsetfromdp(9753176);
        xsim_sc_channel<0, bool > *p_14_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_wready.bind(*p_14_m02_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_bid.bind(*p_14_m02_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_bresp.bind(*p_14_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_buser.bind(*p_14_m02_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_bvalid.bind(*p_14_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_bready.bind(*p_14_m02_axi_bready);
        p_14_m02_axi_bready->set_sv_netview_offsetfromdp(9753512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_arid.bind(*p_14_m02_axi_arid);
        p_14_m02_axi_arid->set_sv_netview_offsetfromdp(9753568);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m02_axi_araddr.bind(*p_14_m02_axi_araddr);
        p_14_m02_axi_araddr->set_sv_netview_offsetfromdp(9753624);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m02_axi_arlen.bind(*p_14_m02_axi_arlen);
        p_14_m02_axi_arlen->set_sv_netview_offsetfromdp(9753680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_arsize.bind(*p_14_m02_axi_arsize);
        p_14_m02_axi_arsize->set_sv_netview_offsetfromdp(9753736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_arburst.bind(*p_14_m02_axi_arburst);
        p_14_m02_axi_arburst->set_sv_netview_offsetfromdp(9753792);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arlock.bind(*p_14_m02_axi_arlock);
        p_14_m02_axi_arlock->set_sv_netview_offsetfromdp(9753848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_arcache.bind(*p_14_m02_axi_arcache);
        p_14_m02_axi_arcache->set_sv_netview_offsetfromdp(9753904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m02_axi_arprot.bind(*p_14_m02_axi_arprot);
        p_14_m02_axi_arprot->set_sv_netview_offsetfromdp(9753960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m02_axi_arqos.bind(*p_14_m02_axi_arqos);
        p_14_m02_axi_arqos->set_sv_netview_offsetfromdp(9754016);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_aruser.bind(*p_14_m02_axi_aruser);
        p_14_m02_axi_aruser->set_sv_netview_offsetfromdp(9754072);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arvalid.bind(*p_14_m02_axi_arvalid);
        p_14_m02_axi_arvalid->set_sv_netview_offsetfromdp(9754128);
        xsim_sc_channel<0, bool > *p_14_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_arready.bind(*p_14_m02_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_rid.bind(*p_14_m02_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m02_axi_rdata.bind(*p_14_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m02_axi_rresp.bind(*p_14_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rlast.bind(*p_14_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m02_axi_ruser.bind(*p_14_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rvalid.bind(*p_14_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_rready.bind(*p_14_m02_axi_rready);
        p_14_m02_axi_rready->set_sv_netview_offsetfromdp(9754576);
        xsim_sc_channel<0, bool > *p_14_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_aclk.bind(*p_14_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m02_axi_aresetn.bind(*p_14_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_awid.bind(*p_14_m03_axi_awid);
        p_14_m03_axi_awid->set_sv_netview_offsetfromdp(9754744);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m03_axi_awaddr.bind(*p_14_m03_axi_awaddr);
        p_14_m03_axi_awaddr->set_sv_netview_offsetfromdp(9754800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m03_axi_awlen.bind(*p_14_m03_axi_awlen);
        p_14_m03_axi_awlen->set_sv_netview_offsetfromdp(9754856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_awsize.bind(*p_14_m03_axi_awsize);
        p_14_m03_axi_awsize->set_sv_netview_offsetfromdp(9754912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_awburst.bind(*p_14_m03_axi_awburst);
        p_14_m03_axi_awburst->set_sv_netview_offsetfromdp(9754968);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awlock.bind(*p_14_m03_axi_awlock);
        p_14_m03_axi_awlock->set_sv_netview_offsetfromdp(9755024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_awcache.bind(*p_14_m03_axi_awcache);
        p_14_m03_axi_awcache->set_sv_netview_offsetfromdp(9755080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_awprot.bind(*p_14_m03_axi_awprot);
        p_14_m03_axi_awprot->set_sv_netview_offsetfromdp(9755136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_awqos.bind(*p_14_m03_axi_awqos);
        p_14_m03_axi_awqos->set_sv_netview_offsetfromdp(9755192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_awuser.bind(*p_14_m03_axi_awuser);
        p_14_m03_axi_awuser->set_sv_netview_offsetfromdp(9755248);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awvalid.bind(*p_14_m03_axi_awvalid);
        p_14_m03_axi_awvalid->set_sv_netview_offsetfromdp(9755304);
        xsim_sc_channel<0, bool > *p_14_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_awready.bind(*p_14_m03_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m03_axi_wdata.bind(*p_14_m03_axi_wdata);
        p_14_m03_axi_wdata->set_sv_netview_offsetfromdp(9755416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_wstrb.bind(*p_14_m03_axi_wstrb);
        p_14_m03_axi_wstrb->set_sv_netview_offsetfromdp(9755472);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wlast.bind(*p_14_m03_axi_wlast);
        p_14_m03_axi_wlast->set_sv_netview_offsetfromdp(9755528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_wuser.bind(*p_14_m03_axi_wuser);
        p_14_m03_axi_wuser->set_sv_netview_offsetfromdp(9755584);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wvalid.bind(*p_14_m03_axi_wvalid);
        p_14_m03_axi_wvalid->set_sv_netview_offsetfromdp(9755640);
        xsim_sc_channel<0, bool > *p_14_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_wready.bind(*p_14_m03_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_bid.bind(*p_14_m03_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_bresp.bind(*p_14_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_buser.bind(*p_14_m03_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_bvalid.bind(*p_14_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_bready.bind(*p_14_m03_axi_bready);
        p_14_m03_axi_bready->set_sv_netview_offsetfromdp(9755976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_arid.bind(*p_14_m03_axi_arid);
        p_14_m03_axi_arid->set_sv_netview_offsetfromdp(9756032);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m03_axi_araddr.bind(*p_14_m03_axi_araddr);
        p_14_m03_axi_araddr->set_sv_netview_offsetfromdp(9756088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m03_axi_arlen.bind(*p_14_m03_axi_arlen);
        p_14_m03_axi_arlen->set_sv_netview_offsetfromdp(9756144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_arsize.bind(*p_14_m03_axi_arsize);
        p_14_m03_axi_arsize->set_sv_netview_offsetfromdp(9756200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_arburst.bind(*p_14_m03_axi_arburst);
        p_14_m03_axi_arburst->set_sv_netview_offsetfromdp(9756256);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arlock.bind(*p_14_m03_axi_arlock);
        p_14_m03_axi_arlock->set_sv_netview_offsetfromdp(9756312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_arcache.bind(*p_14_m03_axi_arcache);
        p_14_m03_axi_arcache->set_sv_netview_offsetfromdp(9756368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m03_axi_arprot.bind(*p_14_m03_axi_arprot);
        p_14_m03_axi_arprot->set_sv_netview_offsetfromdp(9756424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m03_axi_arqos.bind(*p_14_m03_axi_arqos);
        p_14_m03_axi_arqos->set_sv_netview_offsetfromdp(9756480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_aruser.bind(*p_14_m03_axi_aruser);
        p_14_m03_axi_aruser->set_sv_netview_offsetfromdp(9756536);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arvalid.bind(*p_14_m03_axi_arvalid);
        p_14_m03_axi_arvalid->set_sv_netview_offsetfromdp(9756592);
        xsim_sc_channel<0, bool > *p_14_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_arready.bind(*p_14_m03_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_rid.bind(*p_14_m03_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m03_axi_rdata.bind(*p_14_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m03_axi_rresp.bind(*p_14_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rlast.bind(*p_14_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m03_axi_ruser.bind(*p_14_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rvalid.bind(*p_14_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_rready.bind(*p_14_m03_axi_rready);
        p_14_m03_axi_rready->set_sv_netview_offsetfromdp(9757040);
        xsim_sc_channel<0, bool > *p_14_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_aclk.bind(*p_14_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m03_axi_aresetn.bind(*p_14_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_awid.bind(*p_14_m04_axi_awid);
        p_14_m04_axi_awid->set_sv_netview_offsetfromdp(9757208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m04_axi_awaddr.bind(*p_14_m04_axi_awaddr);
        p_14_m04_axi_awaddr->set_sv_netview_offsetfromdp(9757264);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_awlen.bind(*p_14_m04_axi_awlen);
        p_14_m04_axi_awlen->set_sv_netview_offsetfromdp(9757320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_awsize.bind(*p_14_m04_axi_awsize);
        p_14_m04_axi_awsize->set_sv_netview_offsetfromdp(9757376);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_awburst.bind(*p_14_m04_axi_awburst);
        p_14_m04_axi_awburst->set_sv_netview_offsetfromdp(9757432);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awlock.bind(*p_14_m04_axi_awlock);
        p_14_m04_axi_awlock->set_sv_netview_offsetfromdp(9757488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_awcache.bind(*p_14_m04_axi_awcache);
        p_14_m04_axi_awcache->set_sv_netview_offsetfromdp(9757544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_awprot.bind(*p_14_m04_axi_awprot);
        p_14_m04_axi_awprot->set_sv_netview_offsetfromdp(9757600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_awqos.bind(*p_14_m04_axi_awqos);
        p_14_m04_axi_awqos->set_sv_netview_offsetfromdp(9757656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_awuser.bind(*p_14_m04_axi_awuser);
        p_14_m04_axi_awuser->set_sv_netview_offsetfromdp(9757712);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awvalid.bind(*p_14_m04_axi_awvalid);
        p_14_m04_axi_awvalid->set_sv_netview_offsetfromdp(9757768);
        xsim_sc_channel<0, bool > *p_14_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_awready.bind(*p_14_m04_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m04_axi_wdata.bind(*p_14_m04_axi_wdata);
        p_14_m04_axi_wdata->set_sv_netview_offsetfromdp(9757880);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_wstrb.bind(*p_14_m04_axi_wstrb);
        p_14_m04_axi_wstrb->set_sv_netview_offsetfromdp(9757936);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wlast.bind(*p_14_m04_axi_wlast);
        p_14_m04_axi_wlast->set_sv_netview_offsetfromdp(9757992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_wuser.bind(*p_14_m04_axi_wuser);
        p_14_m04_axi_wuser->set_sv_netview_offsetfromdp(9758048);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wvalid.bind(*p_14_m04_axi_wvalid);
        p_14_m04_axi_wvalid->set_sv_netview_offsetfromdp(9758104);
        xsim_sc_channel<0, bool > *p_14_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_wready.bind(*p_14_m04_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_bid.bind(*p_14_m04_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_bresp.bind(*p_14_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_buser.bind(*p_14_m04_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_bvalid.bind(*p_14_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_bready.bind(*p_14_m04_axi_bready);
        p_14_m04_axi_bready->set_sv_netview_offsetfromdp(9758440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_arid.bind(*p_14_m04_axi_arid);
        p_14_m04_axi_arid->set_sv_netview_offsetfromdp(9758496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m04_axi_araddr.bind(*p_14_m04_axi_araddr);
        p_14_m04_axi_araddr->set_sv_netview_offsetfromdp(9758552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m04_axi_arlen.bind(*p_14_m04_axi_arlen);
        p_14_m04_axi_arlen->set_sv_netview_offsetfromdp(9758608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_arsize.bind(*p_14_m04_axi_arsize);
        p_14_m04_axi_arsize->set_sv_netview_offsetfromdp(9758664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_arburst.bind(*p_14_m04_axi_arburst);
        p_14_m04_axi_arburst->set_sv_netview_offsetfromdp(9758720);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arlock.bind(*p_14_m04_axi_arlock);
        p_14_m04_axi_arlock->set_sv_netview_offsetfromdp(9758776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_arcache.bind(*p_14_m04_axi_arcache);
        p_14_m04_axi_arcache->set_sv_netview_offsetfromdp(9758832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m04_axi_arprot.bind(*p_14_m04_axi_arprot);
        p_14_m04_axi_arprot->set_sv_netview_offsetfromdp(9758888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m04_axi_arqos.bind(*p_14_m04_axi_arqos);
        p_14_m04_axi_arqos->set_sv_netview_offsetfromdp(9758944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_aruser.bind(*p_14_m04_axi_aruser);
        p_14_m04_axi_aruser->set_sv_netview_offsetfromdp(9759000);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arvalid.bind(*p_14_m04_axi_arvalid);
        p_14_m04_axi_arvalid->set_sv_netview_offsetfromdp(9759056);
        xsim_sc_channel<0, bool > *p_14_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_arready.bind(*p_14_m04_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_rid.bind(*p_14_m04_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m04_axi_rdata.bind(*p_14_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m04_axi_rresp.bind(*p_14_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rlast.bind(*p_14_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m04_axi_ruser.bind(*p_14_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rvalid.bind(*p_14_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_rready.bind(*p_14_m04_axi_rready);
        p_14_m04_axi_rready->set_sv_netview_offsetfromdp(9759504);
        xsim_sc_channel<0, bool > *p_14_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_aclk.bind(*p_14_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m04_axi_aresetn.bind(*p_14_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_awid.bind(*p_14_m01_axi_awid);
        p_14_m01_axi_awid->set_sv_netview_offsetfromdp(9759672);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m01_axi_awaddr.bind(*p_14_m01_axi_awaddr);
        p_14_m01_axi_awaddr->set_sv_netview_offsetfromdp(9759728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m01_axi_awlen.bind(*p_14_m01_axi_awlen);
        p_14_m01_axi_awlen->set_sv_netview_offsetfromdp(9759784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_awsize.bind(*p_14_m01_axi_awsize);
        p_14_m01_axi_awsize->set_sv_netview_offsetfromdp(9759840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_awburst.bind(*p_14_m01_axi_awburst);
        p_14_m01_axi_awburst->set_sv_netview_offsetfromdp(9759896);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awlock.bind(*p_14_m01_axi_awlock);
        p_14_m01_axi_awlock->set_sv_netview_offsetfromdp(9759952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_awcache.bind(*p_14_m01_axi_awcache);
        p_14_m01_axi_awcache->set_sv_netview_offsetfromdp(9760008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_awprot.bind(*p_14_m01_axi_awprot);
        p_14_m01_axi_awprot->set_sv_netview_offsetfromdp(9760064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_awqos.bind(*p_14_m01_axi_awqos);
        p_14_m01_axi_awqos->set_sv_netview_offsetfromdp(9760120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_awuser.bind(*p_14_m01_axi_awuser);
        p_14_m01_axi_awuser->set_sv_netview_offsetfromdp(9760176);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awvalid.bind(*p_14_m01_axi_awvalid);
        p_14_m01_axi_awvalid->set_sv_netview_offsetfromdp(9760232);
        xsim_sc_channel<0, bool > *p_14_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_awready.bind(*p_14_m01_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m01_axi_wdata.bind(*p_14_m01_axi_wdata);
        p_14_m01_axi_wdata->set_sv_netview_offsetfromdp(9760344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_wstrb.bind(*p_14_m01_axi_wstrb);
        p_14_m01_axi_wstrb->set_sv_netview_offsetfromdp(9760400);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wlast.bind(*p_14_m01_axi_wlast);
        p_14_m01_axi_wlast->set_sv_netview_offsetfromdp(9760456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_wuser.bind(*p_14_m01_axi_wuser);
        p_14_m01_axi_wuser->set_sv_netview_offsetfromdp(9760512);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wvalid.bind(*p_14_m01_axi_wvalid);
        p_14_m01_axi_wvalid->set_sv_netview_offsetfromdp(9760568);
        xsim_sc_channel<0, bool > *p_14_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_wready.bind(*p_14_m01_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_bid.bind(*p_14_m01_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_bresp.bind(*p_14_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_buser.bind(*p_14_m01_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_14_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_bvalid.bind(*p_14_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_bready.bind(*p_14_m01_axi_bready);
        p_14_m01_axi_bready->set_sv_netview_offsetfromdp(9760904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_arid.bind(*p_14_m01_axi_arid);
        p_14_m01_axi_arid->set_sv_netview_offsetfromdp(9760960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->m01_axi_araddr.bind(*p_14_m01_axi_araddr);
        p_14_m01_axi_araddr->set_sv_netview_offsetfromdp(9761016);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m01_axi_arlen.bind(*p_14_m01_axi_arlen);
        p_14_m01_axi_arlen->set_sv_netview_offsetfromdp(9761072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_arsize.bind(*p_14_m01_axi_arsize);
        p_14_m01_axi_arsize->set_sv_netview_offsetfromdp(9761128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_arburst.bind(*p_14_m01_axi_arburst);
        p_14_m01_axi_arburst->set_sv_netview_offsetfromdp(9761184);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arlock.bind(*p_14_m01_axi_arlock);
        p_14_m01_axi_arlock->set_sv_netview_offsetfromdp(9761240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_arcache.bind(*p_14_m01_axi_arcache);
        p_14_m01_axi_arcache->set_sv_netview_offsetfromdp(9761296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m01_axi_arprot.bind(*p_14_m01_axi_arprot);
        p_14_m01_axi_arprot->set_sv_netview_offsetfromdp(9761352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m01_axi_arqos.bind(*p_14_m01_axi_arqos);
        p_14_m01_axi_arqos->set_sv_netview_offsetfromdp(9761408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_aruser.bind(*p_14_m01_axi_aruser);
        p_14_m01_axi_aruser->set_sv_netview_offsetfromdp(9761464);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arvalid.bind(*p_14_m01_axi_arvalid);
        p_14_m01_axi_arvalid->set_sv_netview_offsetfromdp(9761520);
        xsim_sc_channel<0, bool > *p_14_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_arready.bind(*p_14_m01_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_rid.bind(*p_14_m01_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m01_axi_rdata.bind(*p_14_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m01_axi_rresp.bind(*p_14_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rlast.bind(*p_14_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->m01_axi_ruser.bind(*p_14_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rvalid.bind(*p_14_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_rready.bind(*p_14_m01_axi_rready);
        p_14_m01_axi_rready->set_sv_netview_offsetfromdp(9761968);
        xsim_sc_channel<0, bool > *p_14_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_aclk.bind(*p_14_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->m01_axi_aresetn.bind(*p_14_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_awid.bind(*p_14_s03_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_awaddr.bind(*p_14_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s03_axi_awlen.bind(*p_14_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_awsize.bind(*p_14_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_awburst.bind(*p_14_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awlock.bind(*p_14_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awcache.bind(*p_14_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_awprot.bind(*p_14_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awregion.bind(*p_14_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_awqos.bind(*p_14_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awvalid.bind(*p_14_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_awready.bind(*p_14_s03_axi_awready);
        p_14_s03_axi_awready->set_sv_netview_offsetfromdp(9762752);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s03_axi_wdata.bind(*p_14_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_wstrb.bind(*p_14_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wlast.bind(*p_14_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wvalid.bind(*p_14_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_wready.bind(*p_14_s03_axi_wready);
        p_14_s03_axi_wready->set_sv_netview_offsetfromdp(9763032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_bid.bind(*p_14_s03_axi_bid);
        p_14_s03_axi_bid->set_sv_netview_offsetfromdp(9763088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_bresp.bind(*p_14_s03_axi_bresp);
        p_14_s03_axi_bresp->set_sv_netview_offsetfromdp(9763144);
        xsim_sc_channel<0, bool > *p_14_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_bvalid.bind(*p_14_s03_axi_bvalid);
        p_14_s03_axi_bvalid->set_sv_netview_offsetfromdp(9763200);
        xsim_sc_channel<0, bool > *p_14_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_bready.bind(*p_14_s03_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_arid.bind(*p_14_s03_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s03_axi_araddr.bind(*p_14_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s03_axi_arlen.bind(*p_14_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_arsize.bind(*p_14_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_arburst.bind(*p_14_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arlock.bind(*p_14_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arcache.bind(*p_14_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s03_axi_arprot.bind(*p_14_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arregion.bind(*p_14_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s03_axi_arqos.bind(*p_14_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arvalid.bind(*p_14_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_arready.bind(*p_14_s03_axi_arready);
        p_14_s03_axi_arready->set_sv_netview_offsetfromdp(9763928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s03_axi_rid.bind(*p_14_s03_axi_rid);
        p_14_s03_axi_rid->set_sv_netview_offsetfromdp(9763984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s03_axi_rdata.bind(*p_14_s03_axi_rdata);
        p_14_s03_axi_rdata->set_sv_netview_offsetfromdp(9764040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s03_axi_rresp.bind(*p_14_s03_axi_rresp);
        p_14_s03_axi_rresp->set_sv_netview_offsetfromdp(9764096);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rlast.bind(*p_14_s03_axi_rlast);
        p_14_s03_axi_rlast->set_sv_netview_offsetfromdp(9764152);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rvalid.bind(*p_14_s03_axi_rvalid);
        p_14_s03_axi_rvalid->set_sv_netview_offsetfromdp(9764208);
        xsim_sc_channel<0, bool > *p_14_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_rready.bind(*p_14_s03_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_aclk.bind(*p_14_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s03_axi_aresetn.bind(*p_14_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_awid.bind(*p_14_s01_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_awaddr.bind(*p_14_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s01_axi_awlen.bind(*p_14_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_awsize.bind(*p_14_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_awburst.bind(*p_14_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awlock.bind(*p_14_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awcache.bind(*p_14_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_awprot.bind(*p_14_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awregion.bind(*p_14_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_awqos.bind(*p_14_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awvalid.bind(*p_14_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_awready.bind(*p_14_s01_axi_awready);
        p_14_s01_axi_awready->set_sv_netview_offsetfromdp(9765048);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s01_axi_wdata.bind(*p_14_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_wstrb.bind(*p_14_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wlast.bind(*p_14_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wvalid.bind(*p_14_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_wready.bind(*p_14_s01_axi_wready);
        p_14_s01_axi_wready->set_sv_netview_offsetfromdp(9765328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_bid.bind(*p_14_s01_axi_bid);
        p_14_s01_axi_bid->set_sv_netview_offsetfromdp(9765384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_bresp.bind(*p_14_s01_axi_bresp);
        p_14_s01_axi_bresp->set_sv_netview_offsetfromdp(9765440);
        xsim_sc_channel<0, bool > *p_14_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_bvalid.bind(*p_14_s01_axi_bvalid);
        p_14_s01_axi_bvalid->set_sv_netview_offsetfromdp(9765496);
        xsim_sc_channel<0, bool > *p_14_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_bready.bind(*p_14_s01_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_arid.bind(*p_14_s01_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s01_axi_araddr.bind(*p_14_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s01_axi_arlen.bind(*p_14_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_arsize.bind(*p_14_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_arburst.bind(*p_14_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arlock.bind(*p_14_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arcache.bind(*p_14_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s01_axi_arprot.bind(*p_14_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arregion.bind(*p_14_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s01_axi_arqos.bind(*p_14_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arvalid.bind(*p_14_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_arready.bind(*p_14_s01_axi_arready);
        p_14_s01_axi_arready->set_sv_netview_offsetfromdp(9766224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s01_axi_rid.bind(*p_14_s01_axi_rid);
        p_14_s01_axi_rid->set_sv_netview_offsetfromdp(9766280);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s01_axi_rdata.bind(*p_14_s01_axi_rdata);
        p_14_s01_axi_rdata->set_sv_netview_offsetfromdp(9766336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s01_axi_rresp.bind(*p_14_s01_axi_rresp);
        p_14_s01_axi_rresp->set_sv_netview_offsetfromdp(9766392);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rlast.bind(*p_14_s01_axi_rlast);
        p_14_s01_axi_rlast->set_sv_netview_offsetfromdp(9766448);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rvalid.bind(*p_14_s01_axi_rvalid);
        p_14_s01_axi_rvalid->set_sv_netview_offsetfromdp(9766504);
        xsim_sc_channel<0, bool > *p_14_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_rready.bind(*p_14_s01_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_aclk.bind(*p_14_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s01_axi_aresetn.bind(*p_14_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_awid.bind(*p_14_s02_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_awaddr.bind(*p_14_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s02_axi_awlen.bind(*p_14_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_awsize.bind(*p_14_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_awburst.bind(*p_14_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awlock.bind(*p_14_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awcache.bind(*p_14_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_awprot.bind(*p_14_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awregion.bind(*p_14_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_awqos.bind(*p_14_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awvalid.bind(*p_14_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_awready.bind(*p_14_s02_axi_awready);
        p_14_s02_axi_awready->set_sv_netview_offsetfromdp(9767344);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s02_axi_wdata.bind(*p_14_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_wstrb.bind(*p_14_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wlast.bind(*p_14_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wvalid.bind(*p_14_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_wready.bind(*p_14_s02_axi_wready);
        p_14_s02_axi_wready->set_sv_netview_offsetfromdp(9767624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_bid.bind(*p_14_s02_axi_bid);
        p_14_s02_axi_bid->set_sv_netview_offsetfromdp(9767680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_bresp.bind(*p_14_s02_axi_bresp);
        p_14_s02_axi_bresp->set_sv_netview_offsetfromdp(9767736);
        xsim_sc_channel<0, bool > *p_14_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_bvalid.bind(*p_14_s02_axi_bvalid);
        p_14_s02_axi_bvalid->set_sv_netview_offsetfromdp(9767792);
        xsim_sc_channel<0, bool > *p_14_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_bready.bind(*p_14_s02_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_arid.bind(*p_14_s02_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s02_axi_araddr.bind(*p_14_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s02_axi_arlen.bind(*p_14_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_arsize.bind(*p_14_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_arburst.bind(*p_14_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arlock.bind(*p_14_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arcache.bind(*p_14_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s02_axi_arprot.bind(*p_14_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arregion.bind(*p_14_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s02_axi_arqos.bind(*p_14_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arvalid.bind(*p_14_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_arready.bind(*p_14_s02_axi_arready);
        p_14_s02_axi_arready->set_sv_netview_offsetfromdp(9768520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s02_axi_rid.bind(*p_14_s02_axi_rid);
        p_14_s02_axi_rid->set_sv_netview_offsetfromdp(9768576);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s02_axi_rdata.bind(*p_14_s02_axi_rdata);
        p_14_s02_axi_rdata->set_sv_netview_offsetfromdp(9768632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s02_axi_rresp.bind(*p_14_s02_axi_rresp);
        p_14_s02_axi_rresp->set_sv_netview_offsetfromdp(9768688);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rlast.bind(*p_14_s02_axi_rlast);
        p_14_s02_axi_rlast->set_sv_netview_offsetfromdp(9768744);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rvalid.bind(*p_14_s02_axi_rvalid);
        p_14_s02_axi_rvalid->set_sv_netview_offsetfromdp(9768800);
        xsim_sc_channel<0, bool > *p_14_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_rready.bind(*p_14_s02_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_aclk.bind(*p_14_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s02_axi_aresetn.bind(*p_14_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_awid.bind(*p_14_s04_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_awaddr.bind(*p_14_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s04_axi_awlen.bind(*p_14_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_awsize.bind(*p_14_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_awburst.bind(*p_14_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awlock.bind(*p_14_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awcache.bind(*p_14_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_awprot.bind(*p_14_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awregion.bind(*p_14_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_awqos.bind(*p_14_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awvalid.bind(*p_14_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_awready.bind(*p_14_s04_axi_awready);
        p_14_s04_axi_awready->set_sv_netview_offsetfromdp(9769640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s04_axi_wdata.bind(*p_14_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_wstrb.bind(*p_14_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wlast.bind(*p_14_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wvalid.bind(*p_14_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_wready.bind(*p_14_s04_axi_wready);
        p_14_s04_axi_wready->set_sv_netview_offsetfromdp(9769920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_bid.bind(*p_14_s04_axi_bid);
        p_14_s04_axi_bid->set_sv_netview_offsetfromdp(9769976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_bresp.bind(*p_14_s04_axi_bresp);
        p_14_s04_axi_bresp->set_sv_netview_offsetfromdp(9770032);
        xsim_sc_channel<0, bool > *p_14_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_bvalid.bind(*p_14_s04_axi_bvalid);
        p_14_s04_axi_bvalid->set_sv_netview_offsetfromdp(9770088);
        xsim_sc_channel<0, bool > *p_14_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_bready.bind(*p_14_s04_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_arid.bind(*p_14_s04_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_14_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_14->s04_axi_araddr.bind(*p_14_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s04_axi_arlen.bind(*p_14_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_arsize.bind(*p_14_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_arburst.bind(*p_14_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arlock.bind(*p_14_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arcache.bind(*p_14_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s04_axi_arprot.bind(*p_14_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arregion.bind(*p_14_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s04_axi_arqos.bind(*p_14_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arvalid.bind(*p_14_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_arready.bind(*p_14_s04_axi_arready);
        p_14_s04_axi_arready->set_sv_netview_offsetfromdp(9770816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_14_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_14->s04_axi_rid.bind(*p_14_s04_axi_rid);
        p_14_s04_axi_rid->set_sv_netview_offsetfromdp(9770872);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_14_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_14->s04_axi_rdata.bind(*p_14_s04_axi_rdata);
        p_14_s04_axi_rdata->set_sv_netview_offsetfromdp(9770928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s04_axi_rresp.bind(*p_14_s04_axi_rresp);
        p_14_s04_axi_rresp->set_sv_netview_offsetfromdp(9770984);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rlast.bind(*p_14_s04_axi_rlast);
        p_14_s04_axi_rlast->set_sv_netview_offsetfromdp(9771040);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rvalid.bind(*p_14_s04_axi_rvalid);
        p_14_s04_axi_rvalid->set_sv_netview_offsetfromdp(9771096);
        xsim_sc_channel<0, bool > *p_14_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_rready.bind(*p_14_s04_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_14_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_aclk.bind(*p_14_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_14_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->s04_axi_aresetn.bind(*p_14_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s04_axi_aresetn);
        sc_inst_15 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_15->xsim_set_dbg_index(23);
        sc_inst_16 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_16->xsim_set_dbg_index(1570);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->saxi_lite_cq_awaddr.bind(*p_16_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->saxi_lite_cq_awprot.bind(*p_16_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_awvalid.bind(*p_16_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_awready.bind(*p_16_saxi_lite_cq_awready);
        p_16_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(11889816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->saxi_lite_cq_wdata.bind(*p_16_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->saxi_lite_cq_wstrb.bind(*p_16_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_wvalid.bind(*p_16_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_wready.bind(*p_16_saxi_lite_cq_wready);
        p_16_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(11890040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->saxi_lite_cq_bresp.bind(*p_16_saxi_lite_cq_bresp);
        p_16_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(11890096);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_bvalid.bind(*p_16_saxi_lite_cq_bvalid);
        p_16_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(11890152);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_bready.bind(*p_16_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->saxi_lite_cq_araddr.bind(*p_16_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->saxi_lite_cq_arprot.bind(*p_16_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_arvalid.bind(*p_16_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_arready.bind(*p_16_saxi_lite_cq_arready);
        p_16_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(11890432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->saxi_lite_cq_rdata.bind(*p_16_saxi_lite_cq_rdata);
        p_16_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(11890488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->saxi_lite_cq_rresp.bind(*p_16_saxi_lite_cq_rresp);
        p_16_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(11890544);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_rvalid.bind(*p_16_saxi_lite_cq_rvalid);
        p_16_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(11890600);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_rready.bind(*p_16_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_aclk.bind(*p_16_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_16_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->saxi_lite_cq_aresetn.bind(*p_16_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->maxi_lite_mb_awaddr.bind(*p_16_maxi_lite_mb_awaddr);
        p_16_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(11890824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->maxi_lite_mb_awprot.bind(*p_16_maxi_lite_mb_awprot);
        p_16_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(11890880);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_awvalid.bind(*p_16_maxi_lite_mb_awvalid);
        p_16_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(11890936);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_awready.bind(*p_16_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->maxi_lite_mb_wdata.bind(*p_16_maxi_lite_mb_wdata);
        p_16_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(11891048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->maxi_lite_mb_wstrb.bind(*p_16_maxi_lite_mb_wstrb);
        p_16_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(11891104);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_wvalid.bind(*p_16_maxi_lite_mb_wvalid);
        p_16_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(11891160);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_wready.bind(*p_16_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->maxi_lite_mb_bresp.bind(*p_16_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_bvalid.bind(*p_16_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_bready.bind(*p_16_maxi_lite_mb_bready);
        p_16_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(11891384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->maxi_lite_mb_araddr.bind(*p_16_maxi_lite_mb_araddr);
        p_16_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(11891440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->maxi_lite_mb_arprot.bind(*p_16_maxi_lite_mb_arprot);
        p_16_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(11891496);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_arvalid.bind(*p_16_maxi_lite_mb_arvalid);
        p_16_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(11891552);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_arready.bind(*p_16_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->maxi_lite_mb_rdata.bind(*p_16_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->maxi_lite_mb_rresp.bind(*p_16_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_rvalid.bind(*p_16_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_rready.bind(*p_16_maxi_lite_mb_rready);
        p_16_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(11891832);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_aclk.bind(*p_16_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_16_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->maxi_lite_mb_aresetn.bind(*p_16_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_16_irq = new xsim_sc_channel<0, bool >();
        sc_inst_16->irq.bind(*p_16_irq);
        (*_glb_hdl_sc_channel_map).push_back(p_16_irq);
        sc_inst_17 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_17->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_awaddr.bind(*p_17_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s00_axi_awlen.bind(*p_17_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_awsize.bind(*p_17_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_awburst.bind(*p_17_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awlock.bind(*p_17_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awcache.bind(*p_17_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_awprot.bind(*p_17_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awregion.bind(*p_17_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_awqos.bind(*p_17_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awvalid.bind(*p_17_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_awready.bind(*p_17_s00_axi_awready);
        p_17_s00_axi_awready->set_sv_netview_offsetfromdp(11930800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s00_axi_wdata.bind(*p_17_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_wstrb.bind(*p_17_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wlast.bind(*p_17_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wvalid.bind(*p_17_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_wready.bind(*p_17_s00_axi_wready);
        p_17_s00_axi_wready->set_sv_netview_offsetfromdp(11931080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_bresp.bind(*p_17_s00_axi_bresp);
        p_17_s00_axi_bresp->set_sv_netview_offsetfromdp(11931136);
        xsim_sc_channel<0, bool > *p_17_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_bvalid.bind(*p_17_s00_axi_bvalid);
        p_17_s00_axi_bvalid->set_sv_netview_offsetfromdp(11931192);
        xsim_sc_channel<0, bool > *p_17_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_bready.bind(*p_17_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->s00_axi_araddr.bind(*p_17_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s00_axi_arlen.bind(*p_17_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_arsize.bind(*p_17_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_arburst.bind(*p_17_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arlock.bind(*p_17_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arcache.bind(*p_17_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s00_axi_arprot.bind(*p_17_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arregion.bind(*p_17_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s00_axi_arqos.bind(*p_17_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arvalid.bind(*p_17_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_arready.bind(*p_17_s00_axi_arready);
        p_17_s00_axi_arready->set_sv_netview_offsetfromdp(11931864);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->s00_axi_rdata.bind(*p_17_s00_axi_rdata);
        p_17_s00_axi_rdata->set_sv_netview_offsetfromdp(11931920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s00_axi_rresp.bind(*p_17_s00_axi_rresp);
        p_17_s00_axi_rresp->set_sv_netview_offsetfromdp(11931976);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rlast.bind(*p_17_s00_axi_rlast);
        p_17_s00_axi_rlast->set_sv_netview_offsetfromdp(11932032);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rvalid.bind(*p_17_s00_axi_rvalid);
        p_17_s00_axi_rvalid->set_sv_netview_offsetfromdp(11932088);
        xsim_sc_channel<0, bool > *p_17_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_rready.bind(*p_17_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_17_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_aclk.bind(*p_17_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s00_axi_aresetn.bind(*p_17_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_awid.bind(*p_17_m00_axi_awid);
        p_17_m00_axi_awid->set_sv_netview_offsetfromdp(11932312);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_17_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_17->m00_axi_awaddr.bind(*p_17_m00_axi_awaddr);
        p_17_m00_axi_awaddr->set_sv_netview_offsetfromdp(11932368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m00_axi_awlen.bind(*p_17_m00_axi_awlen);
        p_17_m00_axi_awlen->set_sv_netview_offsetfromdp(11932424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_awsize.bind(*p_17_m00_axi_awsize);
        p_17_m00_axi_awsize->set_sv_netview_offsetfromdp(11932480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_awburst.bind(*p_17_m00_axi_awburst);
        p_17_m00_axi_awburst->set_sv_netview_offsetfromdp(11932536);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awlock.bind(*p_17_m00_axi_awlock);
        p_17_m00_axi_awlock->set_sv_netview_offsetfromdp(11932592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_awcache.bind(*p_17_m00_axi_awcache);
        p_17_m00_axi_awcache->set_sv_netview_offsetfromdp(11932648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_awprot.bind(*p_17_m00_axi_awprot);
        p_17_m00_axi_awprot->set_sv_netview_offsetfromdp(11932704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_awqos.bind(*p_17_m00_axi_awqos);
        p_17_m00_axi_awqos->set_sv_netview_offsetfromdp(11932760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_awuser.bind(*p_17_m00_axi_awuser);
        p_17_m00_axi_awuser->set_sv_netview_offsetfromdp(11932816);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awvalid.bind(*p_17_m00_axi_awvalid);
        p_17_m00_axi_awvalid->set_sv_netview_offsetfromdp(11932872);
        xsim_sc_channel<0, bool > *p_17_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_awready.bind(*p_17_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m00_axi_wdata.bind(*p_17_m00_axi_wdata);
        p_17_m00_axi_wdata->set_sv_netview_offsetfromdp(11932984);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m00_axi_wstrb.bind(*p_17_m00_axi_wstrb);
        p_17_m00_axi_wstrb->set_sv_netview_offsetfromdp(11933040);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wlast.bind(*p_17_m00_axi_wlast);
        p_17_m00_axi_wlast->set_sv_netview_offsetfromdp(11933096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_wuser.bind(*p_17_m00_axi_wuser);
        p_17_m00_axi_wuser->set_sv_netview_offsetfromdp(11933152);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wvalid.bind(*p_17_m00_axi_wvalid);
        p_17_m00_axi_wvalid->set_sv_netview_offsetfromdp(11933208);
        xsim_sc_channel<0, bool > *p_17_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_wready.bind(*p_17_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_bid.bind(*p_17_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_bresp.bind(*p_17_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_buser.bind(*p_17_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_17_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_bvalid.bind(*p_17_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_bready.bind(*p_17_m00_axi_bready);
        p_17_m00_axi_bready->set_sv_netview_offsetfromdp(11933544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_arid.bind(*p_17_m00_axi_arid);
        p_17_m00_axi_arid->set_sv_netview_offsetfromdp(11933600);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_17_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_17->m00_axi_araddr.bind(*p_17_m00_axi_araddr);
        p_17_m00_axi_araddr->set_sv_netview_offsetfromdp(11933656);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m00_axi_arlen.bind(*p_17_m00_axi_arlen);
        p_17_m00_axi_arlen->set_sv_netview_offsetfromdp(11933712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_arsize.bind(*p_17_m00_axi_arsize);
        p_17_m00_axi_arsize->set_sv_netview_offsetfromdp(11933768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_arburst.bind(*p_17_m00_axi_arburst);
        p_17_m00_axi_arburst->set_sv_netview_offsetfromdp(11933824);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arlock.bind(*p_17_m00_axi_arlock);
        p_17_m00_axi_arlock->set_sv_netview_offsetfromdp(11933880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_arcache.bind(*p_17_m00_axi_arcache);
        p_17_m00_axi_arcache->set_sv_netview_offsetfromdp(11933936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m00_axi_arprot.bind(*p_17_m00_axi_arprot);
        p_17_m00_axi_arprot->set_sv_netview_offsetfromdp(11933992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m00_axi_arqos.bind(*p_17_m00_axi_arqos);
        p_17_m00_axi_arqos->set_sv_netview_offsetfromdp(11934048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_aruser.bind(*p_17_m00_axi_aruser);
        p_17_m00_axi_aruser->set_sv_netview_offsetfromdp(11934104);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arvalid.bind(*p_17_m00_axi_arvalid);
        p_17_m00_axi_arvalid->set_sv_netview_offsetfromdp(11934160);
        xsim_sc_channel<0, bool > *p_17_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_arready.bind(*p_17_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_rid.bind(*p_17_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m00_axi_rdata.bind(*p_17_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m00_axi_rresp.bind(*p_17_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rlast.bind(*p_17_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m00_axi_ruser.bind(*p_17_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rvalid.bind(*p_17_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_rready.bind(*p_17_m00_axi_rready);
        p_17_m00_axi_rready->set_sv_netview_offsetfromdp(11934608);
        xsim_sc_channel<0, bool > *p_17_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_aclk.bind(*p_17_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m00_axi_aresetn.bind(*p_17_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m00_axi_aresetn);
        sc_inst_18 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_18->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_AWADDR.bind(*p_18_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWVALID.bind(*p_18_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWREADY.bind(*p_18_s_axi_control_AWREADY);
        p_18_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11981112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_WDATA.bind(*p_18_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_control_WSTRB.bind(*p_18_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WVALID.bind(*p_18_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WREADY.bind(*p_18_s_axi_control_WREADY);
        p_18_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11981336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_BRESP.bind(*p_18_s_axi_control_BRESP);
        p_18_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11981392);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BVALID.bind(*p_18_s_axi_control_BVALID);
        p_18_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11981448);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BREADY.bind(*p_18_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_ARADDR.bind(*p_18_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARVALID.bind(*p_18_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARREADY.bind(*p_18_s_axi_control_ARREADY);
        p_18_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11981672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_RDATA.bind(*p_18_s_axi_control_RDATA);
        p_18_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11981728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_RRESP.bind(*p_18_s_axi_control_RRESP);
        p_18_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11981784);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RVALID.bind(*p_18_s_axi_control_RVALID);
        p_18_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11981840);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RREADY.bind(*p_18_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_18_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_clk.bind(*p_18_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_clk);
        xsim_sc_channel<0, bool > *p_18_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_rst_n.bind(*p_18_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_rst_n);
        xsim_sc_channel<0, bool > *p_18_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_18->interrupt.bind(*p_18_interrupt);
        p_18_interrupt->set_sv_netview_offsetfromdp(11982064);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_AWADDR.bind(*p_18_m_axi_gmem_AWADDR);
        p_18_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11982120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_AWLEN.bind(*p_18_m_axi_gmem_AWLEN);
        p_18_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11982176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWSIZE.bind(*p_18_m_axi_gmem_AWSIZE);
        p_18_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11982232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_AWBURST.bind(*p_18_m_axi_gmem_AWBURST);
        p_18_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11982288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_AWLOCK.bind(*p_18_m_axi_gmem_AWLOCK);
        p_18_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11982344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWREGION.bind(*p_18_m_axi_gmem_AWREGION);
        p_18_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11982400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWCACHE.bind(*p_18_m_axi_gmem_AWCACHE);
        p_18_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11982456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWPROT.bind(*p_18_m_axi_gmem_AWPROT);
        p_18_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11982512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWQOS.bind(*p_18_m_axi_gmem_AWQOS);
        p_18_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11982568);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWVALID.bind(*p_18_m_axi_gmem_AWVALID);
        p_18_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11982624);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWREADY.bind(*p_18_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_WDATA.bind(*p_18_m_axi_gmem_WDATA);
        p_18_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11982736);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_WSTRB.bind(*p_18_m_axi_gmem_WSTRB);
        p_18_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11982792);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WLAST.bind(*p_18_m_axi_gmem_WLAST);
        p_18_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11982848);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WVALID.bind(*p_18_m_axi_gmem_WVALID);
        p_18_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11982904);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WREADY.bind(*p_18_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_BRESP.bind(*p_18_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BVALID.bind(*p_18_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BREADY.bind(*p_18_m_axi_gmem_BREADY);
        p_18_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11983128);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_ARADDR.bind(*p_18_m_axi_gmem_ARADDR);
        p_18_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11983184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_ARLEN.bind(*p_18_m_axi_gmem_ARLEN);
        p_18_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11983240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARSIZE.bind(*p_18_m_axi_gmem_ARSIZE);
        p_18_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11983296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_ARBURST.bind(*p_18_m_axi_gmem_ARBURST);
        p_18_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11983352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_ARLOCK.bind(*p_18_m_axi_gmem_ARLOCK);
        p_18_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11983408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARREGION.bind(*p_18_m_axi_gmem_ARREGION);
        p_18_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11983464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARCACHE.bind(*p_18_m_axi_gmem_ARCACHE);
        p_18_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11983520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARPROT.bind(*p_18_m_axi_gmem_ARPROT);
        p_18_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11983576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARQOS.bind(*p_18_m_axi_gmem_ARQOS);
        p_18_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11983632);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARVALID.bind(*p_18_m_axi_gmem_ARVALID);
        p_18_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11983688);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARREADY.bind(*p_18_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_RDATA.bind(*p_18_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_RRESP.bind(*p_18_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RLAST.bind(*p_18_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RVALID.bind(*p_18_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RREADY.bind(*p_18_m_axi_gmem_RREADY);
        p_18_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11984024);
        sc_inst_19 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_19->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11984240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11984464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11984520);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11984576);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11984800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11984856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11984912);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11984968);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(11985192);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11985248);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11985304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11985360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11985416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11985472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11985528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11985584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11985640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11985696);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11985752);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11985864);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11985920);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11985976);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11986032);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11986256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11986312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11986368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11986424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11986480);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11986536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11986592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11986648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11986704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11986760);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11986816);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11987152);
        sc_inst_20 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_20->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11987368);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11987592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11987648);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11987704);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11987928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11987984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11988040);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11988096);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(11988320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11988376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11988432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11988488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11988544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11988600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11988656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11988712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11988768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11988824);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11988880);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11988992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11989048);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11989104);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11989160);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11989384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11989440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11989496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11989552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11989608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11989664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11989720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11989776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11989832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11989888);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11989944);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11990280);
        sc_inst_21 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_21->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_AWADDR.bind(*p_21_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWVALID.bind(*p_21_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_AWREADY.bind(*p_21_s_axi_control_AWREADY);
        p_21_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(11990496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_WDATA.bind(*p_21_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_control_WSTRB.bind(*p_21_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WVALID.bind(*p_21_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_WREADY.bind(*p_21_s_axi_control_WREADY);
        p_21_s_axi_control_WREADY->set_sv_netview_offsetfromdp(11990720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_BRESP.bind(*p_21_s_axi_control_BRESP);
        p_21_s_axi_control_BRESP->set_sv_netview_offsetfromdp(11990776);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BVALID.bind(*p_21_s_axi_control_BVALID);
        p_21_s_axi_control_BVALID->set_sv_netview_offsetfromdp(11990832);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_BREADY.bind(*p_21_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_21_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_21->s_axi_control_ARADDR.bind(*p_21_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARVALID.bind(*p_21_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_ARREADY.bind(*p_21_s_axi_control_ARREADY);
        p_21_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(11991056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_control_RDATA.bind(*p_21_s_axi_control_RDATA);
        p_21_s_axi_control_RDATA->set_sv_netview_offsetfromdp(11991112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_control_RRESP.bind(*p_21_s_axi_control_RRESP);
        p_21_s_axi_control_RRESP->set_sv_netview_offsetfromdp(11991168);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RVALID.bind(*p_21_s_axi_control_RVALID);
        p_21_s_axi_control_RVALID->set_sv_netview_offsetfromdp(11991224);
        xsim_sc_channel<0, bool > *p_21_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_control_RREADY.bind(*p_21_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_21_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_clk.bind(*p_21_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_clk);
        xsim_sc_channel<0, bool > *p_21_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_21->ap_rst_n.bind(*p_21_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_21_ap_rst_n);
        xsim_sc_channel<0, bool > *p_21_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_21->interrupt.bind(*p_21_interrupt);
        p_21_interrupt->set_sv_netview_offsetfromdp(11991448);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_AWADDR.bind(*p_21_m_axi_gmem_AWADDR);
        p_21_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(11991504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_AWLEN.bind(*p_21_m_axi_gmem_AWLEN);
        p_21_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(11991560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWSIZE.bind(*p_21_m_axi_gmem_AWSIZE);
        p_21_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(11991616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_AWBURST.bind(*p_21_m_axi_gmem_AWBURST);
        p_21_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(11991672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_AWLOCK.bind(*p_21_m_axi_gmem_AWLOCK);
        p_21_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(11991728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWREGION.bind(*p_21_m_axi_gmem_AWREGION);
        p_21_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(11991784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWCACHE.bind(*p_21_m_axi_gmem_AWCACHE);
        p_21_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(11991840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_AWPROT.bind(*p_21_m_axi_gmem_AWPROT);
        p_21_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(11991896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_AWQOS.bind(*p_21_m_axi_gmem_AWQOS);
        p_21_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(11991952);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWVALID.bind(*p_21_m_axi_gmem_AWVALID);
        p_21_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(11992008);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_AWREADY.bind(*p_21_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_WDATA.bind(*p_21_m_axi_gmem_WDATA);
        p_21_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(11992120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_WSTRB.bind(*p_21_m_axi_gmem_WSTRB);
        p_21_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(11992176);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WLAST.bind(*p_21_m_axi_gmem_WLAST);
        p_21_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(11992232);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WVALID.bind(*p_21_m_axi_gmem_WVALID);
        p_21_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(11992288);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_WREADY.bind(*p_21_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_BRESP.bind(*p_21_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BVALID.bind(*p_21_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_BREADY.bind(*p_21_m_axi_gmem_BREADY);
        p_21_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(11992512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->m_axi_gmem_ARADDR.bind(*p_21_m_axi_gmem_ARADDR);
        p_21_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(11992568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_gmem_ARLEN.bind(*p_21_m_axi_gmem_ARLEN);
        p_21_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(11992624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARSIZE.bind(*p_21_m_axi_gmem_ARSIZE);
        p_21_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(11992680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_ARBURST.bind(*p_21_m_axi_gmem_ARBURST);
        p_21_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(11992736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->m_axi_gmem_ARLOCK.bind(*p_21_m_axi_gmem_ARLOCK);
        p_21_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(11992792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARREGION.bind(*p_21_m_axi_gmem_ARREGION);
        p_21_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(11992848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARCACHE.bind(*p_21_m_axi_gmem_ARCACHE);
        p_21_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(11992904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_gmem_ARPROT.bind(*p_21_m_axi_gmem_ARPROT);
        p_21_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(11992960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_gmem_ARQOS.bind(*p_21_m_axi_gmem_ARQOS);
        p_21_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(11993016);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARVALID.bind(*p_21_m_axi_gmem_ARVALID);
        p_21_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(11993072);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_ARREADY.bind(*p_21_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->m_axi_gmem_RDATA.bind(*p_21_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_gmem_RRESP.bind(*p_21_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RLAST.bind(*p_21_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RVALID.bind(*p_21_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_21_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_gmem_RREADY.bind(*p_21_m_axi_gmem_RREADY);
        p_21_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(11993408);
        sc_inst_22 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_22->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_22_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ui_clk.bind(*p_22_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_awid.bind(*p_22_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->c0_ddr_saxi_awaddr.bind(*p_22_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->c0_ddr_saxi_awlen.bind(*p_22_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_awsize.bind(*p_22_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_awburst.bind(*p_22_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awlock.bind(*p_22_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awcache.bind(*p_22_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_awprot.bind(*p_22_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awregion.bind(*p_22_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_awqos.bind(*p_22_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_awuser.bind(*p_22_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awvalid.bind(*p_22_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_awready.bind(*p_22_c0_ddr_saxi_awready);
        p_22_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(11994240);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->c0_ddr_saxi_wdata.bind(*p_22_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->c0_ddr_saxi_wstrb.bind(*p_22_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wlast.bind(*p_22_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_wuser.bind(*p_22_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wvalid.bind(*p_22_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_wready.bind(*p_22_c0_ddr_saxi_wready);
        p_22_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(11994576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_bid.bind(*p_22_c0_ddr_saxi_bid);
        p_22_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(11994632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_bresp.bind(*p_22_c0_ddr_saxi_bresp);
        p_22_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(11994688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_buser.bind(*p_22_c0_ddr_saxi_buser);
        p_22_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(11994744);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_bvalid.bind(*p_22_c0_ddr_saxi_bvalid);
        p_22_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(11994800);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_bready.bind(*p_22_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_arid.bind(*p_22_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_22_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_22->c0_ddr_saxi_araddr.bind(*p_22_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->c0_ddr_saxi_arlen.bind(*p_22_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_arsize.bind(*p_22_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_arburst.bind(*p_22_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arlock.bind(*p_22_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arcache.bind(*p_22_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->c0_ddr_saxi_arprot.bind(*p_22_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arregion.bind(*p_22_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->c0_ddr_saxi_arqos.bind(*p_22_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_aruser.bind(*p_22_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arvalid.bind(*p_22_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_arready.bind(*p_22_c0_ddr_saxi_arready);
        p_22_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(11995584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_rid.bind(*p_22_c0_ddr_saxi_rid);
        p_22_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(11995640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_22_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_22->c0_ddr_saxi_rdata.bind(*p_22_c0_ddr_saxi_rdata);
        p_22_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(11995696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->c0_ddr_saxi_rresp.bind(*p_22_c0_ddr_saxi_rresp);
        p_22_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(11995752);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rlast.bind(*p_22_c0_ddr_saxi_rlast);
        p_22_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(11995808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->c0_ddr_saxi_ruser.bind(*p_22_c0_ddr_saxi_ruser);
        p_22_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(11995864);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rvalid.bind(*p_22_c0_ddr_saxi_rvalid);
        p_22_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(11995920);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_rready.bind(*p_22_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_aclk.bind(*p_22_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_22_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->c0_ddr_saxi_aresetn.bind(*p_22_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_awid.bind(*p_22_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_awaddr.bind(*p_22_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_xdma_axi_awlen.bind(*p_22_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_awsize.bind(*p_22_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_awburst.bind(*p_22_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awlock.bind(*p_22_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awcache.bind(*p_22_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_awprot.bind(*p_22_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awregion.bind(*p_22_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_awqos.bind(*p_22_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_awuser.bind(*p_22_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awvalid.bind(*p_22_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_awready.bind(*p_22_s_xdma_axi_awready);
        p_22_s_xdma_axi_awready->set_sv_netview_offsetfromdp(11996816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_wdata.bind(*p_22_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_wstrb.bind(*p_22_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wlast.bind(*p_22_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_wuser.bind(*p_22_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wvalid.bind(*p_22_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_wready.bind(*p_22_s_xdma_axi_wready);
        p_22_s_xdma_axi_wready->set_sv_netview_offsetfromdp(11997152);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_bid.bind(*p_22_s_xdma_axi_bid);
        p_22_s_xdma_axi_bid->set_sv_netview_offsetfromdp(11997208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_bresp.bind(*p_22_s_xdma_axi_bresp);
        p_22_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(11997264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_buser.bind(*p_22_s_xdma_axi_buser);
        p_22_s_xdma_axi_buser->set_sv_netview_offsetfromdp(11997320);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_bvalid.bind(*p_22_s_xdma_axi_bvalid);
        p_22_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(11997376);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_bready.bind(*p_22_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_arid.bind(*p_22_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_araddr.bind(*p_22_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_xdma_axi_arlen.bind(*p_22_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_arsize.bind(*p_22_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_arburst.bind(*p_22_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arlock.bind(*p_22_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arcache.bind(*p_22_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_xdma_axi_arprot.bind(*p_22_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arregion.bind(*p_22_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_xdma_axi_arqos.bind(*p_22_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_aruser.bind(*p_22_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arvalid.bind(*p_22_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_arready.bind(*p_22_s_xdma_axi_arready);
        p_22_s_xdma_axi_arready->set_sv_netview_offsetfromdp(11998160);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_22_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_22->s_xdma_axi_rid.bind(*p_22_s_xdma_axi_rid);
        p_22_s_xdma_axi_rid->set_sv_netview_offsetfromdp(11998216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_xdma_axi_rdata.bind(*p_22_s_xdma_axi_rdata);
        p_22_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(11998272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_xdma_axi_rresp.bind(*p_22_s_xdma_axi_rresp);
        p_22_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(11998328);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rlast.bind(*p_22_s_xdma_axi_rlast);
        p_22_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(11998384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->s_xdma_axi_ruser.bind(*p_22_s_xdma_axi_ruser);
        p_22_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(11998440);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rvalid.bind(*p_22_s_xdma_axi_rvalid);
        p_22_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(11998496);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_rready.bind(*p_22_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_aclk.bind(*p_22_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_22_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_xdma_axi_aresetn.bind(*p_22_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_xdma_axi_aresetn);
        sc_inst_23 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_23->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_awid.bind(*p_23_m_aximm_awid);
        p_23_m_aximm_awid->set_sv_netview_offsetfromdp(11998768);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_aximm_awaddr.bind(*p_23_m_aximm_awaddr);
        p_23_m_aximm_awaddr->set_sv_netview_offsetfromdp(11998824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_aximm_awlen.bind(*p_23_m_aximm_awlen);
        p_23_m_aximm_awlen->set_sv_netview_offsetfromdp(11998880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_awsize.bind(*p_23_m_aximm_awsize);
        p_23_m_aximm_awsize->set_sv_netview_offsetfromdp(11998936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_awburst.bind(*p_23_m_aximm_awburst);
        p_23_m_aximm_awburst->set_sv_netview_offsetfromdp(11998992);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awlock.bind(*p_23_m_aximm_awlock);
        p_23_m_aximm_awlock->set_sv_netview_offsetfromdp(11999048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_awcache.bind(*p_23_m_aximm_awcache);
        p_23_m_aximm_awcache->set_sv_netview_offsetfromdp(11999104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_awprot.bind(*p_23_m_aximm_awprot);
        p_23_m_aximm_awprot->set_sv_netview_offsetfromdp(11999160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_awqos.bind(*p_23_m_aximm_awqos);
        p_23_m_aximm_awqos->set_sv_netview_offsetfromdp(11999216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_awuser.bind(*p_23_m_aximm_awuser);
        p_23_m_aximm_awuser->set_sv_netview_offsetfromdp(11999272);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awvalid.bind(*p_23_m_aximm_awvalid);
        p_23_m_aximm_awvalid->set_sv_netview_offsetfromdp(11999328);
        xsim_sc_channel<0, bool > *p_23_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_awready.bind(*p_23_m_aximm_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_wdata.bind(*p_23_m_aximm_wdata);
        p_23_m_aximm_wdata->set_sv_netview_offsetfromdp(11999440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_wstrb.bind(*p_23_m_aximm_wstrb);
        p_23_m_aximm_wstrb->set_sv_netview_offsetfromdp(11999496);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wlast.bind(*p_23_m_aximm_wlast);
        p_23_m_aximm_wlast->set_sv_netview_offsetfromdp(11999552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_wuser.bind(*p_23_m_aximm_wuser);
        p_23_m_aximm_wuser->set_sv_netview_offsetfromdp(11999608);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wvalid.bind(*p_23_m_aximm_wvalid);
        p_23_m_aximm_wvalid->set_sv_netview_offsetfromdp(11999664);
        xsim_sc_channel<0, bool > *p_23_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_wready.bind(*p_23_m_aximm_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_bid.bind(*p_23_m_aximm_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_bresp.bind(*p_23_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_buser.bind(*p_23_m_aximm_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_23_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_bvalid.bind(*p_23_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_bready.bind(*p_23_m_aximm_bready);
        p_23_m_aximm_bready->set_sv_netview_offsetfromdp(12000000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_arid.bind(*p_23_m_aximm_arid);
        p_23_m_aximm_arid->set_sv_netview_offsetfromdp(12000056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_aximm_araddr.bind(*p_23_m_aximm_araddr);
        p_23_m_aximm_araddr->set_sv_netview_offsetfromdp(12000112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_23_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_23->m_aximm_arlen.bind(*p_23_m_aximm_arlen);
        p_23_m_aximm_arlen->set_sv_netview_offsetfromdp(12000168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_arsize.bind(*p_23_m_aximm_arsize);
        p_23_m_aximm_arsize->set_sv_netview_offsetfromdp(12000224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_arburst.bind(*p_23_m_aximm_arburst);
        p_23_m_aximm_arburst->set_sv_netview_offsetfromdp(12000280);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arlock.bind(*p_23_m_aximm_arlock);
        p_23_m_aximm_arlock->set_sv_netview_offsetfromdp(12000336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_arcache.bind(*p_23_m_aximm_arcache);
        p_23_m_aximm_arcache->set_sv_netview_offsetfromdp(12000392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_aximm_arprot.bind(*p_23_m_aximm_arprot);
        p_23_m_aximm_arprot->set_sv_netview_offsetfromdp(12000448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_aximm_arqos.bind(*p_23_m_aximm_arqos);
        p_23_m_aximm_arqos->set_sv_netview_offsetfromdp(12000504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_aruser.bind(*p_23_m_aximm_aruser);
        p_23_m_aximm_aruser->set_sv_netview_offsetfromdp(12000560);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arvalid.bind(*p_23_m_aximm_arvalid);
        p_23_m_aximm_arvalid->set_sv_netview_offsetfromdp(12000616);
        xsim_sc_channel<0, bool > *p_23_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_arready.bind(*p_23_m_aximm_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_rid.bind(*p_23_m_aximm_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_aximm_rdata.bind(*p_23_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_aximm_rresp.bind(*p_23_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rlast.bind(*p_23_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_23_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_23->m_aximm_ruser.bind(*p_23_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rvalid.bind(*p_23_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_rready.bind(*p_23_m_aximm_rready);
        p_23_m_aximm_rready->set_sv_netview_offsetfromdp(12001064);
        xsim_sc_channel<0, bool > *p_23_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_aclk.bind(*p_23_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_23_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_aximm_aresetn.bind(*p_23_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axictrl_awaddr.bind(*p_23_m_axictrl_awaddr);
        p_23_m_axictrl_awaddr->set_sv_netview_offsetfromdp(12001232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axictrl_awprot.bind(*p_23_m_axictrl_awprot);
        p_23_m_axictrl_awprot->set_sv_netview_offsetfromdp(12001288);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_awvalid.bind(*p_23_m_axictrl_awvalid);
        p_23_m_axictrl_awvalid->set_sv_netview_offsetfromdp(12001344);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_awready.bind(*p_23_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axictrl_wdata.bind(*p_23_m_axictrl_wdata);
        p_23_m_axictrl_wdata->set_sv_netview_offsetfromdp(12001456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axictrl_wstrb.bind(*p_23_m_axictrl_wstrb);
        p_23_m_axictrl_wstrb->set_sv_netview_offsetfromdp(12001512);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_wvalid.bind(*p_23_m_axictrl_wvalid);
        p_23_m_axictrl_wvalid->set_sv_netview_offsetfromdp(12001568);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_wready.bind(*p_23_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axictrl_bresp.bind(*p_23_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_bvalid.bind(*p_23_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_bready.bind(*p_23_m_axictrl_bready);
        p_23_m_axictrl_bready->set_sv_netview_offsetfromdp(12001792);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axictrl_araddr.bind(*p_23_m_axictrl_araddr);
        p_23_m_axictrl_araddr->set_sv_netview_offsetfromdp(12001848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axictrl_arprot.bind(*p_23_m_axictrl_arprot);
        p_23_m_axictrl_arprot->set_sv_netview_offsetfromdp(12001904);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_arvalid.bind(*p_23_m_axictrl_arvalid);
        p_23_m_axictrl_arvalid->set_sv_netview_offsetfromdp(12001960);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_arready.bind(*p_23_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axictrl_rdata.bind(*p_23_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axictrl_rresp.bind(*p_23_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_rvalid.bind(*p_23_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_rready.bind(*p_23_m_axictrl_rready);
        p_23_m_axictrl_rready->set_sv_netview_offsetfromdp(12002240);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_aclk.bind(*p_23_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_23_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axictrl_aresetn.bind(*p_23_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
    }
