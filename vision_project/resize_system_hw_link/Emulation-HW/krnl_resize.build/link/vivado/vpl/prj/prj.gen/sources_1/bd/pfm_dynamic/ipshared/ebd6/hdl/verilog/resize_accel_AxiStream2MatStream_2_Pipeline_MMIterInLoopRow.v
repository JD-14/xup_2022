// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module resize_accel_AxiStream2MatStream_2_Pipeline_MMIterInLoopRow (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ldata1_dout,
        ldata1_empty_n,
        ldata1_read,
        in_mat_420_din,
        in_mat_420_full_n,
        in_mat_420_write,
        bound,
        sext_ln1021,
        cols_bound_per_npc_load,
        sub,
        last_blk_width_load,
        sub4,
        add_ln1021,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [127:0] ldata1_dout;
input   ldata1_empty_n;
output   ldata1_read;
output  [7:0] in_mat_420_din;
input   in_mat_420_full_n;
output   in_mat_420_write;
input  [31:0] bound;
input  [4:0] sext_ln1021;
input  [31:0] cols_bound_per_npc_load;
input  [31:0] sub;
input  [3:0] last_blk_width_load;
input  [7:0] sub4;
input  [7:0] add_ln1021;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg ldata1_read;
reg in_mat_420_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln1001_reg_845;
reg   [0:0] icmp_ln1012_reg_854;
reg    ap_predicate_op112_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] icmp_ln1032_reg_939;
reg   [0:0] icmp_ln1032_reg_939_pp0_iter2_reg;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1001_fu_210_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    ldata1_blk_n;
wire    ap_block_pp0_stage0;
reg    in_mat_420_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] bLast_width_fu_228_p2;
reg   [0:0] bLast_width_reg_849;
reg   [0:0] bLast_width_reg_849_pp0_iter2_reg;
wire   [0:0] icmp_ln1012_fu_259_p2;
wire   [0:0] icmp_ln674_1_fu_282_p2;
reg   [0:0] icmp_ln674_1_reg_858;
wire   [7:0] trunc_ln674_1_fu_288_p1;
reg   [7:0] trunc_ln674_1_reg_865;
wire   [7:0] trunc_ln674_2_fu_292_p1;
reg   [7:0] trunc_ln674_2_reg_872;
wire   [7:0] sub_ln674_5_fu_296_p2;
reg   [7:0] sub_ln674_5_reg_878;
wire   [0:0] icmp_ln1013_fu_313_p2;
reg   [0:0] icmp_ln1013_reg_883;
wire   [3:0] trunc_ln1014_fu_319_p1;
reg   [3:0] trunc_ln1014_reg_888;
wire   [0:0] icmp_ln674_fu_333_p2;
reg   [0:0] icmp_ln674_reg_893;
wire   [7:0] trunc_ln674_fu_339_p1;
reg   [7:0] trunc_ln674_reg_900;
wire   [7:0] sub_ln674_fu_343_p2;
reg   [7:0] sub_ln674_reg_907;
wire   [7:0] add_ln674_1_fu_373_p2;
reg   [7:0] add_ln674_1_reg_912;
wire   [0:0] icmp_ln414_fu_379_p2;
reg   [0:0] icmp_ln414_reg_917;
wire   [3:0] trunc_ln414_fu_385_p1;
reg   [3:0] trunc_ln414_reg_925;
wire   [3:0] trunc_ln414_1_fu_389_p1;
reg   [3:0] trunc_ln414_1_reg_933;
wire   [0:0] icmp_ln1032_fu_407_p2;
wire   [7:0] localbuffer_V_6_fu_511_p1;
wire   [7:0] p_Result_12_fu_735_p2;
wire   [7:0] ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_169;
reg   [7:0] ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_169;
reg   [7:0] ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_169;
reg   [7:0] ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_169;
reg   [31:0] rem_fu_98;
wire   [31:0] rem_2_fu_302_p2;
wire   [31:0] rem_1_fu_393_p2;
wire    ap_loop_init;
reg   [30:0] i_fu_102;
wire   [30:0] add_ln1001_fu_215_p2;
reg   [31:0] j_fu_106;
wire   [31:0] j_2_fu_421_p3;
reg   [127:0] p_Val2_s_fu_110;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] zext_ln1001_fu_206_p1;
wire   [3:0] xf_bits_per_clock_fu_233_p3;
wire   [7:0] ptr_width_minus_fu_248_p3;
wire   [31:0] zext_ln1007_fu_240_p1;
wire   [7:0] select_ln1021_fu_265_p3;
wire   [31:0] zext_ln1021_fu_272_p1;
wire   [31:0] grp_fu_178_p2;
wire   [31:0] sub_ln1021_fu_276_p2;
wire   [24:0] tmp_fu_323_p4;
wire   [4:0] zext_ln1007_1_fu_244_p1;
wire  signed [4:0] add_ln1018_fu_349_p2;
wire   [7:0] trunc_ln1018_fu_363_p1;
wire  signed [7:0] sext_ln1018_1_fu_359_p1;
wire   [7:0] sub_ln674_3_fu_367_p2;
wire  signed [31:0] sext_ln1018_fu_355_p1;
wire   [31:0] zext_ln1008_fu_255_p1;
wire   [31:0] add_ln1033_fu_415_p2;
wire   [7:0] sub_ln674_4_fu_452_p2;
wire   [7:0] sub_ln674_6_fu_456_p2;
reg   [127:0] tmp_13_fu_442_p4;
wire   [7:0] select_ln674_3_fu_460_p3;
wire   [7:0] select_ln674_5_fu_474_p3;
wire   [7:0] sub_ln674_7_fu_479_p2;
wire   [127:0] select_ln674_4_fu_467_p3;
wire   [127:0] zext_ln674_3_fu_485_p1;
wire   [127:0] zext_ln674_4_fu_489_p1;
wire   [127:0] lshr_ln674_3_fu_493_p2;
wire   [127:0] lshr_ln674_4_fu_499_p2;
wire   [127:0] p_Result_13_fu_505_p2;
wire   [7:0] add_ln674_fu_525_p2;
wire   [7:0] sub_ln674_1_fu_530_p2;
reg   [127:0] tmp_8_fu_515_p4;
wire   [7:0] select_ln674_fu_535_p3;
wire   [7:0] select_ln674_2_fu_549_p3;
wire   [7:0] sub_ln674_2_fu_554_p2;
wire   [127:0] select_ln674_1_fu_542_p3;
wire   [127:0] zext_ln674_fu_560_p1;
wire   [127:0] zext_ln674_1_fu_564_p1;
wire   [127:0] lshr_ln674_fu_568_p2;
wire   [127:0] lshr_ln674_1_fu_574_p2;
wire   [127:0] p_Result_s_fu_580_p2;
wire   [3:0] sub_ln414_fu_590_p2;
wire   [7:0] zext_ln414_fu_595_p1;
wire   [7:0] tmp_14_fu_586_p1;
wire   [7:0] lshr_ln414_fu_599_p2;
wire   [7:0] p_Result_10_fu_605_p2;
wire   [127:0] zext_ln674_2_fu_618_p1;
wire   [127:0] lshr_ln674_2_fu_621_p2;
wire   [127:0] p_Result_11_fu_627_p2;
wire   [3:0] sub_ln414_1_fu_637_p2;
wire   [3:0] select_ln414_fu_642_p3;
wire   [3:0] select_ln414_2_fu_652_p3;
wire   [3:0] select_ln414_1_fu_647_p3;
wire   [3:0] sub_ln414_2_fu_658_p2;
wire   [7:0] tmp_16_fu_633_p1;
wire   [7:0] zext_ln414_1_fu_664_p1;
wire   [7:0] shl_ln414_fu_676_p2;
reg   [7:0] tmp_12_fu_682_p4;
wire   [7:0] zext_ln414_2_fu_668_p1;
wire   [7:0] zext_ln414_3_fu_672_p1;
wire   [7:0] shl_ln414_1_fu_699_p2;
wire   [7:0] lshr_ln414_1_fu_705_p2;
wire   [7:0] and_ln414_fu_711_p2;
wire   [7:0] localbuffer_V_fu_611_p3;
wire   [7:0] xor_ln414_fu_717_p2;
wire   [7:0] select_ln414_3_fu_692_p3;
wire   [7:0] and_ln414_1_fu_723_p2;
wire   [7:0] and_ln414_2_fu_729_p2;
wire   [3:0] trunc_ln674_3_fu_746_p1;
wire   [3:0] sub_ln674_8_fu_749_p2;
wire   [7:0] zext_ln674_5_fu_755_p1;
wire   [7:0] lshr_ln674_5_fu_759_p2;
wire   [7:0] select_ln1006_fu_765_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_661;
reg    ap_condition_664;
reg    ap_condition_667;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

resize_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln1012_reg_854 == 1'd0) & (icmp_ln1001_reg_845 == 1'd1))) begin
            ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_169 <= localbuffer_V_6_fu_511_p1;
        end else if (((icmp_ln1012_reg_854 == 1'd1) & (icmp_ln1001_reg_845 == 1'd1))) begin
            ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_169 <= p_Result_12_fu_735_p2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_169 <= ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_169;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_102 <= 31'd0;
        end else if (((icmp_ln1001_fu_210_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_102 <= add_ln1001_fu_215_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_106 <= 32'd0;
        end else if (((icmp_ln1001_fu_210_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_106 <= j_2_fu_421_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            p_Val2_s_fu_110 <= 128'd0;
        end else if ((1'b1 == ap_condition_661)) begin
            p_Val2_s_fu_110 <= ldata1_dout;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            rem_fu_98 <= 32'd0;
        end else if ((1'b1 == ap_condition_667)) begin
            rem_fu_98 <= rem_1_fu_393_p2;
        end else if ((1'b1 == ap_condition_664)) begin
            rem_fu_98 <= rem_2_fu_302_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1001_fu_210_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1012_fu_259_p2 == 1'd1))) begin
        add_ln674_1_reg_912 <= add_ln674_1_fu_373_p2;
        icmp_ln1013_reg_883 <= icmp_ln1013_fu_313_p2;
        icmp_ln414_reg_917 <= icmp_ln414_fu_379_p2;
        icmp_ln674_reg_893 <= icmp_ln674_fu_333_p2;
        sub_ln674_reg_907 <= sub_ln674_fu_343_p2;
        trunc_ln1014_reg_888 <= trunc_ln1014_fu_319_p1;
        trunc_ln414_1_reg_933 <= trunc_ln414_1_fu_389_p1;
        trunc_ln414_reg_925 <= trunc_ln414_fu_385_p1;
        trunc_ln674_reg_900 <= trunc_ln674_fu_339_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        icmp_ln1001_reg_845 <= icmp_ln1001_fu_210_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_169 <= ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_169;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_localbuffer_V_8_reg_169 <= ap_phi_reg_pp0_iter1_localbuffer_V_8_reg_169;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1001_fu_210_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bLast_width_reg_849 <= bLast_width_fu_228_p2;
        icmp_ln1012_reg_854 <= icmp_ln1012_fu_259_p2;
        icmp_ln1032_reg_939 <= icmp_ln1032_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        bLast_width_reg_849_pp0_iter2_reg <= bLast_width_reg_849;
        icmp_ln1032_reg_939_pp0_iter2_reg <= icmp_ln1032_reg_939;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1001_fu_210_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1012_fu_259_p2 == 1'd0))) begin
        icmp_ln674_1_reg_858 <= icmp_ln674_1_fu_282_p2;
        sub_ln674_5_reg_878 <= sub_ln674_5_fu_296_p2;
        trunc_ln674_1_reg_865 <= trunc_ln674_1_fu_288_p1;
        trunc_ln674_2_reg_872 <= trunc_ln674_2_fu_292_p1;
    end
end

always @ (*) begin
    if (((icmp_ln1001_fu_210_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1032_reg_939_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_mat_420_blk_n = in_mat_420_full_n;
    end else begin
        in_mat_420_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1032_reg_939_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_mat_420_write = 1'b1;
    end else begin
        in_mat_420_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op112_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ldata1_blk_n = ldata1_empty_n;
    end else begin
        ldata1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op112_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ldata1_read = 1'b1;
    end else begin
        ldata1_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1001_fu_215_p2 = (i_fu_102 + 31'd1);

assign add_ln1018_fu_349_p2 = ($signed(zext_ln1007_1_fu_244_p1) + $signed(5'd31));

assign add_ln1033_fu_415_p2 = (j_fu_106 + 32'd1);

assign add_ln674_1_fu_373_p2 = (sub_ln674_3_fu_367_p2 + 8'd127);

assign add_ln674_fu_525_p2 = ($signed(trunc_ln674_reg_900) + $signed(8'd129));

assign and_ln414_1_fu_723_p2 = (xor_ln414_fu_717_p2 & localbuffer_V_fu_611_p3);

assign and_ln414_2_fu_729_p2 = (select_ln414_3_fu_692_p3 & and_ln414_fu_711_p2);

assign and_ln414_fu_711_p2 = (shl_ln414_1_fu_699_p2 & lshr_ln414_1_fu_705_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln1032_reg_939_pp0_iter2_reg == 1'd1) & (in_mat_420_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op112_read_state3 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln1032_reg_939_pp0_iter2_reg == 1'd1) & (in_mat_420_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op112_read_state3 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln1032_reg_939_pp0_iter2_reg == 1'd1) & (in_mat_420_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op112_read_state3 == 1'b1) & (ldata1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op112_read_state3 == 1'b1) & (ldata1_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((icmp_ln1032_reg_939_pp0_iter2_reg == 1'd1) & (in_mat_420_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_661 = ((icmp_ln1012_reg_854 == 1'd1) & (icmp_ln1001_reg_845 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_condition_664 = ((icmp_ln1001_fu_210_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1012_fu_259_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_667 = ((icmp_ln1001_fu_210_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1012_fu_259_p2 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (ldata1_blk_n & in_mat_420_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_phi_reg_pp0_iter0_localbuffer_V_8_reg_169 = 'bx;

always @ (*) begin
    ap_predicate_op112_read_state3 = ((icmp_ln1012_reg_854 == 1'd1) & (icmp_ln1001_reg_845 == 1'd1));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign bLast_width_fu_228_p2 = ((j_fu_106 == sub) ? 1'b1 : 1'b0);

assign grp_fu_178_p2 = (32'd128 - rem_fu_98);

assign icmp_ln1001_fu_210_p2 = (($signed(zext_ln1001_fu_206_p1) < $signed(bound)) ? 1'b1 : 1'b0);

assign icmp_ln1012_fu_259_p2 = (($signed(rem_fu_98) < $signed(zext_ln1007_fu_240_p1)) ? 1'b1 : 1'b0);

assign icmp_ln1013_fu_313_p2 = ((rem_fu_98 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1032_fu_407_p2 = (($signed(j_fu_106) < $signed(cols_bound_per_npc_load)) ? 1'b1 : 1'b0);

assign icmp_ln414_fu_379_p2 = ((rem_fu_98 > sext_ln1018_fu_355_p1) ? 1'b1 : 1'b0);

assign icmp_ln674_1_fu_282_p2 = ((grp_fu_178_p2 > sub_ln1021_fu_276_p2) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_333_p2 = ((tmp_fu_323_p4 != 25'd0) ? 1'b1 : 1'b0);

assign in_mat_420_din = (select_ln1006_fu_765_p3 & ap_phi_reg_pp0_iter3_localbuffer_V_8_reg_169);

assign j_2_fu_421_p3 = ((bLast_width_fu_228_p2[0:0] == 1'b1) ? 32'd0 : add_ln1033_fu_415_p2);

assign localbuffer_V_6_fu_511_p1 = p_Result_13_fu_505_p2[7:0];

assign localbuffer_V_fu_611_p3 = ((icmp_ln1013_reg_883[0:0] == 1'b1) ? 8'd0 : p_Result_10_fu_605_p2);

assign lshr_ln414_1_fu_705_p2 = 8'd255 >> zext_ln414_3_fu_672_p1;

assign lshr_ln414_fu_599_p2 = 8'd255 >> zext_ln414_fu_595_p1;

assign lshr_ln674_1_fu_574_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln674_1_fu_564_p1;

assign lshr_ln674_2_fu_621_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln674_2_fu_618_p1;

assign lshr_ln674_3_fu_493_p2 = select_ln674_4_fu_467_p3 >> zext_ln674_3_fu_485_p1;

assign lshr_ln674_4_fu_499_p2 = 128'd340282366920938463463374607431768211455 >> zext_ln674_4_fu_489_p1;

assign lshr_ln674_5_fu_759_p2 = 8'd255 >> zext_ln674_5_fu_755_p1;

assign lshr_ln674_fu_568_p2 = select_ln674_1_fu_542_p3 >> zext_ln674_fu_560_p1;

assign p_Result_10_fu_605_p2 = (tmp_14_fu_586_p1 & lshr_ln414_fu_599_p2);

assign p_Result_11_fu_627_p2 = (lshr_ln674_2_fu_621_p2 & ldata1_dout);

assign p_Result_12_fu_735_p2 = (and_ln414_2_fu_729_p2 | and_ln414_1_fu_723_p2);

assign p_Result_13_fu_505_p2 = (lshr_ln674_4_fu_499_p2 & lshr_ln674_3_fu_493_p2);

assign p_Result_s_fu_580_p2 = (lshr_ln674_fu_568_p2 & lshr_ln674_1_fu_574_p2);

assign ptr_width_minus_fu_248_p3 = ((bLast_width_fu_228_p2[0:0] == 1'b1) ? sub4 : 8'd120);

assign rem_1_fu_393_p2 = (rem_fu_98 + zext_ln1008_fu_255_p1);

assign rem_2_fu_302_p2 = (rem_fu_98 - zext_ln1007_fu_240_p1);

assign select_ln1006_fu_765_p3 = ((bLast_width_reg_849_pp0_iter2_reg[0:0] == 1'b1) ? lshr_ln674_5_fu_759_p2 : 8'd255);

assign select_ln1021_fu_265_p3 = ((bLast_width_fu_228_p2[0:0] == 1'b1) ? add_ln1021 : 8'd135);

assign select_ln414_1_fu_647_p3 = ((icmp_ln414_reg_917[0:0] == 1'b1) ? trunc_ln414_1_reg_933 : trunc_ln414_reg_925);

assign select_ln414_2_fu_652_p3 = ((icmp_ln414_reg_917[0:0] == 1'b1) ? sub_ln414_1_fu_637_p2 : trunc_ln414_reg_925);

assign select_ln414_3_fu_692_p3 = ((icmp_ln414_reg_917[0:0] == 1'b1) ? tmp_12_fu_682_p4 : shl_ln414_fu_676_p2);

assign select_ln414_fu_642_p3 = ((icmp_ln414_reg_917[0:0] == 1'b1) ? trunc_ln414_reg_925 : trunc_ln414_1_reg_933);

assign select_ln674_1_fu_542_p3 = ((icmp_ln674_reg_893[0:0] == 1'b1) ? tmp_8_fu_515_p4 : p_Val2_s_fu_110);

assign select_ln674_2_fu_549_p3 = ((icmp_ln674_reg_893[0:0] == 1'b1) ? sub_ln674_reg_907 : trunc_ln674_reg_900);

assign select_ln674_3_fu_460_p3 = ((icmp_ln674_1_reg_858[0:0] == 1'b1) ? sub_ln674_4_fu_452_p2 : sub_ln674_6_fu_456_p2);

assign select_ln674_4_fu_467_p3 = ((icmp_ln674_1_reg_858[0:0] == 1'b1) ? tmp_13_fu_442_p4 : p_Val2_s_fu_110);

assign select_ln674_5_fu_474_p3 = ((icmp_ln674_1_reg_858[0:0] == 1'b1) ? sub_ln674_5_reg_878 : trunc_ln674_1_reg_865);

assign select_ln674_fu_535_p3 = ((icmp_ln674_reg_893[0:0] == 1'b1) ? add_ln674_fu_525_p2 : sub_ln674_1_fu_530_p2);

assign sext_ln1018_1_fu_359_p1 = add_ln1018_fu_349_p2;

assign sext_ln1018_fu_355_p1 = add_ln1018_fu_349_p2;

assign shl_ln414_1_fu_699_p2 = 8'd255 << zext_ln414_2_fu_668_p1;

assign shl_ln414_fu_676_p2 = tmp_16_fu_633_p1 << zext_ln414_1_fu_664_p1;

assign sub_ln1021_fu_276_p2 = (zext_ln1021_fu_272_p1 - rem_fu_98);

assign sub_ln414_1_fu_637_p2 = (4'd7 - trunc_ln414_reg_925);

assign sub_ln414_2_fu_658_p2 = (4'd7 - select_ln414_fu_642_p3);

assign sub_ln414_fu_590_p2 = ($signed(4'd8) - $signed(trunc_ln1014_reg_888));

assign sub_ln674_1_fu_530_p2 = (8'd127 - trunc_ln674_reg_900);

assign sub_ln674_2_fu_554_p2 = (8'd127 - select_ln674_fu_535_p3);

assign sub_ln674_3_fu_367_p2 = ($signed(trunc_ln1018_fu_363_p1) - $signed(sext_ln1018_1_fu_359_p1));

assign sub_ln674_4_fu_452_p2 = (trunc_ln674_1_reg_865 - trunc_ln674_2_reg_872);

assign sub_ln674_5_fu_296_p2 = (8'd127 - trunc_ln674_1_fu_288_p1);

assign sub_ln674_6_fu_456_p2 = (trunc_ln674_2_reg_872 - trunc_ln674_1_reg_865);

assign sub_ln674_7_fu_479_p2 = (8'd127 - select_ln674_3_fu_460_p3);

assign sub_ln674_8_fu_749_p2 = (4'd7 - trunc_ln674_3_fu_746_p1);

assign sub_ln674_fu_343_p2 = (8'd127 - trunc_ln674_fu_339_p1);

integer ap_tvar_int_0;

always @ (shl_ln414_fu_676_p2) begin
    for (ap_tvar_int_0 = 8 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 7 - 0) begin
            tmp_12_fu_682_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_12_fu_682_p4[ap_tvar_int_0] = shl_ln414_fu_676_p2[7 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (p_Val2_s_fu_110) begin
    for (ap_tvar_int_1 = 128 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 127 - 0) begin
            tmp_13_fu_442_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_13_fu_442_p4[ap_tvar_int_1] = p_Val2_s_fu_110[127 - ap_tvar_int_1];
        end
    end
end

assign tmp_14_fu_586_p1 = p_Result_s_fu_580_p2[7:0];

assign tmp_16_fu_633_p1 = p_Result_11_fu_627_p2[7:0];

integer ap_tvar_int_2;

always @ (p_Val2_s_fu_110) begin
    for (ap_tvar_int_2 = 128 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 127 - 0) begin
            tmp_8_fu_515_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_8_fu_515_p4[ap_tvar_int_2] = p_Val2_s_fu_110[127 - ap_tvar_int_2];
        end
    end
end

assign tmp_fu_323_p4 = {{grp_fu_178_p2[31:7]}};

assign trunc_ln1014_fu_319_p1 = rem_fu_98[3:0];

assign trunc_ln1018_fu_363_p1 = rem_fu_98[7:0];

assign trunc_ln414_1_fu_389_p1 = add_ln1018_fu_349_p2[3:0];

assign trunc_ln414_fu_385_p1 = rem_fu_98[3:0];

assign trunc_ln674_1_fu_288_p1 = grp_fu_178_p2[7:0];

assign trunc_ln674_2_fu_292_p1 = sub_ln1021_fu_276_p2[7:0];

assign trunc_ln674_3_fu_746_p1 = sext_ln1021[3:0];

assign trunc_ln674_fu_339_p1 = grp_fu_178_p2[7:0];

assign xf_bits_per_clock_fu_233_p3 = ((bLast_width_fu_228_p2[0:0] == 1'b1) ? last_blk_width_load : 4'd8);

assign xor_ln414_fu_717_p2 = (8'd255 ^ and_ln414_fu_711_p2);

assign zext_ln1001_fu_206_p1 = i_fu_102;

assign zext_ln1007_1_fu_244_p1 = xf_bits_per_clock_fu_233_p3;

assign zext_ln1007_fu_240_p1 = xf_bits_per_clock_fu_233_p3;

assign zext_ln1008_fu_255_p1 = ptr_width_minus_fu_248_p3;

assign zext_ln1021_fu_272_p1 = select_ln1021_fu_265_p3;

assign zext_ln414_1_fu_664_p1 = select_ln414_2_fu_652_p3;

assign zext_ln414_2_fu_668_p1 = select_ln414_1_fu_647_p3;

assign zext_ln414_3_fu_672_p1 = sub_ln414_2_fu_658_p2;

assign zext_ln414_fu_595_p1 = sub_ln414_fu_590_p2;

assign zext_ln674_1_fu_564_p1 = sub_ln674_2_fu_554_p2;

assign zext_ln674_2_fu_618_p1 = add_ln674_1_reg_912;

assign zext_ln674_3_fu_485_p1 = select_ln674_5_fu_474_p3;

assign zext_ln674_4_fu_489_p1 = sub_ln674_7_fu_479_p2;

assign zext_ln674_5_fu_755_p1 = sub_ln674_8_fu_749_p2;

assign zext_ln674_fu_560_p1 = select_ln674_2_fu_549_p3;

endmodule //resize_accel_AxiStream2MatStream_2_Pipeline_MMIterInLoopRow
